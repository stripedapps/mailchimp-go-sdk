/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthorizedApplicationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizedApplicationsInner{}

// AuthorizedApplicationsInner An authorized app.
type AuthorizedApplicationsInner struct {
	// The ID for the application.
	Id *int32 `json:"id,omitempty"`
	// The name of the application.
	Name *string `json:"name,omitempty"`
	// A short description of the application.
	Description *string `json:"description,omitempty"`
	// An array of usernames for users who have linked the app.
	Users []string `json:"users,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewAuthorizedApplicationsInner instantiates a new AuthorizedApplicationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizedApplicationsInner() *AuthorizedApplicationsInner {
	this := AuthorizedApplicationsInner{}
	return &this
}

// NewAuthorizedApplicationsInnerWithDefaults instantiates a new AuthorizedApplicationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizedApplicationsInnerWithDefaults() *AuthorizedApplicationsInner {
	this := AuthorizedApplicationsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthorizedApplicationsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedApplicationsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthorizedApplicationsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AuthorizedApplicationsInner) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuthorizedApplicationsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedApplicationsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuthorizedApplicationsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuthorizedApplicationsInner) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AuthorizedApplicationsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedApplicationsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AuthorizedApplicationsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AuthorizedApplicationsInner) SetDescription(v string) {
	o.Description = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *AuthorizedApplicationsInner) GetUsers() []string {
	if o == nil || IsNil(o.Users) {
		var ret []string
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedApplicationsInner) GetUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *AuthorizedApplicationsInner) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []string and assigns it to the Users field.
func (o *AuthorizedApplicationsInner) SetUsers(v []string) {
	o.Users = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AuthorizedApplicationsInner) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedApplicationsInner) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AuthorizedApplicationsInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *AuthorizedApplicationsInner) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o AuthorizedApplicationsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizedApplicationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableAuthorizedApplicationsInner struct {
	value *AuthorizedApplicationsInner
	isSet bool
}

func (v NullableAuthorizedApplicationsInner) Get() *AuthorizedApplicationsInner {
	return v.value
}

func (v *NullableAuthorizedApplicationsInner) Set(val *AuthorizedApplicationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizedApplicationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizedApplicationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizedApplicationsInner(val *AuthorizedApplicationsInner) *NullableAuthorizedApplicationsInner {
	return &NullableAuthorizedApplicationsInner{value: val, isSet: true}
}

func (v NullableAuthorizedApplicationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizedApplicationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CampaignDefaults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignDefaults{}

// CampaignDefaults [Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/) created for this list.
type CampaignDefaults struct {
	// The default from name for campaigns sent to this list.
	FromName *string `json:"from_name,omitempty"`
	// The default from email for campaigns sent to this list.
	FromEmail *string `json:"from_email,omitempty"`
	// The default subject line for campaigns sent to this list.
	Subject *string `json:"subject,omitempty"`
	// The default language for this lists's forms.
	Language *string `json:"language,omitempty"`
}

// NewCampaignDefaults instantiates a new CampaignDefaults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignDefaults() *CampaignDefaults {
	this := CampaignDefaults{}
	return &this
}

// NewCampaignDefaultsWithDefaults instantiates a new CampaignDefaults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignDefaultsWithDefaults() *CampaignDefaults {
	this := CampaignDefaults{}
	return &this
}

// GetFromName returns the FromName field value if set, zero value otherwise.
func (o *CampaignDefaults) GetFromName() string {
	if o == nil || IsNil(o.FromName) {
		var ret string
		return ret
	}
	return *o.FromName
}

// GetFromNameOk returns a tuple with the FromName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignDefaults) GetFromNameOk() (*string, bool) {
	if o == nil || IsNil(o.FromName) {
		return nil, false
	}
	return o.FromName, true
}

// HasFromName returns a boolean if a field has been set.
func (o *CampaignDefaults) HasFromName() bool {
	if o != nil && !IsNil(o.FromName) {
		return true
	}

	return false
}

// SetFromName gets a reference to the given string and assigns it to the FromName field.
func (o *CampaignDefaults) SetFromName(v string) {
	o.FromName = &v
}

// GetFromEmail returns the FromEmail field value if set, zero value otherwise.
func (o *CampaignDefaults) GetFromEmail() string {
	if o == nil || IsNil(o.FromEmail) {
		var ret string
		return ret
	}
	return *o.FromEmail
}

// GetFromEmailOk returns a tuple with the FromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignDefaults) GetFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.FromEmail) {
		return nil, false
	}
	return o.FromEmail, true
}

// HasFromEmail returns a boolean if a field has been set.
func (o *CampaignDefaults) HasFromEmail() bool {
	if o != nil && !IsNil(o.FromEmail) {
		return true
	}

	return false
}

// SetFromEmail gets a reference to the given string and assigns it to the FromEmail field.
func (o *CampaignDefaults) SetFromEmail(v string) {
	o.FromEmail = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *CampaignDefaults) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignDefaults) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *CampaignDefaults) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *CampaignDefaults) SetSubject(v string) {
	o.Subject = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *CampaignDefaults) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignDefaults) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *CampaignDefaults) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *CampaignDefaults) SetLanguage(v string) {
	o.Language = &v
}

func (o CampaignDefaults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignDefaults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromName) {
		toSerialize["from_name"] = o.FromName
	}
	if !IsNil(o.FromEmail) {
		toSerialize["from_email"] = o.FromEmail
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	return toSerialize, nil
}

type NullableCampaignDefaults struct {
	value *CampaignDefaults
	isSet bool
}

func (v NullableCampaignDefaults) Get() *CampaignDefaults {
	return v.value
}

func (v *NullableCampaignDefaults) Set(val *CampaignDefaults) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignDefaults) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignDefaults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignDefaults(val *CampaignDefaults) *NullableCampaignDefaults {
	return &NullableCampaignDefaults{value: val, isSet: true}
}

func (v NullableCampaignDefaults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignDefaults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



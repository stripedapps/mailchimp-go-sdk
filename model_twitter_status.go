/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the TwitterStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TwitterStatus{}

// TwitterStatus An individual tweet.
type TwitterStatus struct {
	// The body of the tweet.
	Status *string `json:"status,omitempty"`
	// The Twitter handle for the author of the tweet.
	ScreenName *string `json:"screen_name,omitempty"`
	// The individual id for the tweet.
	StatusId *string `json:"status_id,omitempty"`
	// A timestamp for the tweet.
	Datetime *time.Time `json:"datetime,omitempty"`
	// A 'true' or 'false' status of whether the tweet is a retweet.
	IsRetweet *bool `json:"is_retweet,omitempty"`
}

// NewTwitterStatus instantiates a new TwitterStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTwitterStatus() *TwitterStatus {
	this := TwitterStatus{}
	return &this
}

// NewTwitterStatusWithDefaults instantiates a new TwitterStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTwitterStatusWithDefaults() *TwitterStatus {
	this := TwitterStatus{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TwitterStatus) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwitterStatus) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TwitterStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TwitterStatus) SetStatus(v string) {
	o.Status = &v
}

// GetScreenName returns the ScreenName field value if set, zero value otherwise.
func (o *TwitterStatus) GetScreenName() string {
	if o == nil || IsNil(o.ScreenName) {
		var ret string
		return ret
	}
	return *o.ScreenName
}

// GetScreenNameOk returns a tuple with the ScreenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwitterStatus) GetScreenNameOk() (*string, bool) {
	if o == nil || IsNil(o.ScreenName) {
		return nil, false
	}
	return o.ScreenName, true
}

// HasScreenName returns a boolean if a field has been set.
func (o *TwitterStatus) HasScreenName() bool {
	if o != nil && !IsNil(o.ScreenName) {
		return true
	}

	return false
}

// SetScreenName gets a reference to the given string and assigns it to the ScreenName field.
func (o *TwitterStatus) SetScreenName(v string) {
	o.ScreenName = &v
}

// GetStatusId returns the StatusId field value if set, zero value otherwise.
func (o *TwitterStatus) GetStatusId() string {
	if o == nil || IsNil(o.StatusId) {
		var ret string
		return ret
	}
	return *o.StatusId
}

// GetStatusIdOk returns a tuple with the StatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwitterStatus) GetStatusIdOk() (*string, bool) {
	if o == nil || IsNil(o.StatusId) {
		return nil, false
	}
	return o.StatusId, true
}

// HasStatusId returns a boolean if a field has been set.
func (o *TwitterStatus) HasStatusId() bool {
	if o != nil && !IsNil(o.StatusId) {
		return true
	}

	return false
}

// SetStatusId gets a reference to the given string and assigns it to the StatusId field.
func (o *TwitterStatus) SetStatusId(v string) {
	o.StatusId = &v
}

// GetDatetime returns the Datetime field value if set, zero value otherwise.
func (o *TwitterStatus) GetDatetime() time.Time {
	if o == nil || IsNil(o.Datetime) {
		var ret time.Time
		return ret
	}
	return *o.Datetime
}

// GetDatetimeOk returns a tuple with the Datetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwitterStatus) GetDatetimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Datetime) {
		return nil, false
	}
	return o.Datetime, true
}

// HasDatetime returns a boolean if a field has been set.
func (o *TwitterStatus) HasDatetime() bool {
	if o != nil && !IsNil(o.Datetime) {
		return true
	}

	return false
}

// SetDatetime gets a reference to the given time.Time and assigns it to the Datetime field.
func (o *TwitterStatus) SetDatetime(v time.Time) {
	o.Datetime = &v
}

// GetIsRetweet returns the IsRetweet field value if set, zero value otherwise.
func (o *TwitterStatus) GetIsRetweet() bool {
	if o == nil || IsNil(o.IsRetweet) {
		var ret bool
		return ret
	}
	return *o.IsRetweet
}

// GetIsRetweetOk returns a tuple with the IsRetweet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwitterStatus) GetIsRetweetOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRetweet) {
		return nil, false
	}
	return o.IsRetweet, true
}

// HasIsRetweet returns a boolean if a field has been set.
func (o *TwitterStatus) HasIsRetweet() bool {
	if o != nil && !IsNil(o.IsRetweet) {
		return true
	}

	return false
}

// SetIsRetweet gets a reference to the given bool and assigns it to the IsRetweet field.
func (o *TwitterStatus) SetIsRetweet(v bool) {
	o.IsRetweet = &v
}

func (o TwitterStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TwitterStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ScreenName) {
		toSerialize["screen_name"] = o.ScreenName
	}
	if !IsNil(o.StatusId) {
		toSerialize["status_id"] = o.StatusId
	}
	if !IsNil(o.Datetime) {
		toSerialize["datetime"] = o.Datetime
	}
	if !IsNil(o.IsRetweet) {
		toSerialize["is_retweet"] = o.IsRetweet
	}
	return toSerialize, nil
}

type NullableTwitterStatus struct {
	value *TwitterStatus
	isSet bool
}

func (v NullableTwitterStatus) Get() *TwitterStatus {
	return v.value
}

func (v *NullableTwitterStatus) Set(val *TwitterStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableTwitterStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableTwitterStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTwitterStatus(val *TwitterStatus) *NullableTwitterStatus {
	return &NullableTwitterStatus{value: val, isSet: true}
}

func (v NullableTwitterStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTwitterStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AutomationTrigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutomationTrigger{}

// AutomationTrigger Available triggers for Automation workflows.
type AutomationTrigger struct {
	// The type of Automation workflow.
	WorkflowType string `json:"workflow_type"`
	// The title of the workflow type.
	WorkflowTitle *string `json:"workflow_title,omitempty"`
	Runtime *AutomationWorkflowRuntimeSettings `json:"runtime,omitempty"`
	// The number of emails in the Automation workflow.
	WorkflowEmailsCount *int32 `json:"workflow_emails_count,omitempty"`
}

// NewAutomationTrigger instantiates a new AutomationTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutomationTrigger(workflowType string) *AutomationTrigger {
	this := AutomationTrigger{}
	this.WorkflowType = workflowType
	return &this
}

// NewAutomationTriggerWithDefaults instantiates a new AutomationTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutomationTriggerWithDefaults() *AutomationTrigger {
	this := AutomationTrigger{}
	return &this
}

// GetWorkflowType returns the WorkflowType field value
func (o *AutomationTrigger) GetWorkflowType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowType
}

// GetWorkflowTypeOk returns a tuple with the WorkflowType field value
// and a boolean to check if the value has been set.
func (o *AutomationTrigger) GetWorkflowTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowType, true
}

// SetWorkflowType sets field value
func (o *AutomationTrigger) SetWorkflowType(v string) {
	o.WorkflowType = v
}

// GetWorkflowTitle returns the WorkflowTitle field value if set, zero value otherwise.
func (o *AutomationTrigger) GetWorkflowTitle() string {
	if o == nil || IsNil(o.WorkflowTitle) {
		var ret string
		return ret
	}
	return *o.WorkflowTitle
}

// GetWorkflowTitleOk returns a tuple with the WorkflowTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationTrigger) GetWorkflowTitleOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowTitle) {
		return nil, false
	}
	return o.WorkflowTitle, true
}

// HasWorkflowTitle returns a boolean if a field has been set.
func (o *AutomationTrigger) HasWorkflowTitle() bool {
	if o != nil && !IsNil(o.WorkflowTitle) {
		return true
	}

	return false
}

// SetWorkflowTitle gets a reference to the given string and assigns it to the WorkflowTitle field.
func (o *AutomationTrigger) SetWorkflowTitle(v string) {
	o.WorkflowTitle = &v
}

// GetRuntime returns the Runtime field value if set, zero value otherwise.
func (o *AutomationTrigger) GetRuntime() AutomationWorkflowRuntimeSettings {
	if o == nil || IsNil(o.Runtime) {
		var ret AutomationWorkflowRuntimeSettings
		return ret
	}
	return *o.Runtime
}

// GetRuntimeOk returns a tuple with the Runtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationTrigger) GetRuntimeOk() (*AutomationWorkflowRuntimeSettings, bool) {
	if o == nil || IsNil(o.Runtime) {
		return nil, false
	}
	return o.Runtime, true
}

// HasRuntime returns a boolean if a field has been set.
func (o *AutomationTrigger) HasRuntime() bool {
	if o != nil && !IsNil(o.Runtime) {
		return true
	}

	return false
}

// SetRuntime gets a reference to the given AutomationWorkflowRuntimeSettings and assigns it to the Runtime field.
func (o *AutomationTrigger) SetRuntime(v AutomationWorkflowRuntimeSettings) {
	o.Runtime = &v
}

// GetWorkflowEmailsCount returns the WorkflowEmailsCount field value if set, zero value otherwise.
func (o *AutomationTrigger) GetWorkflowEmailsCount() int32 {
	if o == nil || IsNil(o.WorkflowEmailsCount) {
		var ret int32
		return ret
	}
	return *o.WorkflowEmailsCount
}

// GetWorkflowEmailsCountOk returns a tuple with the WorkflowEmailsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationTrigger) GetWorkflowEmailsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.WorkflowEmailsCount) {
		return nil, false
	}
	return o.WorkflowEmailsCount, true
}

// HasWorkflowEmailsCount returns a boolean if a field has been set.
func (o *AutomationTrigger) HasWorkflowEmailsCount() bool {
	if o != nil && !IsNil(o.WorkflowEmailsCount) {
		return true
	}

	return false
}

// SetWorkflowEmailsCount gets a reference to the given int32 and assigns it to the WorkflowEmailsCount field.
func (o *AutomationTrigger) SetWorkflowEmailsCount(v int32) {
	o.WorkflowEmailsCount = &v
}

func (o AutomationTrigger) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutomationTrigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["workflow_type"] = o.WorkflowType
	if !IsNil(o.WorkflowTitle) {
		toSerialize["workflow_title"] = o.WorkflowTitle
	}
	if !IsNil(o.Runtime) {
		toSerialize["runtime"] = o.Runtime
	}
	if !IsNil(o.WorkflowEmailsCount) {
		toSerialize["workflow_emails_count"] = o.WorkflowEmailsCount
	}
	return toSerialize, nil
}

type NullableAutomationTrigger struct {
	value *AutomationTrigger
	isSet bool
}

func (v NullableAutomationTrigger) Get() *AutomationTrigger {
	return v.value
}

func (v *NullableAutomationTrigger) Set(val *AutomationTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomationTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomationTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomationTrigger(val *AutomationTrigger) *NullableAutomationTrigger {
	return &NullableAutomationTrigger{value: val, isSet: true}
}

func (v NullableAutomationTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomationTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



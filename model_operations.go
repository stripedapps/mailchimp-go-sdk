/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Operations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Operations{}

// Operations struct for Operations
type Operations struct {
	// The HTTP method to use for the operation.
	Method string `json:"method"`
	// The relative path to use for the operation.
	Path string `json:"path"`
	// Any request query parameters. Example parameters: {\"count\":10, \"offset\":0}
	Params map[string]interface{} `json:"params,omitempty"`
	// A string containing the JSON body to use with the request.
	Body *string `json:"body,omitempty"`
	// An optional client-supplied id returned with the operation results.
	OperationId *string `json:"operation_id,omitempty"`
}

// NewOperations instantiates a new Operations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperations(method string, path string) *Operations {
	this := Operations{}
	this.Method = method
	this.Path = path
	return &this
}

// NewOperationsWithDefaults instantiates a new Operations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperationsWithDefaults() *Operations {
	this := Operations{}
	return &this
}

// GetMethod returns the Method field value
func (o *Operations) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *Operations) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *Operations) SetMethod(v string) {
	o.Method = v
}

// GetPath returns the Path field value
func (o *Operations) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *Operations) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *Operations) SetPath(v string) {
	o.Path = v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *Operations) GetParams() map[string]interface{} {
	if o == nil || IsNil(o.Params) {
		var ret map[string]interface{}
		return ret
	}
	return o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Operations) GetParamsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Params) {
		return map[string]interface{}{}, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *Operations) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given map[string]interface{} and assigns it to the Params field.
func (o *Operations) SetParams(v map[string]interface{}) {
	o.Params = v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *Operations) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Operations) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *Operations) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *Operations) SetBody(v string) {
	o.Body = &v
}

// GetOperationId returns the OperationId field value if set, zero value otherwise.
func (o *Operations) GetOperationId() string {
	if o == nil || IsNil(o.OperationId) {
		var ret string
		return ret
	}
	return *o.OperationId
}

// GetOperationIdOk returns a tuple with the OperationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Operations) GetOperationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperationId) {
		return nil, false
	}
	return o.OperationId, true
}

// HasOperationId returns a boolean if a field has been set.
func (o *Operations) HasOperationId() bool {
	if o != nil && !IsNil(o.OperationId) {
		return true
	}

	return false
}

// SetOperationId gets a reference to the given string and assigns it to the OperationId field.
func (o *Operations) SetOperationId(v string) {
	o.OperationId = &v
}

func (o Operations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Operations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["method"] = o.Method
	toSerialize["path"] = o.Path
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.OperationId) {
		toSerialize["operation_id"] = o.OperationId
	}
	return toSerialize, nil
}

type NullableOperations struct {
	value *Operations
	isSet bool
}

func (v NullableOperations) Get() *Operations {
	return v.value
}

func (v *NullableOperations) Set(val *Operations) {
	v.value = val
	v.isSet = true
}

func (v NullableOperations) IsSet() bool {
	return v.isSet
}

func (v *NullableOperations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperations(val *Operations) *NullableOperations {
	return &NullableOperations{value: val, isSet: true}
}

func (v NullableOperations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



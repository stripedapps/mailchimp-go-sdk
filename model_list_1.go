/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the List1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &List1{}

// List1 List settings for the Automation.
type List1 struct {
	// The id of the List.
	ListId *string `json:"list_id,omitempty"`
	// The id of the store.
	StoreId *string `json:"store_id,omitempty"`
}

// NewList1 instantiates a new List1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewList1() *List1 {
	this := List1{}
	return &this
}

// NewList1WithDefaults instantiates a new List1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewList1WithDefaults() *List1 {
	this := List1{}
	return &this
}

// GetListId returns the ListId field value if set, zero value otherwise.
func (o *List1) GetListId() string {
	if o == nil || IsNil(o.ListId) {
		var ret string
		return ret
	}
	return *o.ListId
}

// GetListIdOk returns a tuple with the ListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *List1) GetListIdOk() (*string, bool) {
	if o == nil || IsNil(o.ListId) {
		return nil, false
	}
	return o.ListId, true
}

// HasListId returns a boolean if a field has been set.
func (o *List1) HasListId() bool {
	if o != nil && !IsNil(o.ListId) {
		return true
	}

	return false
}

// SetListId gets a reference to the given string and assigns it to the ListId field.
func (o *List1) SetListId(v string) {
	o.ListId = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *List1) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *List1) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *List1) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *List1) SetStoreId(v string) {
	o.StoreId = &v
}

func (o List1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o List1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ListId) {
		toSerialize["list_id"] = o.ListId
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	return toSerialize, nil
}

type NullableList1 struct {
	value *List1
	isSet bool
}

func (v NullableList1) Get() *List1 {
	return v.value
}

func (v *NullableList1) Set(val *List1) {
	v.value = val
	v.isSet = true
}

func (v NullableList1) IsSet() bool {
	return v.isSet
}

func (v *NullableList1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableList1(val *List1) *NullableList1 {
	return &NullableList1{value: val, isSet: true}
}

func (v NullableList1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableList1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AbandonedCartAutomation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AbandonedCartAutomation{}

// AbandonedCartAutomation abandonedCart automation details.
type AbandonedCartAutomation struct {
	// Whether this store supports the abandonedCart automation.
	IsSupported *bool `json:"is_supported,omitempty"`
	// Unique ID of automation parent campaign.
	Id *string `json:"id,omitempty"`
	// Status of the abandonedCart automation.
	Status *string `json:"status,omitempty"`
}

// NewAbandonedCartAutomation instantiates a new AbandonedCartAutomation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbandonedCartAutomation() *AbandonedCartAutomation {
	this := AbandonedCartAutomation{}
	return &this
}

// NewAbandonedCartAutomationWithDefaults instantiates a new AbandonedCartAutomation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbandonedCartAutomationWithDefaults() *AbandonedCartAutomation {
	this := AbandonedCartAutomation{}
	return &this
}

// GetIsSupported returns the IsSupported field value if set, zero value otherwise.
func (o *AbandonedCartAutomation) GetIsSupported() bool {
	if o == nil || IsNil(o.IsSupported) {
		var ret bool
		return ret
	}
	return *o.IsSupported
}

// GetIsSupportedOk returns a tuple with the IsSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbandonedCartAutomation) GetIsSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSupported) {
		return nil, false
	}
	return o.IsSupported, true
}

// HasIsSupported returns a boolean if a field has been set.
func (o *AbandonedCartAutomation) HasIsSupported() bool {
	if o != nil && !IsNil(o.IsSupported) {
		return true
	}

	return false
}

// SetIsSupported gets a reference to the given bool and assigns it to the IsSupported field.
func (o *AbandonedCartAutomation) SetIsSupported(v bool) {
	o.IsSupported = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AbandonedCartAutomation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbandonedCartAutomation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AbandonedCartAutomation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AbandonedCartAutomation) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AbandonedCartAutomation) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbandonedCartAutomation) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AbandonedCartAutomation) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AbandonedCartAutomation) SetStatus(v string) {
	o.Status = &v
}

func (o AbandonedCartAutomation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AbandonedCartAutomation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsSupported) {
		toSerialize["is_supported"] = o.IsSupported
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableAbandonedCartAutomation struct {
	value *AbandonedCartAutomation
	isSet bool
}

func (v NullableAbandonedCartAutomation) Get() *AbandonedCartAutomation {
	return v.value
}

func (v *NullableAbandonedCartAutomation) Set(val *AbandonedCartAutomation) {
	v.value = val
	v.isSet = true
}

func (v NullableAbandonedCartAutomation) IsSet() bool {
	return v.isSet
}

func (v *NullableAbandonedCartAutomation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbandonedCartAutomation(val *AbandonedCartAutomation) *NullableAbandonedCartAutomation {
	return &NullableAbandonedCartAutomation{value: val, isSet: true}
}

func (v NullableAbandonedCartAutomation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbandonedCartAutomation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



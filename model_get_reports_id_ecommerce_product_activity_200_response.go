/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetReportsIdEcommerceProductActivity200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetReportsIdEcommerceProductActivity200Response{}

// GetReportsIdEcommerceProductActivity200Response A collection of ecommerce products.
type GetReportsIdEcommerceProductActivity200Response struct {
	Products []GetReportsIdEcommerceProductActivity200ResponseProductsInner `json:"products,omitempty"`
	// The total number of items matching the query regardless of pagination.
	TotalItems *int32 `json:"total_items,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewGetReportsIdEcommerceProductActivity200Response instantiates a new GetReportsIdEcommerceProductActivity200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetReportsIdEcommerceProductActivity200Response() *GetReportsIdEcommerceProductActivity200Response {
	this := GetReportsIdEcommerceProductActivity200Response{}
	return &this
}

// NewGetReportsIdEcommerceProductActivity200ResponseWithDefaults instantiates a new GetReportsIdEcommerceProductActivity200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetReportsIdEcommerceProductActivity200ResponseWithDefaults() *GetReportsIdEcommerceProductActivity200Response {
	this := GetReportsIdEcommerceProductActivity200Response{}
	return &this
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *GetReportsIdEcommerceProductActivity200Response) GetProducts() []GetReportsIdEcommerceProductActivity200ResponseProductsInner {
	if o == nil || IsNil(o.Products) {
		var ret []GetReportsIdEcommerceProductActivity200ResponseProductsInner
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportsIdEcommerceProductActivity200Response) GetProductsOk() ([]GetReportsIdEcommerceProductActivity200ResponseProductsInner, bool) {
	if o == nil || IsNil(o.Products) {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *GetReportsIdEcommerceProductActivity200Response) HasProducts() bool {
	if o != nil && !IsNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []GetReportsIdEcommerceProductActivity200ResponseProductsInner and assigns it to the Products field.
func (o *GetReportsIdEcommerceProductActivity200Response) SetProducts(v []GetReportsIdEcommerceProductActivity200ResponseProductsInner) {
	o.Products = v
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise.
func (o *GetReportsIdEcommerceProductActivity200Response) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems) {
		var ret int32
		return ret
	}
	return *o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportsIdEcommerceProductActivity200Response) GetTotalItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItems) {
		return nil, false
	}
	return o.TotalItems, true
}

// HasTotalItems returns a boolean if a field has been set.
func (o *GetReportsIdEcommerceProductActivity200Response) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given int32 and assigns it to the TotalItems field.
func (o *GetReportsIdEcommerceProductActivity200Response) SetTotalItems(v int32) {
	o.TotalItems = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetReportsIdEcommerceProductActivity200Response) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReportsIdEcommerceProductActivity200Response) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetReportsIdEcommerceProductActivity200Response) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *GetReportsIdEcommerceProductActivity200Response) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o GetReportsIdEcommerceProductActivity200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetReportsIdEcommerceProductActivity200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	if !IsNil(o.TotalItems) {
		toSerialize["total_items"] = o.TotalItems
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetReportsIdEcommerceProductActivity200Response struct {
	value *GetReportsIdEcommerceProductActivity200Response
	isSet bool
}

func (v NullableGetReportsIdEcommerceProductActivity200Response) Get() *GetReportsIdEcommerceProductActivity200Response {
	return v.value
}

func (v *NullableGetReportsIdEcommerceProductActivity200Response) Set(val *GetReportsIdEcommerceProductActivity200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetReportsIdEcommerceProductActivity200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetReportsIdEcommerceProductActivity200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetReportsIdEcommerceProductActivity200Response(val *GetReportsIdEcommerceProductActivity200Response) *NullableGetReportsIdEcommerceProductActivity200Response {
	return &NullableGetReportsIdEcommerceProductActivity200Response{value: val, isSet: true}
}

func (v NullableGetReportsIdEcommerceProductActivity200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetReportsIdEcommerceProductActivity200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



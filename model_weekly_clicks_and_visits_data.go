/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WeeklyClicksAndVisitsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeeklyClicksAndVisitsData{}

// WeeklyClicksAndVisitsData The clicks and visits data from the last five weeks.
type WeeklyClicksAndVisitsData struct {
	// The total number of clicks in a week.
	Clicks []Clicks1Inner1 `json:"clicks,omitempty"`
	// The total number of visits in a week.
	Visits []VisitsInner1 `json:"visits,omitempty"`
	UniqueVisits []UniqueVisitsInner `json:"unique_visits,omitempty"`
}

// NewWeeklyClicksAndVisitsData instantiates a new WeeklyClicksAndVisitsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeeklyClicksAndVisitsData() *WeeklyClicksAndVisitsData {
	this := WeeklyClicksAndVisitsData{}
	return &this
}

// NewWeeklyClicksAndVisitsDataWithDefaults instantiates a new WeeklyClicksAndVisitsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeeklyClicksAndVisitsDataWithDefaults() *WeeklyClicksAndVisitsData {
	this := WeeklyClicksAndVisitsData{}
	return &this
}

// GetClicks returns the Clicks field value if set, zero value otherwise.
func (o *WeeklyClicksAndVisitsData) GetClicks() []Clicks1Inner1 {
	if o == nil || IsNil(o.Clicks) {
		var ret []Clicks1Inner1
		return ret
	}
	return o.Clicks
}

// GetClicksOk returns a tuple with the Clicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WeeklyClicksAndVisitsData) GetClicksOk() ([]Clicks1Inner1, bool) {
	if o == nil || IsNil(o.Clicks) {
		return nil, false
	}
	return o.Clicks, true
}

// HasClicks returns a boolean if a field has been set.
func (o *WeeklyClicksAndVisitsData) HasClicks() bool {
	if o != nil && !IsNil(o.Clicks) {
		return true
	}

	return false
}

// SetClicks gets a reference to the given []Clicks1Inner1 and assigns it to the Clicks field.
func (o *WeeklyClicksAndVisitsData) SetClicks(v []Clicks1Inner1) {
	o.Clicks = v
}

// GetVisits returns the Visits field value if set, zero value otherwise.
func (o *WeeklyClicksAndVisitsData) GetVisits() []VisitsInner1 {
	if o == nil || IsNil(o.Visits) {
		var ret []VisitsInner1
		return ret
	}
	return o.Visits
}

// GetVisitsOk returns a tuple with the Visits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WeeklyClicksAndVisitsData) GetVisitsOk() ([]VisitsInner1, bool) {
	if o == nil || IsNil(o.Visits) {
		return nil, false
	}
	return o.Visits, true
}

// HasVisits returns a boolean if a field has been set.
func (o *WeeklyClicksAndVisitsData) HasVisits() bool {
	if o != nil && !IsNil(o.Visits) {
		return true
	}

	return false
}

// SetVisits gets a reference to the given []VisitsInner1 and assigns it to the Visits field.
func (o *WeeklyClicksAndVisitsData) SetVisits(v []VisitsInner1) {
	o.Visits = v
}

// GetUniqueVisits returns the UniqueVisits field value if set, zero value otherwise.
func (o *WeeklyClicksAndVisitsData) GetUniqueVisits() []UniqueVisitsInner {
	if o == nil || IsNil(o.UniqueVisits) {
		var ret []UniqueVisitsInner
		return ret
	}
	return o.UniqueVisits
}

// GetUniqueVisitsOk returns a tuple with the UniqueVisits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WeeklyClicksAndVisitsData) GetUniqueVisitsOk() ([]UniqueVisitsInner, bool) {
	if o == nil || IsNil(o.UniqueVisits) {
		return nil, false
	}
	return o.UniqueVisits, true
}

// HasUniqueVisits returns a boolean if a field has been set.
func (o *WeeklyClicksAndVisitsData) HasUniqueVisits() bool {
	if o != nil && !IsNil(o.UniqueVisits) {
		return true
	}

	return false
}

// SetUniqueVisits gets a reference to the given []UniqueVisitsInner and assigns it to the UniqueVisits field.
func (o *WeeklyClicksAndVisitsData) SetUniqueVisits(v []UniqueVisitsInner) {
	o.UniqueVisits = v
}

func (o WeeklyClicksAndVisitsData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeeklyClicksAndVisitsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Clicks) {
		toSerialize["clicks"] = o.Clicks
	}
	if !IsNil(o.Visits) {
		toSerialize["visits"] = o.Visits
	}
	if !IsNil(o.UniqueVisits) {
		toSerialize["unique_visits"] = o.UniqueVisits
	}
	return toSerialize, nil
}

type NullableWeeklyClicksAndVisitsData struct {
	value *WeeklyClicksAndVisitsData
	isSet bool
}

func (v NullableWeeklyClicksAndVisitsData) Get() *WeeklyClicksAndVisitsData {
	return v.value
}

func (v *NullableWeeklyClicksAndVisitsData) Set(val *WeeklyClicksAndVisitsData) {
	v.value = val
	v.isSet = true
}

func (v NullableWeeklyClicksAndVisitsData) IsSet() bool {
	return v.isSet
}

func (v *NullableWeeklyClicksAndVisitsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeeklyClicksAndVisitsData(val *WeeklyClicksAndVisitsData) *NullableWeeklyClicksAndVisitsData {
	return &NullableWeeklyClicksAndVisitsData{value: val, isSet: true}
}

func (v NullableWeeklyClicksAndVisitsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeeklyClicksAndVisitsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



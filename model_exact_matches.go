/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExactMatches type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExactMatches{}

// ExactMatches Exact matches of the provided search query.
type ExactMatches struct {
	// An array of objects, each representing a specific list member.
	Members []ListMembers2 `json:"members,omitempty"`
	// The total number of items matching the query regardless of pagination.
	TotalItems *int32 `json:"total_items,omitempty"`
}

// NewExactMatches instantiates a new ExactMatches object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExactMatches() *ExactMatches {
	this := ExactMatches{}
	return &this
}

// NewExactMatchesWithDefaults instantiates a new ExactMatches object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExactMatchesWithDefaults() *ExactMatches {
	this := ExactMatches{}
	return &this
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *ExactMatches) GetMembers() []ListMembers2 {
	if o == nil || IsNil(o.Members) {
		var ret []ListMembers2
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExactMatches) GetMembersOk() ([]ListMembers2, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *ExactMatches) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []ListMembers2 and assigns it to the Members field.
func (o *ExactMatches) SetMembers(v []ListMembers2) {
	o.Members = v
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise.
func (o *ExactMatches) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems) {
		var ret int32
		return ret
	}
	return *o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExactMatches) GetTotalItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItems) {
		return nil, false
	}
	return o.TotalItems, true
}

// HasTotalItems returns a boolean if a field has been set.
func (o *ExactMatches) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given int32 and assigns it to the TotalItems field.
func (o *ExactMatches) SetTotalItems(v int32) {
	o.TotalItems = &v
}

func (o ExactMatches) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExactMatches) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.TotalItems) {
		toSerialize["total_items"] = o.TotalItems
	}
	return toSerialize, nil
}

type NullableExactMatches struct {
	value *ExactMatches
	isSet bool
}

func (v NullableExactMatches) Get() *ExactMatches {
	return v.value
}

func (v *NullableExactMatches) Set(val *ExactMatches) {
	v.value = val
	v.isSet = true
}

func (v NullableExactMatches) IsSet() bool {
	return v.isSet
}

func (v *NullableExactMatches) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExactMatches(val *ExactMatches) *NullableExactMatches {
	return &NullableExactMatches{value: val, isSet: true}
}

func (v NullableExactMatches) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExactMatches) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



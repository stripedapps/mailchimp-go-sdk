/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CartLines type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartLines{}

// CartLines A collection of a cart's line items.
type CartLines struct {
	// The store id.
	StoreId *string `json:"store_id,omitempty"`
	// The cart id.
	CartId *string `json:"cart_id,omitempty"`
	// An array of objects, each representing a cart's line item.
	Lines []ECommerceCartLineItem `json:"lines,omitempty"`
	// The total number of items matching the query regardless of pagination.
	TotalItems *int32 `json:"total_items,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewCartLines instantiates a new CartLines object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartLines() *CartLines {
	this := CartLines{}
	return &this
}

// NewCartLinesWithDefaults instantiates a new CartLines object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartLinesWithDefaults() *CartLines {
	this := CartLines{}
	return &this
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *CartLines) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartLines) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *CartLines) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *CartLines) SetStoreId(v string) {
	o.StoreId = &v
}

// GetCartId returns the CartId field value if set, zero value otherwise.
func (o *CartLines) GetCartId() string {
	if o == nil || IsNil(o.CartId) {
		var ret string
		return ret
	}
	return *o.CartId
}

// GetCartIdOk returns a tuple with the CartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartLines) GetCartIdOk() (*string, bool) {
	if o == nil || IsNil(o.CartId) {
		return nil, false
	}
	return o.CartId, true
}

// HasCartId returns a boolean if a field has been set.
func (o *CartLines) HasCartId() bool {
	if o != nil && !IsNil(o.CartId) {
		return true
	}

	return false
}

// SetCartId gets a reference to the given string and assigns it to the CartId field.
func (o *CartLines) SetCartId(v string) {
	o.CartId = &v
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *CartLines) GetLines() []ECommerceCartLineItem {
	if o == nil || IsNil(o.Lines) {
		var ret []ECommerceCartLineItem
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartLines) GetLinesOk() ([]ECommerceCartLineItem, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *CartLines) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []ECommerceCartLineItem and assigns it to the Lines field.
func (o *CartLines) SetLines(v []ECommerceCartLineItem) {
	o.Lines = v
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise.
func (o *CartLines) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems) {
		var ret int32
		return ret
	}
	return *o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartLines) GetTotalItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItems) {
		return nil, false
	}
	return o.TotalItems, true
}

// HasTotalItems returns a boolean if a field has been set.
func (o *CartLines) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given int32 and assigns it to the TotalItems field.
func (o *CartLines) SetTotalItems(v int32) {
	o.TotalItems = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CartLines) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartLines) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CartLines) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *CartLines) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o CartLines) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartLines) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.CartId) {
		toSerialize["cart_id"] = o.CartId
	}
	if !IsNil(o.Lines) {
		toSerialize["lines"] = o.Lines
	}
	if !IsNil(o.TotalItems) {
		toSerialize["total_items"] = o.TotalItems
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableCartLines struct {
	value *CartLines
	isSet bool
}

func (v NullableCartLines) Get() *CartLines {
	return v.value
}

func (v *NullableCartLines) Set(val *CartLines) {
	v.value = val
	v.isSet = true
}

func (v NullableCartLines) IsSet() bool {
	return v.isSet
}

func (v *NullableCartLines) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartLines(val *CartLines) *NullableCartLines {
	return &NullableCartLines{value: val, isSet: true}
}

func (v NullableCartLines) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartLines) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



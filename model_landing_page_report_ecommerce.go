/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LandingPageReportEcommerce type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LandingPageReportEcommerce{}

// LandingPageReportEcommerce struct for LandingPageReportEcommerce
type LandingPageReportEcommerce struct {
	// The total revenue of this landing page.
	TotalRevenue *float32 `json:"total_revenue,omitempty"`
	// The user's currency code.
	CurrencyCode *string `json:"currency_code,omitempty"`
	// The total number of orders associated with this landing page.
	TotalOrders *int32 `json:"total_orders,omitempty"`
	// The average order revenue of this landing page.
	AverageOrderRevenue *float32 `json:"average_order_revenue,omitempty"`
}

// NewLandingPageReportEcommerce instantiates a new LandingPageReportEcommerce object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLandingPageReportEcommerce() *LandingPageReportEcommerce {
	this := LandingPageReportEcommerce{}
	return &this
}

// NewLandingPageReportEcommerceWithDefaults instantiates a new LandingPageReportEcommerce object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLandingPageReportEcommerceWithDefaults() *LandingPageReportEcommerce {
	this := LandingPageReportEcommerce{}
	return &this
}

// GetTotalRevenue returns the TotalRevenue field value if set, zero value otherwise.
func (o *LandingPageReportEcommerce) GetTotalRevenue() float32 {
	if o == nil || IsNil(o.TotalRevenue) {
		var ret float32
		return ret
	}
	return *o.TotalRevenue
}

// GetTotalRevenueOk returns a tuple with the TotalRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LandingPageReportEcommerce) GetTotalRevenueOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalRevenue) {
		return nil, false
	}
	return o.TotalRevenue, true
}

// HasTotalRevenue returns a boolean if a field has been set.
func (o *LandingPageReportEcommerce) HasTotalRevenue() bool {
	if o != nil && !IsNil(o.TotalRevenue) {
		return true
	}

	return false
}

// SetTotalRevenue gets a reference to the given float32 and assigns it to the TotalRevenue field.
func (o *LandingPageReportEcommerce) SetTotalRevenue(v float32) {
	o.TotalRevenue = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *LandingPageReportEcommerce) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LandingPageReportEcommerce) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *LandingPageReportEcommerce) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *LandingPageReportEcommerce) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetTotalOrders returns the TotalOrders field value if set, zero value otherwise.
func (o *LandingPageReportEcommerce) GetTotalOrders() int32 {
	if o == nil || IsNil(o.TotalOrders) {
		var ret int32
		return ret
	}
	return *o.TotalOrders
}

// GetTotalOrdersOk returns a tuple with the TotalOrders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LandingPageReportEcommerce) GetTotalOrdersOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalOrders) {
		return nil, false
	}
	return o.TotalOrders, true
}

// HasTotalOrders returns a boolean if a field has been set.
func (o *LandingPageReportEcommerce) HasTotalOrders() bool {
	if o != nil && !IsNil(o.TotalOrders) {
		return true
	}

	return false
}

// SetTotalOrders gets a reference to the given int32 and assigns it to the TotalOrders field.
func (o *LandingPageReportEcommerce) SetTotalOrders(v int32) {
	o.TotalOrders = &v
}

// GetAverageOrderRevenue returns the AverageOrderRevenue field value if set, zero value otherwise.
func (o *LandingPageReportEcommerce) GetAverageOrderRevenue() float32 {
	if o == nil || IsNil(o.AverageOrderRevenue) {
		var ret float32
		return ret
	}
	return *o.AverageOrderRevenue
}

// GetAverageOrderRevenueOk returns a tuple with the AverageOrderRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LandingPageReportEcommerce) GetAverageOrderRevenueOk() (*float32, bool) {
	if o == nil || IsNil(o.AverageOrderRevenue) {
		return nil, false
	}
	return o.AverageOrderRevenue, true
}

// HasAverageOrderRevenue returns a boolean if a field has been set.
func (o *LandingPageReportEcommerce) HasAverageOrderRevenue() bool {
	if o != nil && !IsNil(o.AverageOrderRevenue) {
		return true
	}

	return false
}

// SetAverageOrderRevenue gets a reference to the given float32 and assigns it to the AverageOrderRevenue field.
func (o *LandingPageReportEcommerce) SetAverageOrderRevenue(v float32) {
	o.AverageOrderRevenue = &v
}

func (o LandingPageReportEcommerce) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LandingPageReportEcommerce) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalRevenue) {
		toSerialize["total_revenue"] = o.TotalRevenue
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if !IsNil(o.TotalOrders) {
		toSerialize["total_orders"] = o.TotalOrders
	}
	if !IsNil(o.AverageOrderRevenue) {
		toSerialize["average_order_revenue"] = o.AverageOrderRevenue
	}
	return toSerialize, nil
}

type NullableLandingPageReportEcommerce struct {
	value *LandingPageReportEcommerce
	isSet bool
}

func (v NullableLandingPageReportEcommerce) Get() *LandingPageReportEcommerce {
	return v.value
}

func (v *NullableLandingPageReportEcommerce) Set(val *LandingPageReportEcommerce) {
	v.value = val
	v.isSet = true
}

func (v NullableLandingPageReportEcommerce) IsSet() bool {
	return v.isSet
}

func (v *NullableLandingPageReportEcommerce) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLandingPageReportEcommerce(val *LandingPageReportEcommerce) *NullableLandingPageReportEcommerce {
	return &NullableLandingPageReportEcommerce{value: val, isSet: true}
}

func (v NullableLandingPageReportEcommerce) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLandingPageReportEcommerce) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SendingSchedule1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendingSchedule1{}

// SendingSchedule1 The schedule for sending the RSS Campaign.
type SendingSchedule1 struct {
	// The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-details/).
	Hour *int32 `json:"hour,omitempty"`
	DailySend *DailySendingDays `json:"daily_send,omitempty"`
	// The day of the week to send a weekly RSS Campaign.
	WeeklySendDay *string `json:"weekly_send_day,omitempty"`
	// The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
	MonthlySendDate *float32 `json:"monthly_send_date,omitempty"`
}

// NewSendingSchedule1 instantiates a new SendingSchedule1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendingSchedule1() *SendingSchedule1 {
	this := SendingSchedule1{}
	return &this
}

// NewSendingSchedule1WithDefaults instantiates a new SendingSchedule1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendingSchedule1WithDefaults() *SendingSchedule1 {
	this := SendingSchedule1{}
	return &this
}

// GetHour returns the Hour field value if set, zero value otherwise.
func (o *SendingSchedule1) GetHour() int32 {
	if o == nil || IsNil(o.Hour) {
		var ret int32
		return ret
	}
	return *o.Hour
}

// GetHourOk returns a tuple with the Hour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendingSchedule1) GetHourOk() (*int32, bool) {
	if o == nil || IsNil(o.Hour) {
		return nil, false
	}
	return o.Hour, true
}

// HasHour returns a boolean if a field has been set.
func (o *SendingSchedule1) HasHour() bool {
	if o != nil && !IsNil(o.Hour) {
		return true
	}

	return false
}

// SetHour gets a reference to the given int32 and assigns it to the Hour field.
func (o *SendingSchedule1) SetHour(v int32) {
	o.Hour = &v
}

// GetDailySend returns the DailySend field value if set, zero value otherwise.
func (o *SendingSchedule1) GetDailySend() DailySendingDays {
	if o == nil || IsNil(o.DailySend) {
		var ret DailySendingDays
		return ret
	}
	return *o.DailySend
}

// GetDailySendOk returns a tuple with the DailySend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendingSchedule1) GetDailySendOk() (*DailySendingDays, bool) {
	if o == nil || IsNil(o.DailySend) {
		return nil, false
	}
	return o.DailySend, true
}

// HasDailySend returns a boolean if a field has been set.
func (o *SendingSchedule1) HasDailySend() bool {
	if o != nil && !IsNil(o.DailySend) {
		return true
	}

	return false
}

// SetDailySend gets a reference to the given DailySendingDays and assigns it to the DailySend field.
func (o *SendingSchedule1) SetDailySend(v DailySendingDays) {
	o.DailySend = &v
}

// GetWeeklySendDay returns the WeeklySendDay field value if set, zero value otherwise.
func (o *SendingSchedule1) GetWeeklySendDay() string {
	if o == nil || IsNil(o.WeeklySendDay) {
		var ret string
		return ret
	}
	return *o.WeeklySendDay
}

// GetWeeklySendDayOk returns a tuple with the WeeklySendDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendingSchedule1) GetWeeklySendDayOk() (*string, bool) {
	if o == nil || IsNil(o.WeeklySendDay) {
		return nil, false
	}
	return o.WeeklySendDay, true
}

// HasWeeklySendDay returns a boolean if a field has been set.
func (o *SendingSchedule1) HasWeeklySendDay() bool {
	if o != nil && !IsNil(o.WeeklySendDay) {
		return true
	}

	return false
}

// SetWeeklySendDay gets a reference to the given string and assigns it to the WeeklySendDay field.
func (o *SendingSchedule1) SetWeeklySendDay(v string) {
	o.WeeklySendDay = &v
}

// GetMonthlySendDate returns the MonthlySendDate field value if set, zero value otherwise.
func (o *SendingSchedule1) GetMonthlySendDate() float32 {
	if o == nil || IsNil(o.MonthlySendDate) {
		var ret float32
		return ret
	}
	return *o.MonthlySendDate
}

// GetMonthlySendDateOk returns a tuple with the MonthlySendDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendingSchedule1) GetMonthlySendDateOk() (*float32, bool) {
	if o == nil || IsNil(o.MonthlySendDate) {
		return nil, false
	}
	return o.MonthlySendDate, true
}

// HasMonthlySendDate returns a boolean if a field has been set.
func (o *SendingSchedule1) HasMonthlySendDate() bool {
	if o != nil && !IsNil(o.MonthlySendDate) {
		return true
	}

	return false
}

// SetMonthlySendDate gets a reference to the given float32 and assigns it to the MonthlySendDate field.
func (o *SendingSchedule1) SetMonthlySendDate(v float32) {
	o.MonthlySendDate = &v
}

func (o SendingSchedule1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendingSchedule1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hour) {
		toSerialize["hour"] = o.Hour
	}
	if !IsNil(o.DailySend) {
		toSerialize["daily_send"] = o.DailySend
	}
	if !IsNil(o.WeeklySendDay) {
		toSerialize["weekly_send_day"] = o.WeeklySendDay
	}
	if !IsNil(o.MonthlySendDate) {
		toSerialize["monthly_send_date"] = o.MonthlySendDate
	}
	return toSerialize, nil
}

type NullableSendingSchedule1 struct {
	value *SendingSchedule1
	isSet bool
}

func (v NullableSendingSchedule1) Get() *SendingSchedule1 {
	return v.value
}

func (v *NullableSendingSchedule1) Set(val *SendingSchedule1) {
	v.value = val
	v.isSet = true
}

func (v NullableSendingSchedule1) IsSet() bool {
	return v.isSet
}

func (v *NullableSendingSchedule1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendingSchedule1(val *SendingSchedule1) *NullableSendingSchedule1 {
	return &NullableSendingSchedule1{value: val, isSet: true}
}

func (v NullableSendingSchedule1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendingSchedule1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



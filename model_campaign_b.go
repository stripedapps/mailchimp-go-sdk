/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CampaignB type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignB{}

// CampaignB Stats for Campaign B.
type CampaignB struct {
	// Bounces for Campaign B.
	Bounces *int32 `json:"bounces,omitempty"`
	// Abuse reports for Campaign B.
	AbuseReports *int32 `json:"abuse_reports,omitempty"`
	// Unsubscribes for Campaign B.
	Unsubs *int32 `json:"unsubs,omitempty"`
	// Recipients clicks for Campaign B.
	RecipientClicks *int32 `json:"recipient_clicks,omitempty"`
	// Forwards for Campaign B.
	Forwards *int32 `json:"forwards,omitempty"`
	// Opens for forwards from Campaign B.
	ForwardsOpens *int32 `json:"forwards_opens,omitempty"`
	// Opens for Campaign B.
	Opens *int32 `json:"opens,omitempty"`
	// The last open for Campaign B.
	LastOpen *string `json:"last_open,omitempty"`
	// Unique opens for Campaign B.
	UniqueOpens *int32 `json:"unique_opens,omitempty"`
}

// NewCampaignB instantiates a new CampaignB object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignB() *CampaignB {
	this := CampaignB{}
	return &this
}

// NewCampaignBWithDefaults instantiates a new CampaignB object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignBWithDefaults() *CampaignB {
	this := CampaignB{}
	return &this
}

// GetBounces returns the Bounces field value if set, zero value otherwise.
func (o *CampaignB) GetBounces() int32 {
	if o == nil || IsNil(o.Bounces) {
		var ret int32
		return ret
	}
	return *o.Bounces
}

// GetBouncesOk returns a tuple with the Bounces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignB) GetBouncesOk() (*int32, bool) {
	if o == nil || IsNil(o.Bounces) {
		return nil, false
	}
	return o.Bounces, true
}

// HasBounces returns a boolean if a field has been set.
func (o *CampaignB) HasBounces() bool {
	if o != nil && !IsNil(o.Bounces) {
		return true
	}

	return false
}

// SetBounces gets a reference to the given int32 and assigns it to the Bounces field.
func (o *CampaignB) SetBounces(v int32) {
	o.Bounces = &v
}

// GetAbuseReports returns the AbuseReports field value if set, zero value otherwise.
func (o *CampaignB) GetAbuseReports() int32 {
	if o == nil || IsNil(o.AbuseReports) {
		var ret int32
		return ret
	}
	return *o.AbuseReports
}

// GetAbuseReportsOk returns a tuple with the AbuseReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignB) GetAbuseReportsOk() (*int32, bool) {
	if o == nil || IsNil(o.AbuseReports) {
		return nil, false
	}
	return o.AbuseReports, true
}

// HasAbuseReports returns a boolean if a field has been set.
func (o *CampaignB) HasAbuseReports() bool {
	if o != nil && !IsNil(o.AbuseReports) {
		return true
	}

	return false
}

// SetAbuseReports gets a reference to the given int32 and assigns it to the AbuseReports field.
func (o *CampaignB) SetAbuseReports(v int32) {
	o.AbuseReports = &v
}

// GetUnsubs returns the Unsubs field value if set, zero value otherwise.
func (o *CampaignB) GetUnsubs() int32 {
	if o == nil || IsNil(o.Unsubs) {
		var ret int32
		return ret
	}
	return *o.Unsubs
}

// GetUnsubsOk returns a tuple with the Unsubs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignB) GetUnsubsOk() (*int32, bool) {
	if o == nil || IsNil(o.Unsubs) {
		return nil, false
	}
	return o.Unsubs, true
}

// HasUnsubs returns a boolean if a field has been set.
func (o *CampaignB) HasUnsubs() bool {
	if o != nil && !IsNil(o.Unsubs) {
		return true
	}

	return false
}

// SetUnsubs gets a reference to the given int32 and assigns it to the Unsubs field.
func (o *CampaignB) SetUnsubs(v int32) {
	o.Unsubs = &v
}

// GetRecipientClicks returns the RecipientClicks field value if set, zero value otherwise.
func (o *CampaignB) GetRecipientClicks() int32 {
	if o == nil || IsNil(o.RecipientClicks) {
		var ret int32
		return ret
	}
	return *o.RecipientClicks
}

// GetRecipientClicksOk returns a tuple with the RecipientClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignB) GetRecipientClicksOk() (*int32, bool) {
	if o == nil || IsNil(o.RecipientClicks) {
		return nil, false
	}
	return o.RecipientClicks, true
}

// HasRecipientClicks returns a boolean if a field has been set.
func (o *CampaignB) HasRecipientClicks() bool {
	if o != nil && !IsNil(o.RecipientClicks) {
		return true
	}

	return false
}

// SetRecipientClicks gets a reference to the given int32 and assigns it to the RecipientClicks field.
func (o *CampaignB) SetRecipientClicks(v int32) {
	o.RecipientClicks = &v
}

// GetForwards returns the Forwards field value if set, zero value otherwise.
func (o *CampaignB) GetForwards() int32 {
	if o == nil || IsNil(o.Forwards) {
		var ret int32
		return ret
	}
	return *o.Forwards
}

// GetForwardsOk returns a tuple with the Forwards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignB) GetForwardsOk() (*int32, bool) {
	if o == nil || IsNil(o.Forwards) {
		return nil, false
	}
	return o.Forwards, true
}

// HasForwards returns a boolean if a field has been set.
func (o *CampaignB) HasForwards() bool {
	if o != nil && !IsNil(o.Forwards) {
		return true
	}

	return false
}

// SetForwards gets a reference to the given int32 and assigns it to the Forwards field.
func (o *CampaignB) SetForwards(v int32) {
	o.Forwards = &v
}

// GetForwardsOpens returns the ForwardsOpens field value if set, zero value otherwise.
func (o *CampaignB) GetForwardsOpens() int32 {
	if o == nil || IsNil(o.ForwardsOpens) {
		var ret int32
		return ret
	}
	return *o.ForwardsOpens
}

// GetForwardsOpensOk returns a tuple with the ForwardsOpens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignB) GetForwardsOpensOk() (*int32, bool) {
	if o == nil || IsNil(o.ForwardsOpens) {
		return nil, false
	}
	return o.ForwardsOpens, true
}

// HasForwardsOpens returns a boolean if a field has been set.
func (o *CampaignB) HasForwardsOpens() bool {
	if o != nil && !IsNil(o.ForwardsOpens) {
		return true
	}

	return false
}

// SetForwardsOpens gets a reference to the given int32 and assigns it to the ForwardsOpens field.
func (o *CampaignB) SetForwardsOpens(v int32) {
	o.ForwardsOpens = &v
}

// GetOpens returns the Opens field value if set, zero value otherwise.
func (o *CampaignB) GetOpens() int32 {
	if o == nil || IsNil(o.Opens) {
		var ret int32
		return ret
	}
	return *o.Opens
}

// GetOpensOk returns a tuple with the Opens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignB) GetOpensOk() (*int32, bool) {
	if o == nil || IsNil(o.Opens) {
		return nil, false
	}
	return o.Opens, true
}

// HasOpens returns a boolean if a field has been set.
func (o *CampaignB) HasOpens() bool {
	if o != nil && !IsNil(o.Opens) {
		return true
	}

	return false
}

// SetOpens gets a reference to the given int32 and assigns it to the Opens field.
func (o *CampaignB) SetOpens(v int32) {
	o.Opens = &v
}

// GetLastOpen returns the LastOpen field value if set, zero value otherwise.
func (o *CampaignB) GetLastOpen() string {
	if o == nil || IsNil(o.LastOpen) {
		var ret string
		return ret
	}
	return *o.LastOpen
}

// GetLastOpenOk returns a tuple with the LastOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignB) GetLastOpenOk() (*string, bool) {
	if o == nil || IsNil(o.LastOpen) {
		return nil, false
	}
	return o.LastOpen, true
}

// HasLastOpen returns a boolean if a field has been set.
func (o *CampaignB) HasLastOpen() bool {
	if o != nil && !IsNil(o.LastOpen) {
		return true
	}

	return false
}

// SetLastOpen gets a reference to the given string and assigns it to the LastOpen field.
func (o *CampaignB) SetLastOpen(v string) {
	o.LastOpen = &v
}

// GetUniqueOpens returns the UniqueOpens field value if set, zero value otherwise.
func (o *CampaignB) GetUniqueOpens() int32 {
	if o == nil || IsNil(o.UniqueOpens) {
		var ret int32
		return ret
	}
	return *o.UniqueOpens
}

// GetUniqueOpensOk returns a tuple with the UniqueOpens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignB) GetUniqueOpensOk() (*int32, bool) {
	if o == nil || IsNil(o.UniqueOpens) {
		return nil, false
	}
	return o.UniqueOpens, true
}

// HasUniqueOpens returns a boolean if a field has been set.
func (o *CampaignB) HasUniqueOpens() bool {
	if o != nil && !IsNil(o.UniqueOpens) {
		return true
	}

	return false
}

// SetUniqueOpens gets a reference to the given int32 and assigns it to the UniqueOpens field.
func (o *CampaignB) SetUniqueOpens(v int32) {
	o.UniqueOpens = &v
}

func (o CampaignB) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignB) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bounces) {
		toSerialize["bounces"] = o.Bounces
	}
	if !IsNil(o.AbuseReports) {
		toSerialize["abuse_reports"] = o.AbuseReports
	}
	if !IsNil(o.Unsubs) {
		toSerialize["unsubs"] = o.Unsubs
	}
	if !IsNil(o.RecipientClicks) {
		toSerialize["recipient_clicks"] = o.RecipientClicks
	}
	if !IsNil(o.Forwards) {
		toSerialize["forwards"] = o.Forwards
	}
	if !IsNil(o.ForwardsOpens) {
		toSerialize["forwards_opens"] = o.ForwardsOpens
	}
	if !IsNil(o.Opens) {
		toSerialize["opens"] = o.Opens
	}
	if !IsNil(o.LastOpen) {
		toSerialize["last_open"] = o.LastOpen
	}
	if !IsNil(o.UniqueOpens) {
		toSerialize["unique_opens"] = o.UniqueOpens
	}
	return toSerialize, nil
}

type NullableCampaignB struct {
	value *CampaignB
	isSet bool
}

func (v NullableCampaignB) Get() *CampaignB {
	return v.value
}

func (v *NullableCampaignB) Set(val *CampaignB) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignB) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignB) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignB(val *CampaignB) *NullableCampaignB {
	return &NullableCampaignB{value: val, isSet: true}
}

func (v NullableCampaignB) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignB) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the TimewarpStatsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimewarpStatsInner{}

// TimewarpStatsInner struct for TimewarpStatsInner
type TimewarpStatsInner struct {
	// For campaigns sent with timewarp, the time zone group the member is apart of.
	GmtOffset *int32 `json:"gmt_offset,omitempty"`
	// The number of opens.
	Opens *int32 `json:"opens,omitempty"`
	// The date and time of the last open in ISO 8601 format.
	LastOpen *time.Time `json:"last_open,omitempty"`
	// The number of unique opens.
	UniqueOpens *int32 `json:"unique_opens,omitempty"`
	// The number of clicks.
	Clicks *int32 `json:"clicks,omitempty"`
	// The date and time of the last click in ISO 8601 format.
	LastClick *time.Time `json:"last_click,omitempty"`
	// The number of unique clicks.
	UniqueClicks *int32 `json:"unique_clicks,omitempty"`
	// The number of bounces.
	Bounces *int32 `json:"bounces,omitempty"`
}

// NewTimewarpStatsInner instantiates a new TimewarpStatsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimewarpStatsInner() *TimewarpStatsInner {
	this := TimewarpStatsInner{}
	return &this
}

// NewTimewarpStatsInnerWithDefaults instantiates a new TimewarpStatsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimewarpStatsInnerWithDefaults() *TimewarpStatsInner {
	this := TimewarpStatsInner{}
	return &this
}

// GetGmtOffset returns the GmtOffset field value if set, zero value otherwise.
func (o *TimewarpStatsInner) GetGmtOffset() int32 {
	if o == nil || IsNil(o.GmtOffset) {
		var ret int32
		return ret
	}
	return *o.GmtOffset
}

// GetGmtOffsetOk returns a tuple with the GmtOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimewarpStatsInner) GetGmtOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.GmtOffset) {
		return nil, false
	}
	return o.GmtOffset, true
}

// HasGmtOffset returns a boolean if a field has been set.
func (o *TimewarpStatsInner) HasGmtOffset() bool {
	if o != nil && !IsNil(o.GmtOffset) {
		return true
	}

	return false
}

// SetGmtOffset gets a reference to the given int32 and assigns it to the GmtOffset field.
func (o *TimewarpStatsInner) SetGmtOffset(v int32) {
	o.GmtOffset = &v
}

// GetOpens returns the Opens field value if set, zero value otherwise.
func (o *TimewarpStatsInner) GetOpens() int32 {
	if o == nil || IsNil(o.Opens) {
		var ret int32
		return ret
	}
	return *o.Opens
}

// GetOpensOk returns a tuple with the Opens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimewarpStatsInner) GetOpensOk() (*int32, bool) {
	if o == nil || IsNil(o.Opens) {
		return nil, false
	}
	return o.Opens, true
}

// HasOpens returns a boolean if a field has been set.
func (o *TimewarpStatsInner) HasOpens() bool {
	if o != nil && !IsNil(o.Opens) {
		return true
	}

	return false
}

// SetOpens gets a reference to the given int32 and assigns it to the Opens field.
func (o *TimewarpStatsInner) SetOpens(v int32) {
	o.Opens = &v
}

// GetLastOpen returns the LastOpen field value if set, zero value otherwise.
func (o *TimewarpStatsInner) GetLastOpen() time.Time {
	if o == nil || IsNil(o.LastOpen) {
		var ret time.Time
		return ret
	}
	return *o.LastOpen
}

// GetLastOpenOk returns a tuple with the LastOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimewarpStatsInner) GetLastOpenOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastOpen) {
		return nil, false
	}
	return o.LastOpen, true
}

// HasLastOpen returns a boolean if a field has been set.
func (o *TimewarpStatsInner) HasLastOpen() bool {
	if o != nil && !IsNil(o.LastOpen) {
		return true
	}

	return false
}

// SetLastOpen gets a reference to the given time.Time and assigns it to the LastOpen field.
func (o *TimewarpStatsInner) SetLastOpen(v time.Time) {
	o.LastOpen = &v
}

// GetUniqueOpens returns the UniqueOpens field value if set, zero value otherwise.
func (o *TimewarpStatsInner) GetUniqueOpens() int32 {
	if o == nil || IsNil(o.UniqueOpens) {
		var ret int32
		return ret
	}
	return *o.UniqueOpens
}

// GetUniqueOpensOk returns a tuple with the UniqueOpens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimewarpStatsInner) GetUniqueOpensOk() (*int32, bool) {
	if o == nil || IsNil(o.UniqueOpens) {
		return nil, false
	}
	return o.UniqueOpens, true
}

// HasUniqueOpens returns a boolean if a field has been set.
func (o *TimewarpStatsInner) HasUniqueOpens() bool {
	if o != nil && !IsNil(o.UniqueOpens) {
		return true
	}

	return false
}

// SetUniqueOpens gets a reference to the given int32 and assigns it to the UniqueOpens field.
func (o *TimewarpStatsInner) SetUniqueOpens(v int32) {
	o.UniqueOpens = &v
}

// GetClicks returns the Clicks field value if set, zero value otherwise.
func (o *TimewarpStatsInner) GetClicks() int32 {
	if o == nil || IsNil(o.Clicks) {
		var ret int32
		return ret
	}
	return *o.Clicks
}

// GetClicksOk returns a tuple with the Clicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimewarpStatsInner) GetClicksOk() (*int32, bool) {
	if o == nil || IsNil(o.Clicks) {
		return nil, false
	}
	return o.Clicks, true
}

// HasClicks returns a boolean if a field has been set.
func (o *TimewarpStatsInner) HasClicks() bool {
	if o != nil && !IsNil(o.Clicks) {
		return true
	}

	return false
}

// SetClicks gets a reference to the given int32 and assigns it to the Clicks field.
func (o *TimewarpStatsInner) SetClicks(v int32) {
	o.Clicks = &v
}

// GetLastClick returns the LastClick field value if set, zero value otherwise.
func (o *TimewarpStatsInner) GetLastClick() time.Time {
	if o == nil || IsNil(o.LastClick) {
		var ret time.Time
		return ret
	}
	return *o.LastClick
}

// GetLastClickOk returns a tuple with the LastClick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimewarpStatsInner) GetLastClickOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastClick) {
		return nil, false
	}
	return o.LastClick, true
}

// HasLastClick returns a boolean if a field has been set.
func (o *TimewarpStatsInner) HasLastClick() bool {
	if o != nil && !IsNil(o.LastClick) {
		return true
	}

	return false
}

// SetLastClick gets a reference to the given time.Time and assigns it to the LastClick field.
func (o *TimewarpStatsInner) SetLastClick(v time.Time) {
	o.LastClick = &v
}

// GetUniqueClicks returns the UniqueClicks field value if set, zero value otherwise.
func (o *TimewarpStatsInner) GetUniqueClicks() int32 {
	if o == nil || IsNil(o.UniqueClicks) {
		var ret int32
		return ret
	}
	return *o.UniqueClicks
}

// GetUniqueClicksOk returns a tuple with the UniqueClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimewarpStatsInner) GetUniqueClicksOk() (*int32, bool) {
	if o == nil || IsNil(o.UniqueClicks) {
		return nil, false
	}
	return o.UniqueClicks, true
}

// HasUniqueClicks returns a boolean if a field has been set.
func (o *TimewarpStatsInner) HasUniqueClicks() bool {
	if o != nil && !IsNil(o.UniqueClicks) {
		return true
	}

	return false
}

// SetUniqueClicks gets a reference to the given int32 and assigns it to the UniqueClicks field.
func (o *TimewarpStatsInner) SetUniqueClicks(v int32) {
	o.UniqueClicks = &v
}

// GetBounces returns the Bounces field value if set, zero value otherwise.
func (o *TimewarpStatsInner) GetBounces() int32 {
	if o == nil || IsNil(o.Bounces) {
		var ret int32
		return ret
	}
	return *o.Bounces
}

// GetBouncesOk returns a tuple with the Bounces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimewarpStatsInner) GetBouncesOk() (*int32, bool) {
	if o == nil || IsNil(o.Bounces) {
		return nil, false
	}
	return o.Bounces, true
}

// HasBounces returns a boolean if a field has been set.
func (o *TimewarpStatsInner) HasBounces() bool {
	if o != nil && !IsNil(o.Bounces) {
		return true
	}

	return false
}

// SetBounces gets a reference to the given int32 and assigns it to the Bounces field.
func (o *TimewarpStatsInner) SetBounces(v int32) {
	o.Bounces = &v
}

func (o TimewarpStatsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimewarpStatsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GmtOffset) {
		toSerialize["gmt_offset"] = o.GmtOffset
	}
	if !IsNil(o.Opens) {
		toSerialize["opens"] = o.Opens
	}
	if !IsNil(o.LastOpen) {
		toSerialize["last_open"] = o.LastOpen
	}
	if !IsNil(o.UniqueOpens) {
		toSerialize["unique_opens"] = o.UniqueOpens
	}
	if !IsNil(o.Clicks) {
		toSerialize["clicks"] = o.Clicks
	}
	if !IsNil(o.LastClick) {
		toSerialize["last_click"] = o.LastClick
	}
	if !IsNil(o.UniqueClicks) {
		toSerialize["unique_clicks"] = o.UniqueClicks
	}
	if !IsNil(o.Bounces) {
		toSerialize["bounces"] = o.Bounces
	}
	return toSerialize, nil
}

type NullableTimewarpStatsInner struct {
	value *TimewarpStatsInner
	isSet bool
}

func (v NullableTimewarpStatsInner) Get() *TimewarpStatsInner {
	return v.value
}

func (v *NullableTimewarpStatsInner) Set(val *TimewarpStatsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTimewarpStatsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTimewarpStatsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimewarpStatsInner(val *TimewarpStatsInner) *NullableTimewarpStatsInner {
	return &NullableTimewarpStatsInner{value: val, isSet: true}
}

func (v NullableTimewarpStatsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimewarpStatsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



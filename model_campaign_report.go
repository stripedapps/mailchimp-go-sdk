/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CampaignReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignReport{}

// CampaignReport Report details about a sent campaign.
type CampaignReport struct {
	// A string that uniquely identifies this campaign.
	Id *string `json:"id,omitempty"`
	// The title of the campaign.
	CampaignTitle *string `json:"campaign_title,omitempty"`
	// The type of campaign (regular, plain-text, ab_split, rss, automation, variate, or auto).
	Type *string `json:"type,omitempty"`
	// The unique list id.
	ListId *string `json:"list_id,omitempty"`
	// The status of the list used, namely if it's deleted or disabled.
	ListIsActive *bool `json:"list_is_active,omitempty"`
	// The name of the list.
	ListName *string `json:"list_name,omitempty"`
	// The subject line for the campaign.
	SubjectLine *string `json:"subject_line,omitempty"`
	// The preview text for the campaign.
	PreviewText *string `json:"preview_text,omitempty"`
	// The total number of emails sent for this campaign.
	EmailsSent *int32 `json:"emails_sent,omitempty"`
	// The number of abuse reports generated for this campaign.
	AbuseReports *int32 `json:"abuse_reports,omitempty"`
	// The total number of unsubscribed members for this campaign.
	Unsubscribed *int32 `json:"unsubscribed,omitempty"`
	// The date and time a campaign was sent in ISO 8601 format.
	SendTime *time.Time `json:"send_time,omitempty"`
	// For RSS campaigns, the date and time of the last send in ISO 8601 format.
	RssLastSend *time.Time `json:"rss_last_send,omitempty"`
	Bounces *Bounces `json:"bounces,omitempty"`
	Forwards *Forwards `json:"forwards,omitempty"`
	Opens *Opens `json:"opens,omitempty"`
	Clicks *Clicks `json:"clicks,omitempty"`
	FacebookLikes *FacebookLikes `json:"facebook_likes,omitempty"`
	IndustryStats *IndustryStats1 `json:"industry_stats,omitempty"`
	ListStats *ListStats `json:"list_stats,omitempty"`
	AbSplit *ABSplitStats `json:"ab_split,omitempty"`
	// An hourly breakdown of sends, opens, and clicks if a campaign is sent using timewarp.
	Timewarp []TimewarpStatsInner `json:"timewarp,omitempty"`
	// An hourly breakdown of the performance of the campaign over the first 24 hours.
	Timeseries []TimeseriesInner `json:"timeseries,omitempty"`
	ShareReport *ShareReport `json:"share_report,omitempty"`
	Ecommerce *ECommerceReport1 `json:"ecommerce,omitempty"`
	DeliveryStatus *CampaignDeliveryStatus `json:"delivery_status,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewCampaignReport instantiates a new CampaignReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignReport() *CampaignReport {
	this := CampaignReport{}
	return &this
}

// NewCampaignReportWithDefaults instantiates a new CampaignReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignReportWithDefaults() *CampaignReport {
	this := CampaignReport{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CampaignReport) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CampaignReport) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CampaignReport) SetId(v string) {
	o.Id = &v
}

// GetCampaignTitle returns the CampaignTitle field value if set, zero value otherwise.
func (o *CampaignReport) GetCampaignTitle() string {
	if o == nil || IsNil(o.CampaignTitle) {
		var ret string
		return ret
	}
	return *o.CampaignTitle
}

// GetCampaignTitleOk returns a tuple with the CampaignTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetCampaignTitleOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignTitle) {
		return nil, false
	}
	return o.CampaignTitle, true
}

// HasCampaignTitle returns a boolean if a field has been set.
func (o *CampaignReport) HasCampaignTitle() bool {
	if o != nil && !IsNil(o.CampaignTitle) {
		return true
	}

	return false
}

// SetCampaignTitle gets a reference to the given string and assigns it to the CampaignTitle field.
func (o *CampaignReport) SetCampaignTitle(v string) {
	o.CampaignTitle = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CampaignReport) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CampaignReport) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CampaignReport) SetType(v string) {
	o.Type = &v
}

// GetListId returns the ListId field value if set, zero value otherwise.
func (o *CampaignReport) GetListId() string {
	if o == nil || IsNil(o.ListId) {
		var ret string
		return ret
	}
	return *o.ListId
}

// GetListIdOk returns a tuple with the ListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetListIdOk() (*string, bool) {
	if o == nil || IsNil(o.ListId) {
		return nil, false
	}
	return o.ListId, true
}

// HasListId returns a boolean if a field has been set.
func (o *CampaignReport) HasListId() bool {
	if o != nil && !IsNil(o.ListId) {
		return true
	}

	return false
}

// SetListId gets a reference to the given string and assigns it to the ListId field.
func (o *CampaignReport) SetListId(v string) {
	o.ListId = &v
}

// GetListIsActive returns the ListIsActive field value if set, zero value otherwise.
func (o *CampaignReport) GetListIsActive() bool {
	if o == nil || IsNil(o.ListIsActive) {
		var ret bool
		return ret
	}
	return *o.ListIsActive
}

// GetListIsActiveOk returns a tuple with the ListIsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetListIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.ListIsActive) {
		return nil, false
	}
	return o.ListIsActive, true
}

// HasListIsActive returns a boolean if a field has been set.
func (o *CampaignReport) HasListIsActive() bool {
	if o != nil && !IsNil(o.ListIsActive) {
		return true
	}

	return false
}

// SetListIsActive gets a reference to the given bool and assigns it to the ListIsActive field.
func (o *CampaignReport) SetListIsActive(v bool) {
	o.ListIsActive = &v
}

// GetListName returns the ListName field value if set, zero value otherwise.
func (o *CampaignReport) GetListName() string {
	if o == nil || IsNil(o.ListName) {
		var ret string
		return ret
	}
	return *o.ListName
}

// GetListNameOk returns a tuple with the ListName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetListNameOk() (*string, bool) {
	if o == nil || IsNil(o.ListName) {
		return nil, false
	}
	return o.ListName, true
}

// HasListName returns a boolean if a field has been set.
func (o *CampaignReport) HasListName() bool {
	if o != nil && !IsNil(o.ListName) {
		return true
	}

	return false
}

// SetListName gets a reference to the given string and assigns it to the ListName field.
func (o *CampaignReport) SetListName(v string) {
	o.ListName = &v
}

// GetSubjectLine returns the SubjectLine field value if set, zero value otherwise.
func (o *CampaignReport) GetSubjectLine() string {
	if o == nil || IsNil(o.SubjectLine) {
		var ret string
		return ret
	}
	return *o.SubjectLine
}

// GetSubjectLineOk returns a tuple with the SubjectLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetSubjectLineOk() (*string, bool) {
	if o == nil || IsNil(o.SubjectLine) {
		return nil, false
	}
	return o.SubjectLine, true
}

// HasSubjectLine returns a boolean if a field has been set.
func (o *CampaignReport) HasSubjectLine() bool {
	if o != nil && !IsNil(o.SubjectLine) {
		return true
	}

	return false
}

// SetSubjectLine gets a reference to the given string and assigns it to the SubjectLine field.
func (o *CampaignReport) SetSubjectLine(v string) {
	o.SubjectLine = &v
}

// GetPreviewText returns the PreviewText field value if set, zero value otherwise.
func (o *CampaignReport) GetPreviewText() string {
	if o == nil || IsNil(o.PreviewText) {
		var ret string
		return ret
	}
	return *o.PreviewText
}

// GetPreviewTextOk returns a tuple with the PreviewText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetPreviewTextOk() (*string, bool) {
	if o == nil || IsNil(o.PreviewText) {
		return nil, false
	}
	return o.PreviewText, true
}

// HasPreviewText returns a boolean if a field has been set.
func (o *CampaignReport) HasPreviewText() bool {
	if o != nil && !IsNil(o.PreviewText) {
		return true
	}

	return false
}

// SetPreviewText gets a reference to the given string and assigns it to the PreviewText field.
func (o *CampaignReport) SetPreviewText(v string) {
	o.PreviewText = &v
}

// GetEmailsSent returns the EmailsSent field value if set, zero value otherwise.
func (o *CampaignReport) GetEmailsSent() int32 {
	if o == nil || IsNil(o.EmailsSent) {
		var ret int32
		return ret
	}
	return *o.EmailsSent
}

// GetEmailsSentOk returns a tuple with the EmailsSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetEmailsSentOk() (*int32, bool) {
	if o == nil || IsNil(o.EmailsSent) {
		return nil, false
	}
	return o.EmailsSent, true
}

// HasEmailsSent returns a boolean if a field has been set.
func (o *CampaignReport) HasEmailsSent() bool {
	if o != nil && !IsNil(o.EmailsSent) {
		return true
	}

	return false
}

// SetEmailsSent gets a reference to the given int32 and assigns it to the EmailsSent field.
func (o *CampaignReport) SetEmailsSent(v int32) {
	o.EmailsSent = &v
}

// GetAbuseReports returns the AbuseReports field value if set, zero value otherwise.
func (o *CampaignReport) GetAbuseReports() int32 {
	if o == nil || IsNil(o.AbuseReports) {
		var ret int32
		return ret
	}
	return *o.AbuseReports
}

// GetAbuseReportsOk returns a tuple with the AbuseReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetAbuseReportsOk() (*int32, bool) {
	if o == nil || IsNil(o.AbuseReports) {
		return nil, false
	}
	return o.AbuseReports, true
}

// HasAbuseReports returns a boolean if a field has been set.
func (o *CampaignReport) HasAbuseReports() bool {
	if o != nil && !IsNil(o.AbuseReports) {
		return true
	}

	return false
}

// SetAbuseReports gets a reference to the given int32 and assigns it to the AbuseReports field.
func (o *CampaignReport) SetAbuseReports(v int32) {
	o.AbuseReports = &v
}

// GetUnsubscribed returns the Unsubscribed field value if set, zero value otherwise.
func (o *CampaignReport) GetUnsubscribed() int32 {
	if o == nil || IsNil(o.Unsubscribed) {
		var ret int32
		return ret
	}
	return *o.Unsubscribed
}

// GetUnsubscribedOk returns a tuple with the Unsubscribed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetUnsubscribedOk() (*int32, bool) {
	if o == nil || IsNil(o.Unsubscribed) {
		return nil, false
	}
	return o.Unsubscribed, true
}

// HasUnsubscribed returns a boolean if a field has been set.
func (o *CampaignReport) HasUnsubscribed() bool {
	if o != nil && !IsNil(o.Unsubscribed) {
		return true
	}

	return false
}

// SetUnsubscribed gets a reference to the given int32 and assigns it to the Unsubscribed field.
func (o *CampaignReport) SetUnsubscribed(v int32) {
	o.Unsubscribed = &v
}

// GetSendTime returns the SendTime field value if set, zero value otherwise.
func (o *CampaignReport) GetSendTime() time.Time {
	if o == nil || IsNil(o.SendTime) {
		var ret time.Time
		return ret
	}
	return *o.SendTime
}

// GetSendTimeOk returns a tuple with the SendTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetSendTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SendTime) {
		return nil, false
	}
	return o.SendTime, true
}

// HasSendTime returns a boolean if a field has been set.
func (o *CampaignReport) HasSendTime() bool {
	if o != nil && !IsNil(o.SendTime) {
		return true
	}

	return false
}

// SetSendTime gets a reference to the given time.Time and assigns it to the SendTime field.
func (o *CampaignReport) SetSendTime(v time.Time) {
	o.SendTime = &v
}

// GetRssLastSend returns the RssLastSend field value if set, zero value otherwise.
func (o *CampaignReport) GetRssLastSend() time.Time {
	if o == nil || IsNil(o.RssLastSend) {
		var ret time.Time
		return ret
	}
	return *o.RssLastSend
}

// GetRssLastSendOk returns a tuple with the RssLastSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetRssLastSendOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RssLastSend) {
		return nil, false
	}
	return o.RssLastSend, true
}

// HasRssLastSend returns a boolean if a field has been set.
func (o *CampaignReport) HasRssLastSend() bool {
	if o != nil && !IsNil(o.RssLastSend) {
		return true
	}

	return false
}

// SetRssLastSend gets a reference to the given time.Time and assigns it to the RssLastSend field.
func (o *CampaignReport) SetRssLastSend(v time.Time) {
	o.RssLastSend = &v
}

// GetBounces returns the Bounces field value if set, zero value otherwise.
func (o *CampaignReport) GetBounces() Bounces {
	if o == nil || IsNil(o.Bounces) {
		var ret Bounces
		return ret
	}
	return *o.Bounces
}

// GetBouncesOk returns a tuple with the Bounces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetBouncesOk() (*Bounces, bool) {
	if o == nil || IsNil(o.Bounces) {
		return nil, false
	}
	return o.Bounces, true
}

// HasBounces returns a boolean if a field has been set.
func (o *CampaignReport) HasBounces() bool {
	if o != nil && !IsNil(o.Bounces) {
		return true
	}

	return false
}

// SetBounces gets a reference to the given Bounces and assigns it to the Bounces field.
func (o *CampaignReport) SetBounces(v Bounces) {
	o.Bounces = &v
}

// GetForwards returns the Forwards field value if set, zero value otherwise.
func (o *CampaignReport) GetForwards() Forwards {
	if o == nil || IsNil(o.Forwards) {
		var ret Forwards
		return ret
	}
	return *o.Forwards
}

// GetForwardsOk returns a tuple with the Forwards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetForwardsOk() (*Forwards, bool) {
	if o == nil || IsNil(o.Forwards) {
		return nil, false
	}
	return o.Forwards, true
}

// HasForwards returns a boolean if a field has been set.
func (o *CampaignReport) HasForwards() bool {
	if o != nil && !IsNil(o.Forwards) {
		return true
	}

	return false
}

// SetForwards gets a reference to the given Forwards and assigns it to the Forwards field.
func (o *CampaignReport) SetForwards(v Forwards) {
	o.Forwards = &v
}

// GetOpens returns the Opens field value if set, zero value otherwise.
func (o *CampaignReport) GetOpens() Opens {
	if o == nil || IsNil(o.Opens) {
		var ret Opens
		return ret
	}
	return *o.Opens
}

// GetOpensOk returns a tuple with the Opens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetOpensOk() (*Opens, bool) {
	if o == nil || IsNil(o.Opens) {
		return nil, false
	}
	return o.Opens, true
}

// HasOpens returns a boolean if a field has been set.
func (o *CampaignReport) HasOpens() bool {
	if o != nil && !IsNil(o.Opens) {
		return true
	}

	return false
}

// SetOpens gets a reference to the given Opens and assigns it to the Opens field.
func (o *CampaignReport) SetOpens(v Opens) {
	o.Opens = &v
}

// GetClicks returns the Clicks field value if set, zero value otherwise.
func (o *CampaignReport) GetClicks() Clicks {
	if o == nil || IsNil(o.Clicks) {
		var ret Clicks
		return ret
	}
	return *o.Clicks
}

// GetClicksOk returns a tuple with the Clicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetClicksOk() (*Clicks, bool) {
	if o == nil || IsNil(o.Clicks) {
		return nil, false
	}
	return o.Clicks, true
}

// HasClicks returns a boolean if a field has been set.
func (o *CampaignReport) HasClicks() bool {
	if o != nil && !IsNil(o.Clicks) {
		return true
	}

	return false
}

// SetClicks gets a reference to the given Clicks and assigns it to the Clicks field.
func (o *CampaignReport) SetClicks(v Clicks) {
	o.Clicks = &v
}

// GetFacebookLikes returns the FacebookLikes field value if set, zero value otherwise.
func (o *CampaignReport) GetFacebookLikes() FacebookLikes {
	if o == nil || IsNil(o.FacebookLikes) {
		var ret FacebookLikes
		return ret
	}
	return *o.FacebookLikes
}

// GetFacebookLikesOk returns a tuple with the FacebookLikes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetFacebookLikesOk() (*FacebookLikes, bool) {
	if o == nil || IsNil(o.FacebookLikes) {
		return nil, false
	}
	return o.FacebookLikes, true
}

// HasFacebookLikes returns a boolean if a field has been set.
func (o *CampaignReport) HasFacebookLikes() bool {
	if o != nil && !IsNil(o.FacebookLikes) {
		return true
	}

	return false
}

// SetFacebookLikes gets a reference to the given FacebookLikes and assigns it to the FacebookLikes field.
func (o *CampaignReport) SetFacebookLikes(v FacebookLikes) {
	o.FacebookLikes = &v
}

// GetIndustryStats returns the IndustryStats field value if set, zero value otherwise.
func (o *CampaignReport) GetIndustryStats() IndustryStats1 {
	if o == nil || IsNil(o.IndustryStats) {
		var ret IndustryStats1
		return ret
	}
	return *o.IndustryStats
}

// GetIndustryStatsOk returns a tuple with the IndustryStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetIndustryStatsOk() (*IndustryStats1, bool) {
	if o == nil || IsNil(o.IndustryStats) {
		return nil, false
	}
	return o.IndustryStats, true
}

// HasIndustryStats returns a boolean if a field has been set.
func (o *CampaignReport) HasIndustryStats() bool {
	if o != nil && !IsNil(o.IndustryStats) {
		return true
	}

	return false
}

// SetIndustryStats gets a reference to the given IndustryStats1 and assigns it to the IndustryStats field.
func (o *CampaignReport) SetIndustryStats(v IndustryStats1) {
	o.IndustryStats = &v
}

// GetListStats returns the ListStats field value if set, zero value otherwise.
func (o *CampaignReport) GetListStats() ListStats {
	if o == nil || IsNil(o.ListStats) {
		var ret ListStats
		return ret
	}
	return *o.ListStats
}

// GetListStatsOk returns a tuple with the ListStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetListStatsOk() (*ListStats, bool) {
	if o == nil || IsNil(o.ListStats) {
		return nil, false
	}
	return o.ListStats, true
}

// HasListStats returns a boolean if a field has been set.
func (o *CampaignReport) HasListStats() bool {
	if o != nil && !IsNil(o.ListStats) {
		return true
	}

	return false
}

// SetListStats gets a reference to the given ListStats and assigns it to the ListStats field.
func (o *CampaignReport) SetListStats(v ListStats) {
	o.ListStats = &v
}

// GetAbSplit returns the AbSplit field value if set, zero value otherwise.
func (o *CampaignReport) GetAbSplit() ABSplitStats {
	if o == nil || IsNil(o.AbSplit) {
		var ret ABSplitStats
		return ret
	}
	return *o.AbSplit
}

// GetAbSplitOk returns a tuple with the AbSplit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetAbSplitOk() (*ABSplitStats, bool) {
	if o == nil || IsNil(o.AbSplit) {
		return nil, false
	}
	return o.AbSplit, true
}

// HasAbSplit returns a boolean if a field has been set.
func (o *CampaignReport) HasAbSplit() bool {
	if o != nil && !IsNil(o.AbSplit) {
		return true
	}

	return false
}

// SetAbSplit gets a reference to the given ABSplitStats and assigns it to the AbSplit field.
func (o *CampaignReport) SetAbSplit(v ABSplitStats) {
	o.AbSplit = &v
}

// GetTimewarp returns the Timewarp field value if set, zero value otherwise.
func (o *CampaignReport) GetTimewarp() []TimewarpStatsInner {
	if o == nil || IsNil(o.Timewarp) {
		var ret []TimewarpStatsInner
		return ret
	}
	return o.Timewarp
}

// GetTimewarpOk returns a tuple with the Timewarp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetTimewarpOk() ([]TimewarpStatsInner, bool) {
	if o == nil || IsNil(o.Timewarp) {
		return nil, false
	}
	return o.Timewarp, true
}

// HasTimewarp returns a boolean if a field has been set.
func (o *CampaignReport) HasTimewarp() bool {
	if o != nil && !IsNil(o.Timewarp) {
		return true
	}

	return false
}

// SetTimewarp gets a reference to the given []TimewarpStatsInner and assigns it to the Timewarp field.
func (o *CampaignReport) SetTimewarp(v []TimewarpStatsInner) {
	o.Timewarp = v
}

// GetTimeseries returns the Timeseries field value if set, zero value otherwise.
func (o *CampaignReport) GetTimeseries() []TimeseriesInner {
	if o == nil || IsNil(o.Timeseries) {
		var ret []TimeseriesInner
		return ret
	}
	return o.Timeseries
}

// GetTimeseriesOk returns a tuple with the Timeseries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetTimeseriesOk() ([]TimeseriesInner, bool) {
	if o == nil || IsNil(o.Timeseries) {
		return nil, false
	}
	return o.Timeseries, true
}

// HasTimeseries returns a boolean if a field has been set.
func (o *CampaignReport) HasTimeseries() bool {
	if o != nil && !IsNil(o.Timeseries) {
		return true
	}

	return false
}

// SetTimeseries gets a reference to the given []TimeseriesInner and assigns it to the Timeseries field.
func (o *CampaignReport) SetTimeseries(v []TimeseriesInner) {
	o.Timeseries = v
}

// GetShareReport returns the ShareReport field value if set, zero value otherwise.
func (o *CampaignReport) GetShareReport() ShareReport {
	if o == nil || IsNil(o.ShareReport) {
		var ret ShareReport
		return ret
	}
	return *o.ShareReport
}

// GetShareReportOk returns a tuple with the ShareReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetShareReportOk() (*ShareReport, bool) {
	if o == nil || IsNil(o.ShareReport) {
		return nil, false
	}
	return o.ShareReport, true
}

// HasShareReport returns a boolean if a field has been set.
func (o *CampaignReport) HasShareReport() bool {
	if o != nil && !IsNil(o.ShareReport) {
		return true
	}

	return false
}

// SetShareReport gets a reference to the given ShareReport and assigns it to the ShareReport field.
func (o *CampaignReport) SetShareReport(v ShareReport) {
	o.ShareReport = &v
}

// GetEcommerce returns the Ecommerce field value if set, zero value otherwise.
func (o *CampaignReport) GetEcommerce() ECommerceReport1 {
	if o == nil || IsNil(o.Ecommerce) {
		var ret ECommerceReport1
		return ret
	}
	return *o.Ecommerce
}

// GetEcommerceOk returns a tuple with the Ecommerce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetEcommerceOk() (*ECommerceReport1, bool) {
	if o == nil || IsNil(o.Ecommerce) {
		return nil, false
	}
	return o.Ecommerce, true
}

// HasEcommerce returns a boolean if a field has been set.
func (o *CampaignReport) HasEcommerce() bool {
	if o != nil && !IsNil(o.Ecommerce) {
		return true
	}

	return false
}

// SetEcommerce gets a reference to the given ECommerceReport1 and assigns it to the Ecommerce field.
func (o *CampaignReport) SetEcommerce(v ECommerceReport1) {
	o.Ecommerce = &v
}

// GetDeliveryStatus returns the DeliveryStatus field value if set, zero value otherwise.
func (o *CampaignReport) GetDeliveryStatus() CampaignDeliveryStatus {
	if o == nil || IsNil(o.DeliveryStatus) {
		var ret CampaignDeliveryStatus
		return ret
	}
	return *o.DeliveryStatus
}

// GetDeliveryStatusOk returns a tuple with the DeliveryStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetDeliveryStatusOk() (*CampaignDeliveryStatus, bool) {
	if o == nil || IsNil(o.DeliveryStatus) {
		return nil, false
	}
	return o.DeliveryStatus, true
}

// HasDeliveryStatus returns a boolean if a field has been set.
func (o *CampaignReport) HasDeliveryStatus() bool {
	if o != nil && !IsNil(o.DeliveryStatus) {
		return true
	}

	return false
}

// SetDeliveryStatus gets a reference to the given CampaignDeliveryStatus and assigns it to the DeliveryStatus field.
func (o *CampaignReport) SetDeliveryStatus(v CampaignDeliveryStatus) {
	o.DeliveryStatus = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CampaignReport) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CampaignReport) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *CampaignReport) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o CampaignReport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CampaignTitle) {
		toSerialize["campaign_title"] = o.CampaignTitle
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ListId) {
		toSerialize["list_id"] = o.ListId
	}
	if !IsNil(o.ListIsActive) {
		toSerialize["list_is_active"] = o.ListIsActive
	}
	if !IsNil(o.ListName) {
		toSerialize["list_name"] = o.ListName
	}
	if !IsNil(o.SubjectLine) {
		toSerialize["subject_line"] = o.SubjectLine
	}
	if !IsNil(o.PreviewText) {
		toSerialize["preview_text"] = o.PreviewText
	}
	if !IsNil(o.EmailsSent) {
		toSerialize["emails_sent"] = o.EmailsSent
	}
	if !IsNil(o.AbuseReports) {
		toSerialize["abuse_reports"] = o.AbuseReports
	}
	if !IsNil(o.Unsubscribed) {
		toSerialize["unsubscribed"] = o.Unsubscribed
	}
	if !IsNil(o.SendTime) {
		toSerialize["send_time"] = o.SendTime
	}
	if !IsNil(o.RssLastSend) {
		toSerialize["rss_last_send"] = o.RssLastSend
	}
	if !IsNil(o.Bounces) {
		toSerialize["bounces"] = o.Bounces
	}
	if !IsNil(o.Forwards) {
		toSerialize["forwards"] = o.Forwards
	}
	if !IsNil(o.Opens) {
		toSerialize["opens"] = o.Opens
	}
	if !IsNil(o.Clicks) {
		toSerialize["clicks"] = o.Clicks
	}
	if !IsNil(o.FacebookLikes) {
		toSerialize["facebook_likes"] = o.FacebookLikes
	}
	if !IsNil(o.IndustryStats) {
		toSerialize["industry_stats"] = o.IndustryStats
	}
	if !IsNil(o.ListStats) {
		toSerialize["list_stats"] = o.ListStats
	}
	if !IsNil(o.AbSplit) {
		toSerialize["ab_split"] = o.AbSplit
	}
	if !IsNil(o.Timewarp) {
		toSerialize["timewarp"] = o.Timewarp
	}
	if !IsNil(o.Timeseries) {
		toSerialize["timeseries"] = o.Timeseries
	}
	if !IsNil(o.ShareReport) {
		toSerialize["share_report"] = o.ShareReport
	}
	if !IsNil(o.Ecommerce) {
		toSerialize["ecommerce"] = o.Ecommerce
	}
	if !IsNil(o.DeliveryStatus) {
		toSerialize["delivery_status"] = o.DeliveryStatus
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableCampaignReport struct {
	value *CampaignReport
	isSet bool
}

func (v NullableCampaignReport) Get() *CampaignReport {
	return v.value
}

func (v *NullableCampaignReport) Set(val *CampaignReport) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignReport) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignReport(val *CampaignReport) *NullableCampaignReport {
	return &NullableCampaignReport{value: val, isSet: true}
}

func (v NullableCampaignReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SubscriberInAutomationQueue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriberInAutomationQueue{}

// SubscriberInAutomationQueue Information about subscribers in an Automation email queue.
type SubscriberInAutomationQueue struct {
	// The MD5 hash of the lowercase version of the list member's email address.
	Id *string `json:"id,omitempty"`
	// A string that uniquely identifies an Automation workflow.
	WorkflowId *string `json:"workflow_id,omitempty"`
	// A string that uniquely identifies an email in an Automation workflow.
	EmailId *string `json:"email_id,omitempty"`
	// A string that uniquely identifies a list.
	ListId *string `json:"list_id,omitempty"`
	// The list member's email address.
	EmailAddress string `json:"email_address"`
	// The date and time of the next send for the workflow email in ISO 8601 format.
	NextSend *time.Time `json:"next_send,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewSubscriberInAutomationQueue instantiates a new SubscriberInAutomationQueue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriberInAutomationQueue(emailAddress string) *SubscriberInAutomationQueue {
	this := SubscriberInAutomationQueue{}
	this.EmailAddress = emailAddress
	return &this
}

// NewSubscriberInAutomationQueueWithDefaults instantiates a new SubscriberInAutomationQueue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriberInAutomationQueueWithDefaults() *SubscriberInAutomationQueue {
	this := SubscriberInAutomationQueue{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SubscriberInAutomationQueue) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberInAutomationQueue) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SubscriberInAutomationQueue) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SubscriberInAutomationQueue) SetId(v string) {
	o.Id = &v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *SubscriberInAutomationQueue) GetWorkflowId() string {
	if o == nil || IsNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberInAutomationQueue) GetWorkflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowId) {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *SubscriberInAutomationQueue) HasWorkflowId() bool {
	if o != nil && !IsNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *SubscriberInAutomationQueue) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

// GetEmailId returns the EmailId field value if set, zero value otherwise.
func (o *SubscriberInAutomationQueue) GetEmailId() string {
	if o == nil || IsNil(o.EmailId) {
		var ret string
		return ret
	}
	return *o.EmailId
}

// GetEmailIdOk returns a tuple with the EmailId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberInAutomationQueue) GetEmailIdOk() (*string, bool) {
	if o == nil || IsNil(o.EmailId) {
		return nil, false
	}
	return o.EmailId, true
}

// HasEmailId returns a boolean if a field has been set.
func (o *SubscriberInAutomationQueue) HasEmailId() bool {
	if o != nil && !IsNil(o.EmailId) {
		return true
	}

	return false
}

// SetEmailId gets a reference to the given string and assigns it to the EmailId field.
func (o *SubscriberInAutomationQueue) SetEmailId(v string) {
	o.EmailId = &v
}

// GetListId returns the ListId field value if set, zero value otherwise.
func (o *SubscriberInAutomationQueue) GetListId() string {
	if o == nil || IsNil(o.ListId) {
		var ret string
		return ret
	}
	return *o.ListId
}

// GetListIdOk returns a tuple with the ListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberInAutomationQueue) GetListIdOk() (*string, bool) {
	if o == nil || IsNil(o.ListId) {
		return nil, false
	}
	return o.ListId, true
}

// HasListId returns a boolean if a field has been set.
func (o *SubscriberInAutomationQueue) HasListId() bool {
	if o != nil && !IsNil(o.ListId) {
		return true
	}

	return false
}

// SetListId gets a reference to the given string and assigns it to the ListId field.
func (o *SubscriberInAutomationQueue) SetListId(v string) {
	o.ListId = &v
}

// GetEmailAddress returns the EmailAddress field value
func (o *SubscriberInAutomationQueue) GetEmailAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value
// and a boolean to check if the value has been set.
func (o *SubscriberInAutomationQueue) GetEmailAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailAddress, true
}

// SetEmailAddress sets field value
func (o *SubscriberInAutomationQueue) SetEmailAddress(v string) {
	o.EmailAddress = v
}

// GetNextSend returns the NextSend field value if set, zero value otherwise.
func (o *SubscriberInAutomationQueue) GetNextSend() time.Time {
	if o == nil || IsNil(o.NextSend) {
		var ret time.Time
		return ret
	}
	return *o.NextSend
}

// GetNextSendOk returns a tuple with the NextSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberInAutomationQueue) GetNextSendOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextSend) {
		return nil, false
	}
	return o.NextSend, true
}

// HasNextSend returns a boolean if a field has been set.
func (o *SubscriberInAutomationQueue) HasNextSend() bool {
	if o != nil && !IsNil(o.NextSend) {
		return true
	}

	return false
}

// SetNextSend gets a reference to the given time.Time and assigns it to the NextSend field.
func (o *SubscriberInAutomationQueue) SetNextSend(v time.Time) {
	o.NextSend = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *SubscriberInAutomationQueue) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberInAutomationQueue) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SubscriberInAutomationQueue) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *SubscriberInAutomationQueue) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o SubscriberInAutomationQueue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriberInAutomationQueue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.WorkflowId) {
		toSerialize["workflow_id"] = o.WorkflowId
	}
	if !IsNil(o.EmailId) {
		toSerialize["email_id"] = o.EmailId
	}
	if !IsNil(o.ListId) {
		toSerialize["list_id"] = o.ListId
	}
	toSerialize["email_address"] = o.EmailAddress
	if !IsNil(o.NextSend) {
		toSerialize["next_send"] = o.NextSend
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableSubscriberInAutomationQueue struct {
	value *SubscriberInAutomationQueue
	isSet bool
}

func (v NullableSubscriberInAutomationQueue) Get() *SubscriberInAutomationQueue {
	return v.value
}

func (v *NullableSubscriberInAutomationQueue) Set(val *SubscriberInAutomationQueue) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriberInAutomationQueue) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriberInAutomationQueue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriberInAutomationQueue(val *SubscriberInAutomationQueue) *NullableSubscriberInAutomationQueue {
	return &NullableSubscriberInAutomationQueue{value: val, isSet: true}
}

func (v NullableSubscriberInAutomationQueue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriberInAutomationQueue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



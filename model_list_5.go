/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the List5 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &List5{}

// List5 List settings for the campaign.
type List5 struct {
	// The unique list id.
	ListId string `json:"list_id"`
	SegmentOpts *SegmentOptions1 `json:"segment_opts,omitempty"`
}

// NewList5 instantiates a new List5 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewList5(listId string) *List5 {
	this := List5{}
	this.ListId = listId
	return &this
}

// NewList5WithDefaults instantiates a new List5 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewList5WithDefaults() *List5 {
	this := List5{}
	return &this
}

// GetListId returns the ListId field value
func (o *List5) GetListId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ListId
}

// GetListIdOk returns a tuple with the ListId field value
// and a boolean to check if the value has been set.
func (o *List5) GetListIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ListId, true
}

// SetListId sets field value
func (o *List5) SetListId(v string) {
	o.ListId = v
}

// GetSegmentOpts returns the SegmentOpts field value if set, zero value otherwise.
func (o *List5) GetSegmentOpts() SegmentOptions1 {
	if o == nil || IsNil(o.SegmentOpts) {
		var ret SegmentOptions1
		return ret
	}
	return *o.SegmentOpts
}

// GetSegmentOptsOk returns a tuple with the SegmentOpts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *List5) GetSegmentOptsOk() (*SegmentOptions1, bool) {
	if o == nil || IsNil(o.SegmentOpts) {
		return nil, false
	}
	return o.SegmentOpts, true
}

// HasSegmentOpts returns a boolean if a field has been set.
func (o *List5) HasSegmentOpts() bool {
	if o != nil && !IsNil(o.SegmentOpts) {
		return true
	}

	return false
}

// SetSegmentOpts gets a reference to the given SegmentOptions1 and assigns it to the SegmentOpts field.
func (o *List5) SetSegmentOpts(v SegmentOptions1) {
	o.SegmentOpts = &v
}

func (o List5) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o List5) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["list_id"] = o.ListId
	if !IsNil(o.SegmentOpts) {
		toSerialize["segment_opts"] = o.SegmentOpts
	}
	return toSerialize, nil
}

type NullableList5 struct {
	value *List5
	isSet bool
}

func (v NullableList5) Get() *List5 {
	return v.value
}

func (v *NullableList5) Set(val *List5) {
	v.value = val
	v.isSet = true
}

func (v NullableList5) IsSet() bool {
	return v.isSet
}

func (v *NullableList5) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableList5(val *List5) *NullableList5 {
	return &NullableList5{value: val, isSet: true}
}

func (v NullableList5) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableList5) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



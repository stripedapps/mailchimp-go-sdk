/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GalleryFolder1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GalleryFolder1{}

// GalleryFolder1 An individual folder listed in the File Manager.
type GalleryFolder1 struct {
	// The name of the folder.
	Name string `json:"name"`
}

// NewGalleryFolder1 instantiates a new GalleryFolder1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGalleryFolder1(name string) *GalleryFolder1 {
	this := GalleryFolder1{}
	this.Name = name
	return &this
}

// NewGalleryFolder1WithDefaults instantiates a new GalleryFolder1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGalleryFolder1WithDefaults() *GalleryFolder1 {
	this := GalleryFolder1{}
	return &this
}

// GetName returns the Name field value
func (o *GalleryFolder1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GalleryFolder1) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GalleryFolder1) SetName(v string) {
	o.Name = v
}

func (o GalleryFolder1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GalleryFolder1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableGalleryFolder1 struct {
	value *GalleryFolder1
	isSet bool
}

func (v NullableGalleryFolder1) Get() *GalleryFolder1 {
	return v.value
}

func (v *NullableGalleryFolder1) Set(val *GalleryFolder1) {
	v.value = val
	v.isSet = true
}

func (v NullableGalleryFolder1) IsSet() bool {
	return v.isSet
}

func (v *NullableGalleryFolder1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGalleryFolder1(val *GalleryFolder1) *NullableGalleryFolder1 {
	return &NullableGalleryFolder1{value: val, isSet: true}
}

func (v NullableGalleryFolder1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGalleryFolder1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



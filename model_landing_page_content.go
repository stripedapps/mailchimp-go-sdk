/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LandingPageContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LandingPageContent{}

// LandingPageContent The HTML content for a landing page.
type LandingPageContent struct {
	// The raw HTML for the landing page.
	Html *string `json:"html,omitempty"`
	// The JSON Structure for the landing page
	Json *string `json:"json,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewLandingPageContent instantiates a new LandingPageContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLandingPageContent() *LandingPageContent {
	this := LandingPageContent{}
	return &this
}

// NewLandingPageContentWithDefaults instantiates a new LandingPageContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLandingPageContentWithDefaults() *LandingPageContent {
	this := LandingPageContent{}
	return &this
}

// GetHtml returns the Html field value if set, zero value otherwise.
func (o *LandingPageContent) GetHtml() string {
	if o == nil || IsNil(o.Html) {
		var ret string
		return ret
	}
	return *o.Html
}

// GetHtmlOk returns a tuple with the Html field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LandingPageContent) GetHtmlOk() (*string, bool) {
	if o == nil || IsNil(o.Html) {
		return nil, false
	}
	return o.Html, true
}

// HasHtml returns a boolean if a field has been set.
func (o *LandingPageContent) HasHtml() bool {
	if o != nil && !IsNil(o.Html) {
		return true
	}

	return false
}

// SetHtml gets a reference to the given string and assigns it to the Html field.
func (o *LandingPageContent) SetHtml(v string) {
	o.Html = &v
}

// GetJson returns the Json field value if set, zero value otherwise.
func (o *LandingPageContent) GetJson() string {
	if o == nil || IsNil(o.Json) {
		var ret string
		return ret
	}
	return *o.Json
}

// GetJsonOk returns a tuple with the Json field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LandingPageContent) GetJsonOk() (*string, bool) {
	if o == nil || IsNil(o.Json) {
		return nil, false
	}
	return o.Json, true
}

// HasJson returns a boolean if a field has been set.
func (o *LandingPageContent) HasJson() bool {
	if o != nil && !IsNil(o.Json) {
		return true
	}

	return false
}

// SetJson gets a reference to the given string and assigns it to the Json field.
func (o *LandingPageContent) SetJson(v string) {
	o.Json = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *LandingPageContent) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LandingPageContent) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *LandingPageContent) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *LandingPageContent) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o LandingPageContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LandingPageContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Html) {
		toSerialize["html"] = o.Html
	}
	if !IsNil(o.Json) {
		toSerialize["json"] = o.Json
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableLandingPageContent struct {
	value *LandingPageContent
	isSet bool
}

func (v NullableLandingPageContent) Get() *LandingPageContent {
	return v.value
}

func (v *NullableLandingPageContent) Set(val *LandingPageContent) {
	v.value = val
	v.isSet = true
}

func (v NullableLandingPageContent) IsSet() bool {
	return v.isSet
}

func (v *NullableLandingPageContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLandingPageContent(val *LandingPageContent) *NullableLandingPageContent {
	return &NullableLandingPageContent{value: val, isSet: true}
}

func (v NullableLandingPageContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLandingPageContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



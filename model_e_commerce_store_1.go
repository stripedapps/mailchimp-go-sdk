/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ECommerceStore1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ECommerceStore1{}

// ECommerceStore1 An individual store in an account.
type ECommerceStore1 struct {
	// The unique identifier for the store.
	Id string `json:"id"`
	// The unique identifier for the list associated with the store. The `list_id` for a specific store cannot change.
	ListId string `json:"list_id"`
	// The name of the store.
	Name string `json:"name"`
	// The e-commerce platform of the store.
	Platform *string `json:"platform,omitempty"`
	// The store domain. This parameter is required for Connected Sites and Google Ads.
	Domain *string `json:"domain,omitempty"`
	// Whether to disable automations because the store is currently [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations).
	IsSyncing *bool `json:"is_syncing,omitempty"`
	// The email address for the store.
	EmailAddress *string `json:"email_address,omitempty"`
	// The three-letter ISO 4217 code for the currency that the store accepts.
	CurrencyCode string `json:"currency_code"`
	// The currency format for the store. For example: `$`, `Â£`, etc.
	MoneyFormat *string `json:"money_format,omitempty"`
	// The primary locale for the store. For example: `en`, `de`, etc.
	PrimaryLocale *string `json:"primary_locale,omitempty"`
	// The timezone for the store.
	Timezone *string `json:"timezone,omitempty"`
	// The store phone number.
	Phone *string `json:"phone,omitempty"`
	Address *Address1 `json:"address,omitempty"`
}

// NewECommerceStore1 instantiates a new ECommerceStore1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewECommerceStore1(id string, listId string, name string, currencyCode string) *ECommerceStore1 {
	this := ECommerceStore1{}
	this.Id = id
	this.ListId = listId
	this.Name = name
	this.CurrencyCode = currencyCode
	return &this
}

// NewECommerceStore1WithDefaults instantiates a new ECommerceStore1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewECommerceStore1WithDefaults() *ECommerceStore1 {
	this := ECommerceStore1{}
	return &this
}

// GetId returns the Id field value
func (o *ECommerceStore1) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ECommerceStore1) SetId(v string) {
	o.Id = v
}

// GetListId returns the ListId field value
func (o *ECommerceStore1) GetListId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ListId
}

// GetListIdOk returns a tuple with the ListId field value
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetListIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ListId, true
}

// SetListId sets field value
func (o *ECommerceStore1) SetListId(v string) {
	o.ListId = v
}

// GetName returns the Name field value
func (o *ECommerceStore1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ECommerceStore1) SetName(v string) {
	o.Name = v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *ECommerceStore1) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *ECommerceStore1) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *ECommerceStore1) SetPlatform(v string) {
	o.Platform = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *ECommerceStore1) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *ECommerceStore1) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *ECommerceStore1) SetDomain(v string) {
	o.Domain = &v
}

// GetIsSyncing returns the IsSyncing field value if set, zero value otherwise.
func (o *ECommerceStore1) GetIsSyncing() bool {
	if o == nil || IsNil(o.IsSyncing) {
		var ret bool
		return ret
	}
	return *o.IsSyncing
}

// GetIsSyncingOk returns a tuple with the IsSyncing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetIsSyncingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSyncing) {
		return nil, false
	}
	return o.IsSyncing, true
}

// HasIsSyncing returns a boolean if a field has been set.
func (o *ECommerceStore1) HasIsSyncing() bool {
	if o != nil && !IsNil(o.IsSyncing) {
		return true
	}

	return false
}

// SetIsSyncing gets a reference to the given bool and assigns it to the IsSyncing field.
func (o *ECommerceStore1) SetIsSyncing(v bool) {
	o.IsSyncing = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *ECommerceStore1) GetEmailAddress() string {
	if o == nil || IsNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *ECommerceStore1) HasEmailAddress() bool {
	if o != nil && !IsNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *ECommerceStore1) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *ECommerceStore1) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *ECommerceStore1) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetMoneyFormat returns the MoneyFormat field value if set, zero value otherwise.
func (o *ECommerceStore1) GetMoneyFormat() string {
	if o == nil || IsNil(o.MoneyFormat) {
		var ret string
		return ret
	}
	return *o.MoneyFormat
}

// GetMoneyFormatOk returns a tuple with the MoneyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetMoneyFormatOk() (*string, bool) {
	if o == nil || IsNil(o.MoneyFormat) {
		return nil, false
	}
	return o.MoneyFormat, true
}

// HasMoneyFormat returns a boolean if a field has been set.
func (o *ECommerceStore1) HasMoneyFormat() bool {
	if o != nil && !IsNil(o.MoneyFormat) {
		return true
	}

	return false
}

// SetMoneyFormat gets a reference to the given string and assigns it to the MoneyFormat field.
func (o *ECommerceStore1) SetMoneyFormat(v string) {
	o.MoneyFormat = &v
}

// GetPrimaryLocale returns the PrimaryLocale field value if set, zero value otherwise.
func (o *ECommerceStore1) GetPrimaryLocale() string {
	if o == nil || IsNil(o.PrimaryLocale) {
		var ret string
		return ret
	}
	return *o.PrimaryLocale
}

// GetPrimaryLocaleOk returns a tuple with the PrimaryLocale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetPrimaryLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryLocale) {
		return nil, false
	}
	return o.PrimaryLocale, true
}

// HasPrimaryLocale returns a boolean if a field has been set.
func (o *ECommerceStore1) HasPrimaryLocale() bool {
	if o != nil && !IsNil(o.PrimaryLocale) {
		return true
	}

	return false
}

// SetPrimaryLocale gets a reference to the given string and assigns it to the PrimaryLocale field.
func (o *ECommerceStore1) SetPrimaryLocale(v string) {
	o.PrimaryLocale = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *ECommerceStore1) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *ECommerceStore1) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *ECommerceStore1) SetTimezone(v string) {
	o.Timezone = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *ECommerceStore1) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *ECommerceStore1) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *ECommerceStore1) SetPhone(v string) {
	o.Phone = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ECommerceStore1) GetAddress() Address1 {
	if o == nil || IsNil(o.Address) {
		var ret Address1
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceStore1) GetAddressOk() (*Address1, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ECommerceStore1) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given Address1 and assigns it to the Address field.
func (o *ECommerceStore1) SetAddress(v Address1) {
	o.Address = &v
}

func (o ECommerceStore1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ECommerceStore1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["list_id"] = o.ListId
	toSerialize["name"] = o.Name
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.IsSyncing) {
		toSerialize["is_syncing"] = o.IsSyncing
	}
	if !IsNil(o.EmailAddress) {
		toSerialize["email_address"] = o.EmailAddress
	}
	toSerialize["currency_code"] = o.CurrencyCode
	if !IsNil(o.MoneyFormat) {
		toSerialize["money_format"] = o.MoneyFormat
	}
	if !IsNil(o.PrimaryLocale) {
		toSerialize["primary_locale"] = o.PrimaryLocale
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	return toSerialize, nil
}

type NullableECommerceStore1 struct {
	value *ECommerceStore1
	isSet bool
}

func (v NullableECommerceStore1) Get() *ECommerceStore1 {
	return v.value
}

func (v *NullableECommerceStore1) Set(val *ECommerceStore1) {
	v.value = val
	v.isSet = true
}

func (v NullableECommerceStore1) IsSet() bool {
	return v.isSet
}

func (v *NullableECommerceStore1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECommerceStore1(val *ECommerceStore1) *NullableECommerceStore1 {
	return &NullableECommerceStore1{value: val, isSet: true}
}

func (v NullableECommerceStore1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECommerceStore1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



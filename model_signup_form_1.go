/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SignupForm1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignupForm1{}

// SignupForm1 List signup form.
type SignupForm1 struct {
	Header *SignupFormHeaderOptions `json:"header,omitempty"`
	// The signup form body content.
	Contents []CollectionOfContentForListSignupForms `json:"contents,omitempty"`
	// An array of objects, each representing an element style for the signup form.
	Styles []CollectionOfElementStyleForListSignupForms `json:"styles,omitempty"`
}

// NewSignupForm1 instantiates a new SignupForm1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignupForm1() *SignupForm1 {
	this := SignupForm1{}
	return &this
}

// NewSignupForm1WithDefaults instantiates a new SignupForm1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignupForm1WithDefaults() *SignupForm1 {
	this := SignupForm1{}
	return &this
}

// GetHeader returns the Header field value if set, zero value otherwise.
func (o *SignupForm1) GetHeader() SignupFormHeaderOptions {
	if o == nil || IsNil(o.Header) {
		var ret SignupFormHeaderOptions
		return ret
	}
	return *o.Header
}

// GetHeaderOk returns a tuple with the Header field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignupForm1) GetHeaderOk() (*SignupFormHeaderOptions, bool) {
	if o == nil || IsNil(o.Header) {
		return nil, false
	}
	return o.Header, true
}

// HasHeader returns a boolean if a field has been set.
func (o *SignupForm1) HasHeader() bool {
	if o != nil && !IsNil(o.Header) {
		return true
	}

	return false
}

// SetHeader gets a reference to the given SignupFormHeaderOptions and assigns it to the Header field.
func (o *SignupForm1) SetHeader(v SignupFormHeaderOptions) {
	o.Header = &v
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *SignupForm1) GetContents() []CollectionOfContentForListSignupForms {
	if o == nil || IsNil(o.Contents) {
		var ret []CollectionOfContentForListSignupForms
		return ret
	}
	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignupForm1) GetContentsOk() ([]CollectionOfContentForListSignupForms, bool) {
	if o == nil || IsNil(o.Contents) {
		return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *SignupForm1) HasContents() bool {
	if o != nil && !IsNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given []CollectionOfContentForListSignupForms and assigns it to the Contents field.
func (o *SignupForm1) SetContents(v []CollectionOfContentForListSignupForms) {
	o.Contents = v
}

// GetStyles returns the Styles field value if set, zero value otherwise.
func (o *SignupForm1) GetStyles() []CollectionOfElementStyleForListSignupForms {
	if o == nil || IsNil(o.Styles) {
		var ret []CollectionOfElementStyleForListSignupForms
		return ret
	}
	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignupForm1) GetStylesOk() ([]CollectionOfElementStyleForListSignupForms, bool) {
	if o == nil || IsNil(o.Styles) {
		return nil, false
	}
	return o.Styles, true
}

// HasStyles returns a boolean if a field has been set.
func (o *SignupForm1) HasStyles() bool {
	if o != nil && !IsNil(o.Styles) {
		return true
	}

	return false
}

// SetStyles gets a reference to the given []CollectionOfElementStyleForListSignupForms and assigns it to the Styles field.
func (o *SignupForm1) SetStyles(v []CollectionOfElementStyleForListSignupForms) {
	o.Styles = v
}

func (o SignupForm1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignupForm1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Header) {
		toSerialize["header"] = o.Header
	}
	if !IsNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	if !IsNil(o.Styles) {
		toSerialize["styles"] = o.Styles
	}
	return toSerialize, nil
}

type NullableSignupForm1 struct {
	value *SignupForm1
	isSet bool
}

func (v NullableSignupForm1) Get() *SignupForm1 {
	return v.value
}

func (v *NullableSignupForm1) Set(val *SignupForm1) {
	v.value = val
	v.isSet = true
}

func (v NullableSignupForm1) IsSet() bool {
	return v.isSet
}

func (v *NullableSignupForm1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignupForm1(val *SignupForm1) *NullableSignupForm1 {
	return &NullableSignupForm1{value: val, isSet: true}
}

func (v NullableSignupForm1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignupForm1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



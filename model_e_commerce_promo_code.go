/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ECommercePromoCode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ECommercePromoCode{}

// ECommercePromoCode Information about an Ecommerce Store's specific Promo Code
type ECommercePromoCode struct {
	// A unique identifier for the promo Code.
	Id *string `json:"id,omitempty"`
	// The discount code. Restricted to UTF-8 characters with max length 50.
	Code *string `json:"code,omitempty"`
	// The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.
	RedemptionUrl *string `json:"redemption_url,omitempty"`
	// Number of times promo code has been used.
	UsageCount *int32 `json:"usage_count,omitempty"`
	// Whether the promo code is currently enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// The date and time the promotion was created in ISO 8601 format.
	CreatedAtForeign *time.Time `json:"created_at_foreign,omitempty"`
	// The date and time the promotion was updated in ISO 8601 format.
	UpdatedAtForeign *time.Time `json:"updated_at_foreign,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewECommercePromoCode instantiates a new ECommercePromoCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewECommercePromoCode() *ECommercePromoCode {
	this := ECommercePromoCode{}
	return &this
}

// NewECommercePromoCodeWithDefaults instantiates a new ECommercePromoCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewECommercePromoCodeWithDefaults() *ECommercePromoCode {
	this := ECommercePromoCode{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ECommercePromoCode) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoCode) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ECommercePromoCode) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ECommercePromoCode) SetId(v string) {
	o.Id = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ECommercePromoCode) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoCode) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ECommercePromoCode) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ECommercePromoCode) SetCode(v string) {
	o.Code = &v
}

// GetRedemptionUrl returns the RedemptionUrl field value if set, zero value otherwise.
func (o *ECommercePromoCode) GetRedemptionUrl() string {
	if o == nil || IsNil(o.RedemptionUrl) {
		var ret string
		return ret
	}
	return *o.RedemptionUrl
}

// GetRedemptionUrlOk returns a tuple with the RedemptionUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoCode) GetRedemptionUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RedemptionUrl) {
		return nil, false
	}
	return o.RedemptionUrl, true
}

// HasRedemptionUrl returns a boolean if a field has been set.
func (o *ECommercePromoCode) HasRedemptionUrl() bool {
	if o != nil && !IsNil(o.RedemptionUrl) {
		return true
	}

	return false
}

// SetRedemptionUrl gets a reference to the given string and assigns it to the RedemptionUrl field.
func (o *ECommercePromoCode) SetRedemptionUrl(v string) {
	o.RedemptionUrl = &v
}

// GetUsageCount returns the UsageCount field value if set, zero value otherwise.
func (o *ECommercePromoCode) GetUsageCount() int32 {
	if o == nil || IsNil(o.UsageCount) {
		var ret int32
		return ret
	}
	return *o.UsageCount
}

// GetUsageCountOk returns a tuple with the UsageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoCode) GetUsageCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UsageCount) {
		return nil, false
	}
	return o.UsageCount, true
}

// HasUsageCount returns a boolean if a field has been set.
func (o *ECommercePromoCode) HasUsageCount() bool {
	if o != nil && !IsNil(o.UsageCount) {
		return true
	}

	return false
}

// SetUsageCount gets a reference to the given int32 and assigns it to the UsageCount field.
func (o *ECommercePromoCode) SetUsageCount(v int32) {
	o.UsageCount = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ECommercePromoCode) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoCode) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ECommercePromoCode) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ECommercePromoCode) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetCreatedAtForeign returns the CreatedAtForeign field value if set, zero value otherwise.
func (o *ECommercePromoCode) GetCreatedAtForeign() time.Time {
	if o == nil || IsNil(o.CreatedAtForeign) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtForeign
}

// GetCreatedAtForeignOk returns a tuple with the CreatedAtForeign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoCode) GetCreatedAtForeignOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAtForeign) {
		return nil, false
	}
	return o.CreatedAtForeign, true
}

// HasCreatedAtForeign returns a boolean if a field has been set.
func (o *ECommercePromoCode) HasCreatedAtForeign() bool {
	if o != nil && !IsNil(o.CreatedAtForeign) {
		return true
	}

	return false
}

// SetCreatedAtForeign gets a reference to the given time.Time and assigns it to the CreatedAtForeign field.
func (o *ECommercePromoCode) SetCreatedAtForeign(v time.Time) {
	o.CreatedAtForeign = &v
}

// GetUpdatedAtForeign returns the UpdatedAtForeign field value if set, zero value otherwise.
func (o *ECommercePromoCode) GetUpdatedAtForeign() time.Time {
	if o == nil || IsNil(o.UpdatedAtForeign) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtForeign
}

// GetUpdatedAtForeignOk returns a tuple with the UpdatedAtForeign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoCode) GetUpdatedAtForeignOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAtForeign) {
		return nil, false
	}
	return o.UpdatedAtForeign, true
}

// HasUpdatedAtForeign returns a boolean if a field has been set.
func (o *ECommercePromoCode) HasUpdatedAtForeign() bool {
	if o != nil && !IsNil(o.UpdatedAtForeign) {
		return true
	}

	return false
}

// SetUpdatedAtForeign gets a reference to the given time.Time and assigns it to the UpdatedAtForeign field.
func (o *ECommercePromoCode) SetUpdatedAtForeign(v time.Time) {
	o.UpdatedAtForeign = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ECommercePromoCode) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoCode) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ECommercePromoCode) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *ECommercePromoCode) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o ECommercePromoCode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ECommercePromoCode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.RedemptionUrl) {
		toSerialize["redemption_url"] = o.RedemptionUrl
	}
	if !IsNil(o.UsageCount) {
		toSerialize["usage_count"] = o.UsageCount
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.CreatedAtForeign) {
		toSerialize["created_at_foreign"] = o.CreatedAtForeign
	}
	if !IsNil(o.UpdatedAtForeign) {
		toSerialize["updated_at_foreign"] = o.UpdatedAtForeign
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableECommercePromoCode struct {
	value *ECommercePromoCode
	isSet bool
}

func (v NullableECommercePromoCode) Get() *ECommercePromoCode {
	return v.value
}

func (v *NullableECommercePromoCode) Set(val *ECommercePromoCode) {
	v.value = val
	v.isSet = true
}

func (v NullableECommercePromoCode) IsSet() bool {
	return v.isSet
}

func (v *NullableECommercePromoCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECommercePromoCode(val *ECommercePromoCode) *NullableECommercePromoCode {
	return &NullableECommercePromoCode{value: val, isSet: true}
}

func (v NullableECommercePromoCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECommercePromoCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



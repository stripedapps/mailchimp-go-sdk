/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GalleryFile1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GalleryFile1{}

// GalleryFile1 An individual file listed in the File Manager.
type GalleryFile1 struct {
	// The id of the folder.
	FolderId *int32 `json:"folder_id,omitempty"`
	// The name of the file.
	Name string `json:"name"`
	// The base64-encoded contents of the file.
	FileData string `json:"file_data"`
}

// NewGalleryFile1 instantiates a new GalleryFile1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGalleryFile1(name string, fileData string) *GalleryFile1 {
	this := GalleryFile1{}
	this.Name = name
	this.FileData = fileData
	return &this
}

// NewGalleryFile1WithDefaults instantiates a new GalleryFile1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGalleryFile1WithDefaults() *GalleryFile1 {
	this := GalleryFile1{}
	return &this
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *GalleryFile1) GetFolderId() int32 {
	if o == nil || IsNil(o.FolderId) {
		var ret int32
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GalleryFile1) GetFolderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FolderId) {
		return nil, false
	}
	return o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *GalleryFile1) HasFolderId() bool {
	if o != nil && !IsNil(o.FolderId) {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given int32 and assigns it to the FolderId field.
func (o *GalleryFile1) SetFolderId(v int32) {
	o.FolderId = &v
}

// GetName returns the Name field value
func (o *GalleryFile1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GalleryFile1) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GalleryFile1) SetName(v string) {
	o.Name = v
}

// GetFileData returns the FileData field value
func (o *GalleryFile1) GetFileData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileData
}

// GetFileDataOk returns a tuple with the FileData field value
// and a boolean to check if the value has been set.
func (o *GalleryFile1) GetFileDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileData, true
}

// SetFileData sets field value
func (o *GalleryFile1) SetFileData(v string) {
	o.FileData = v
}

func (o GalleryFile1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GalleryFile1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FolderId) {
		toSerialize["folder_id"] = o.FolderId
	}
	toSerialize["name"] = o.Name
	toSerialize["file_data"] = o.FileData
	return toSerialize, nil
}

type NullableGalleryFile1 struct {
	value *GalleryFile1
	isSet bool
}

func (v NullableGalleryFile1) Get() *GalleryFile1 {
	return v.value
}

func (v *NullableGalleryFile1) Set(val *GalleryFile1) {
	v.value = val
	v.isSet = true
}

func (v NullableGalleryFile1) IsSet() bool {
	return v.isSet
}

func (v *NullableGalleryFile1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGalleryFile1(val *GalleryFile1) *NullableGalleryFile1 {
	return &NullableGalleryFile1{value: val, isSet: true}
}

func (v NullableGalleryFile1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGalleryFile1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



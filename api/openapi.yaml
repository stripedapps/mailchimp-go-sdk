openapi: 3.0.1
info:
  contact:
    email: apihelp@mailchimp.com
    name: Mailchimp API Support
  title: Mailchimp Marketing API
  version: 3.0.55
  x-permalink: https://github.com/mailchimp/mailchimp-client-lib-codegen/blob/main/spec/marketing.json
externalDocs:
  description: Learn more with the full Mailchimp API documentation.
  url: https://mailchimp.com/developer/marketing/
servers:
- url: https://server.api.mailchimp.com/3.0
security:
- basicAuth: []
paths:
  /:
    get:
      deprecated: false
      description: Get links to all other resources available in the API.
      operationId: getRoot
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_Root'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/API_Root'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List api root resources
      tags:
      - root
      x-custom-config:
        methodNameSnake: get_root
        methodNameCamel: getRoot
  /activity-feed/chimp-chatter:
    get:
      description: Return the Chimp Chatter for this account ordered by most recent.
      operationId: getActivityFeedChimpChatter
      parameters:
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getActivityFeedChimpChatter_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getActivityFeedChimpChatter_200_response'
          description: ChimpChatter Collection
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get latest chimp chatter
      tags:
      - activityFeed
      x-custom-config:
        methodNameSnake: get_chimp_chatter
        methodNameCamel: getChimpChatter
  /account-exports:
    get:
      deprecated: false
      description: Get a list of account exports for a given account.
      operationId: getAccountExports
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountExports_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getAccountExports_200_response'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List account exports
      tags:
      - accountExports
      x-custom-config:
        methodNameSnake: list_account_exports
        methodNameCamel: listAccountExports
    post:
      deprecated: false
      description: Create a new account export in your Mailchimp account.
      operationId: postAccountExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_an_account_export'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account_Exports_inner'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Account_Exports_inner'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add export
      tags:
      - accountExports
      x-custom-config:
        methodNameSnake: create_account_export
        methodNameCamel: createAccountExport
      x-codegen-request-body-name: body
  /account-exports/{export_id}:
    get:
      deprecated: false
      description: Get information about a specific account export.
      operationId: getAccountExportId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the account export.
        in: path
        name: export_id
        required: true
        schema:
          type: string
          x-title: Export ID
        x-title: Export ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account_Exports_inner'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Account_Exports_inner'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get account export info
      tags:
      - accountExport
      x-custom-config:
        methodNameSnake: get_account_exports
        methodNameCamel: getAccountExports
  /authorized-apps:
    get:
      deprecated: false
      description: "Get a list of an account's registered, connected applications."
      operationId: getAuthorizedApps
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAuthorizedApps_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getAuthorizedApps_200_response'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List authorized apps
      tags:
      - authorizedApps
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
  /authorized-apps/{app_id}:
    get:
      deprecated: false
      description: Get information about a specific authorized application.
      operationId: getAuthorizedAppsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the connected authorized application.
        in: path
        name: app_id
        required: true
        schema:
          type: string
          x-title: App ID
        x-title: App ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authorized_Applications_inner'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Authorized_Applications_inner'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get authorized app info
      tags:
      - authorizedApps
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
  /automations:
    get:
      deprecated: false
      description: Get a summary of an account's classic automations.
      operationId: getAutomations
      parameters:
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: "Restrict the response to automations created before this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_create_time
        schema:
          format: date-time
          type: string
          x-title: Before Create Time
        x-title: Before Create Time
      - description: "Restrict the response to automations created after this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_create_time
        schema:
          format: date-time
          type: string
          x-title: Since Create Time
        x-title: Since Create Time
      - description: "Restrict the response to automations started before this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_start_time
        schema:
          format: date-time
          type: string
          x-title: Before Start Time
        x-title: Before Start Time
      - description: "Restrict the response to automations started after this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_start_time
        schema:
          format: date-time
          type: string
          x-title: Since Start Time
        x-title: Since Start Time
      - description: Restrict the results to automations with the specified status.
        in: query
        name: status
        schema:
          enum:
          - save
          - paused
          - sending
          type: string
          x-title: Status
        x-title: Status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAutomations_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getAutomations_200_response'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List automations
      tags:
      - automations
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      deprecated: false
      description: Create a new classic automation in your Mailchimp account.
      operationId: postAutomations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Automation_Workflow_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation_Workflow'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Automation_Workflow'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add automation
      tags:
      - automations
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /automations/{workflow_id}:
    get:
      description: Get a summary of an individual classic automation workflow's settings
        and content. The `trigger_settings` object returns information for the first
        email in the workflow.
      operationId: getAutomationsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation_Workflow'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Automation_Workflow'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get automation info
      tags:
      - automations
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
  /automations/{workflow_id}/actions/pause-all-emails:
    post:
      deprecated: false
      description: Pause all emails in a specific classic automation workflow.
      operationId: postAutomationsIdActionsPauseAllEmails
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Pause automation emails
      tags:
      - automations
      x-custom-config:
        methodNameSnake: pause_all_emails
        methodNameCamel: pauseAllEmails
  /automations/{workflow_id}/actions/start-all-emails:
    post:
      deprecated: false
      description: Start all emails in a classic automation workflow.
      operationId: postAutomationsIdActionsStartAllEmails
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Start automation emails
      tags:
      - automations
      x-custom-config:
        methodNameSnake: start_all_emails
        methodNameCamel: startAllEmails
  /automations/{workflow_id}/actions/archive:
    post:
      deprecated: false
      description: "Archiving will permanently end your automation and keep the report\
        \ data. You’ll be able to replicate your archived automation, but you can’\
        t restart it."
      operationId: archiveAutomations
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Archive automation
      tags:
      - automations
      x-custom-config:
        methodNameSnake: archive
        methodNameCamel: archive
  /automations/{workflow_id}/emails:
    get:
      deprecated: false
      description: Get a summary of the emails in a classic automation workflow.
      operationId: getAutomationsIdEmails
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation_Emails'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Automation_Emails'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List automated emails
      tags:
      - automations
      x-custom-config:
        methodNameSnake: list_all_workflow_emails
        methodNameCamel: listAllWorkflowEmails
  /automations/{workflow_id}/emails/{workflow_email_id}:
    delete:
      deprecated: false
      description: "Removes an individual classic automation workflow email. Emails\
        \ from certain workflow types, including the Abandoned Cart Email (abandonedCart)\
        \ and Product Retargeting Email (abandonedBrowse) Workflows, cannot be deleted."
      operationId: deleteAutomationsIdEmailsId
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      - description: The unique id for the Automation workflow email.
        in: path
        name: workflow_email_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete workflow email
      tags:
      - automations
      x-custom-config:
        methodNameSnake: delete_workflow_email
        methodNameCamel: deleteWorkflowEmail
    get:
      deprecated: false
      description: Get information about an individual classic automation workflow
        email.
      operationId: getAutomationsIdEmailsId
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      - description: The unique id for the Automation workflow email.
        in: path
        name: workflow_email_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation_Workflow_Email'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Automation_Workflow_Email'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get workflow email info
      tags:
      - automations
      x-custom-config:
        methodNameSnake: get_workflow_email
        methodNameCamel: getWorkflowEmail
    patch:
      description: "Update settings for a classic automation workflow email.  Only\
        \ works with workflows of type: abandonedBrowse, abandonedCart, emailFollowup,\
        \ or singleWelcome."
      operationId: patchAutomationEmailWorkflowId
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      - description: The unique id for the Automation workflow email.
        in: path
        name: workflow_email_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update_information_about_a_specific_workflow_email'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation_Workflow_Email'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Automation_Workflow_Email'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update workflow email
      tags:
      - automations
      x-custom-config:
        methodNameSnake: update_workflow_email
        methodNameCamel: updateWorkflowEmail
      x-codegen-request-body-name: body
  /automations/{workflow_id}/emails/{workflow_email_id}/queue:
    get:
      deprecated: false
      description: Get information about a classic automation email queue.
      operationId: getAutomationsIdEmailsIdQueue
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      - description: The unique id for the Automation workflow email.
        in: path
        name: workflow_email_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAutomationsIdEmailsIdQueue_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getAutomationsIdEmailsIdQueue_200_response'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List automated email subscribers
      tags:
      - automations
      x-custom-config:
        methodNameSnake: get_workflow_email_subscriber_queue
        methodNameCamel: getWorkflowEmailSubscriberQueue
    post:
      deprecated: false
      description: "Manually add a subscriber to a workflow, bypassing the default\
        \ trigger settings. You can also use this endpoint to trigger a series of\
        \ automated emails in an API 3.0 workflow type."
      operationId: postAutomationsIdEmailsIdQueue
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      - description: The unique id for the Automation workflow email.
        in: path
        name: workflow_email_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber_in_Automation_Queue_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber_in_Automation_Queue_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber_in_Automation_Queue_2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add subscriber to workflow email
      tags:
      - automations
      x-custom-config:
        methodNameSnake: add_workflow_email_subscriber
        methodNameCamel: addWorkflowEmailSubscriber
      x-codegen-request-body-name: body
  /automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}:
    get:
      deprecated: false
      description: Get information about a specific subscriber in a classic automation
        email queue.
      operationId: getAutomationsIdEmailsIdQueueId
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      - description: The unique id for the Automation workflow email.
        in: path
        name: workflow_email_id
        required: true
        schema:
          type: string
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber_in_Automation_Queue_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber_in_Automation_Queue_2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get automated email subscriber
      tags:
      - automations
      x-custom-config:
        methodNameSnake: get_workflow_email_subscriber
        methodNameCamel: getWorkflowEmailSubscriber
  /automations/{workflow_id}/emails/{workflow_email_id}/actions/pause:
    post:
      deprecated: false
      description: Pause an automated email.
      operationId: postAutomationsIdEmailsIdActionsPause
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      - description: The unique id for the Automation workflow email.
        in: path
        name: workflow_email_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Pause automated email
      tags:
      - automations
      x-custom-config:
        methodNameSnake: pause_workflow_email
        methodNameCamel: pauseWorkflowEmail
  /automations/{workflow_id}/emails/{workflow_email_id}/actions/start:
    post:
      deprecated: false
      description: Start an automated email.
      operationId: postAutomationsIdEmailsIdActionsStart
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      - description: The unique id for the Automation workflow email.
        in: path
        name: workflow_email_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Start automated email
      tags:
      - automations
      x-custom-config:
        methodNameSnake: start_workflow_email
        methodNameCamel: startWorkflowEmail
  /automations/{workflow_id}/removed-subscribers:
    get:
      deprecated: false
      description: Get information about subscribers who were removed from a classic
        automation workflow.
      operationId: getAutomationsIdRemovedSubscribers
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Removed_Subscribers'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Removed_Subscribers'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List subscribers removed from workflow
      tags:
      - automations
      x-custom-config:
        methodNameSnake: list_workflow_email_subscribers_removed
        methodNameCamel: listWorkflowEmailSubscribersRemoved
    post:
      deprecated: false
      description: "Remove a subscriber from a specific classic automation workflow.\
        \ You can remove a subscriber at any point in an automation workflow, regardless\
        \ of how many emails they've been sent from that workflow. Once they're removed,\
        \ they can never be added back to the same workflow."
      operationId: postAutomationsIdRemovedSubscribers
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber_in_Automation_Queue_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber_Removed_from_Automation_Workflow'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber_Removed_from_Automation_Workflow'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Remove subscriber from workflow
      tags:
      - automations
      x-custom-config:
        methodNameSnake: remove_workflow_email_subscriber
        methodNameCamel: removeWorkflowEmailSubscriber
      x-codegen-request-body-name: body
  /automations/{workflow_id}/removed-subscribers/{subscriber_hash}:
    get:
      deprecated: false
      description: Get information about a specific subscriber who was removed from
        a classic automation workflow.
      operationId: getAutomationsIdRemovedSubscribersId
      parameters:
      - description: The unique id for the Automation workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          type: string
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber_Removed_from_Automation_Workflow'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber_Removed_from_Automation_Workflow'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get subscriber removed from workflow
      tags:
      - automations
      x-custom-config:
        methodNameSnake: get_removed_workflow_email_subscriber
        methodNameCamel: getRemovedWorkflowEmailSubscriber
  /batches:
    get:
      deprecated: false
      description: Get a summary of batch requests that have been made.
      operationId: getBatches
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch_Operations'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch_Operations'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List batch requests
      tags:
      - batches
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      deprecated: false
      description: Begin processing a batch operations request.
      operationId: postBatches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postBatches_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Start batch operation
      tags:
      - batches
      x-custom-config:
        methodNameSnake: start
        methodNameCamel: start
      x-codegen-request-body-name: body
  /batches/{batch_id}:
    delete:
      deprecated: false
      description: "Stops a batch request from running. Since only one batch request\
        \ is run at a time, this can be used to cancel a long running request. The\
        \ results of any completed operations will not be available after this call."
      operationId: deleteBatchesId
      parameters:
      - description: The unique id for the batch operation.
        in: path
        name: batch_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete batch request
      tags:
      - batches
      x-custom-config:
        methodNameSnake: delete_request
        methodNameCamel: deleteRequest
    get:
      deprecated: false
      description: Get the status of a batch request.
      operationId: getBatchesId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the batch operation.
        in: path
        name: batch_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get batch operation status
      tags:
      - batches
      x-custom-config:
        methodNameSnake: status
        methodNameCamel: status
  /batch-webhooks:
    get:
      deprecated: false
      description: Get all webhooks that have been configured for batches.
      operationId: getBatchWebhooks
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch_Webhooks'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch_Webhooks'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List batch webhooks
      tags:
      - batchWebhooks
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      deprecated: false
      description: Configure a webhook that will fire whenever any batch request completes
        processing.  You may only have a maximum of 20 batch webhooks.
      operationId: postBatchWebhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch_Webhook_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch_Webhook'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch_Webhook'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add batch webhook
      tags:
      - batchWebhooks
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /batch-webhooks/{batch_webhook_id}:
    delete:
      deprecated: false
      description: Remove a batch webhook. Webhooks will no longer be sent to the
        given URL.
      operationId: deleteBatchWebhookId
      parameters:
      - description: The unique id for the batch webhook.
        in: path
        name: batch_webhook_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete batch webhook
      tags:
      - batchWebhooks
      x-custom-config:
        methodNameSnake: remove
        methodNameCamel: remove
    get:
      deprecated: false
      description: Get information about a specific batch webhook.
      operationId: getBatchWebhook
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the batch webhook.
        in: path
        name: batch_webhook_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch_Webhook'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch_Webhook'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get batch webhook info
      tags:
      - batchWebhooks
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
    patch:
      deprecated: false
      description: Update a webhook that will fire whenever any batch request completes
        processing.
      operationId: patchBatchWebhooks
      parameters:
      - description: The unique id for the batch webhook.
        in: path
        name: batch_webhook_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch_Webhook_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch_Webhook'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch_Webhook'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update batch webhook
      tags:
      - batchWebhooks
      x-custom-config:
        methodNameSnake: update
        methodNameCamel: update
      x-codegen-request-body-name: body
  /template-folders:
    get:
      deprecated: false
      description: Get all folders used to organize templates.
      operationId: getTemplateFolders
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Folders'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template_Folders'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List template folders
      tags:
      - templateFolders
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      deprecated: false
      description: Create a new template folder.
      operationId: postTemplateFolders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template_Folder_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Folder'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template_Folder'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add template folder
      tags:
      - templateFolders
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /template-folders/{folder_id}:
    delete:
      deprecated: false
      description: "Delete a specific template folder, and mark all the templates\
        \ in the folder as 'unfiled'."
      operationId: deleteTemplateFoldersId
      parameters:
      - description: The unique id for the template folder.
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete template folder
      tags:
      - templateFolders
      x-custom-config:
        methodNameSnake: remove
        methodNameCamel: remove
    get:
      deprecated: false
      description: Get information about a specific folder used to organize templates.
      operationId: getTemplateFoldersId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the template folder.
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Folder'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template_Folder'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get template folder
      tags:
      - templateFolders
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
    patch:
      deprecated: false
      description: Update a specific folder used to organize templates.
      operationId: patchTemplateFoldersId
      parameters:
      - description: The unique id for the template folder.
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template_Folder_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Folder'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template_Folder'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update template folder
      tags:
      - templateFolders
      x-custom-config:
        methodNameSnake: update
        methodNameCamel: update
      x-codegen-request-body-name: body
  /campaign-folders:
    get:
      deprecated: false
      description: Get all folders used to organize campaigns.
      operationId: getCampaignFolders
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Folders'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Folders'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List campaign folders
      tags:
      - campaignFolders
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      deprecated: false
      description: Create a new campaign folder.
      operationId: postCampaignFolders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign_Folder_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Folder'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Folder'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add campaign folder
      tags:
      - campaignFolders
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /campaign-folders/{folder_id}:
    delete:
      deprecated: false
      description: "Delete a specific campaign folder, and mark all the campaigns\
        \ in the folder as 'unfiled'."
      operationId: deleteCampaignFoldersId
      parameters:
      - description: The unique id for the campaign folder.
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete campaign folder
      tags:
      - campaignFolders
      x-custom-config:
        methodNameSnake: remove
        methodNameCamel: remove
    get:
      deprecated: false
      description: Get information about a specific folder used to organize campaigns.
      operationId: getCampaignFoldersId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign folder.
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Folder'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Folder'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get campaign folder
      tags:
      - campaignFolders
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
    patch:
      deprecated: false
      description: Update a specific folder used to organize campaigns.
      operationId: patchCampaignFoldersId
      parameters:
      - description: The unique id for the campaign folder.
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign_Folder_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Folder'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Folder'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update campaign folder
      tags:
      - campaignFolders
      x-custom-config:
        methodNameSnake: update
        methodNameCamel: update
      x-codegen-request-body-name: body
  /campaigns:
    get:
      deprecated: false
      description: Get all campaigns in an account.
      operationId: getCampaigns
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The campaign type.
        in: query
        name: type
        schema:
          enum:
          - regular
          - plaintext
          - absplit
          - rss
          - variate
          type: string
          x-title: Campaign Type
        x-title: Campaign Type
      - description: The status of the campaign.
        in: query
        name: status
        schema:
          enum:
          - save
          - paused
          - schedule
          - sending
          - sent
          type: string
          x-title: Status
        x-title: Status
      - description: "Restrict the response to campaigns sent before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_send_time
        schema:
          format: date-time
          type: string
          x-title: Before Send Time
        x-title: Before Send Time
      - description: "Restrict the response to campaigns sent after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_send_time
        schema:
          format: date-time
          type: string
          x-title: Since Send Time
        x-title: Since Send Time
      - description: "Restrict the response to campaigns created before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_create_time
        schema:
          format: date-time
          type: string
          x-title: Before Create Time
        x-title: Before Create Time
      - description: "Restrict the response to campaigns created after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_create_time
        schema:
          format: date-time
          type: string
          x-title: Since Create Time
        x-title: Since Create Time
      - description: The unique id for the list.
        in: query
        name: list_id
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique folder id.
        in: query
        name: folder_id
        schema:
          type: string
          x-title: Folder ID
        x-title: Folder ID
      - description: Retrieve campaigns sent to a particular list member. Member ID
          is The MD5 hash of the lowercase version of the list member’s email address.
        in: query
        name: member_id
        schema:
          type: string
          x-title: Member ID
        x-title: Member ID
      - description: Returns files sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - create_time
          - send_time
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      - description: "Return the `resend_shortcut_eligibility` field in the response,\
          \ which tells you if the campaign is eligible for the various Campaign Resend\
          \ Shortcuts offered."
        in: query
        name: include_resend_shortcut_eligibility
        schema:
          type: boolean
          x-title: Include Resend Shortcut Eligibility
        x-title: Include Resend Shortcut Eligibility
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCampaigns_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getCampaigns_200_response'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List campaigns
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      deprecated: false
      description: Create a new Mailchimp campaign.
      operationId: postCampaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add campaign
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}:
    delete:
      deprecated: false
      description: Remove a campaign from your Mailchimp account.
      operationId: deleteCampaignsId
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete campaign
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: remove
        methodNameCamel: remove
    get:
      deprecated: false
      description: Get information about a specific campaign.
      operationId: getCampaignsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: "Return the `resend_shortcut_eligibility` field in the response,\
          \ which tells you if the campaign is eligible for the various Campaign Resend\
          \ Shortcuts offered."
        in: query
        name: include_resend_shortcut_eligibility
        schema:
          type: boolean
          x-title: Include Resend Shortcut Eligibility
        x-title: Include Resend Shortcut Eligibility
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get campaign info
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
    patch:
      description: Update some or all of the settings for a specific campaign.
      operationId: patchCampaignsId
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update campaign settings
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: update
        methodNameCamel: update
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/actions/cancel-send:
    post:
      deprecated: false
      description: "Cancel a Regular or Plain-Text Campaign after you send, before\
        \ all of your recipients receive it. This feature is included with Mailchimp\
        \ Pro."
      operationId: postCampaignsIdActionsCancelSend
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Cancel campaign
      tags:
      - campaigns
      x-pro-required: true
      x-custom-config:
        methodNameSnake: cancel_send
        methodNameCamel: cancelSend
  /campaigns/{campaign_id}/actions/replicate:
    post:
      deprecated: false
      description: Replicate a campaign in saved or send status.
      operationId: postCampaignsIdActionsReplicate
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_3'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Replicate campaign
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: replicate
        methodNameCamel: replicate
  /campaigns/{campaign_id}/actions/send:
    post:
      deprecated: false
      description: "Send a Mailchimp campaign. For RSS Campaigns, the campaign will\
        \ send according to its schedule. All other campaigns will send immediately."
      operationId: postCampaignsIdActionsSend
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Send campaign
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: send
        methodNameCamel: send
  /campaigns/{campaign_id}/actions/schedule:
    post:
      deprecated: false
      description: "Schedule a campaign for delivery. If you're using Multivariate\
        \ Campaigns to test send times or sending RSS Campaigns, use the send action\
        \ instead."
      operationId: postCampaignsIdActionsSchedule
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCampaignsIdActionsSchedule_request'
        required: true
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Schedule campaign
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: schedule
        methodNameCamel: schedule
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/actions/unschedule:
    post:
      deprecated: false
      description: Unschedule a scheduled campaign that hasn't started sending.
      operationId: postCampaignsIdActionsUnschedule
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Unschedule campaign
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: unschedule
        methodNameCamel: unschedule
  /campaigns/{campaign_id}/actions/test:
    post:
      deprecated: false
      description: Send a test email.
      operationId: postCampaignsIdActionsTest
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCampaignsIdActionsTest_request'
        required: true
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Send test email
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: send_test_email
        methodNameCamel: sendTestEmail
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/actions/pause:
    post:
      deprecated: false
      description: Pause an RSS-Driven campaign.
      operationId: postCampaignsIdActionsPause
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Pause rss campaign
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: pause
        methodNameCamel: pause
  /campaigns/{campaign_id}/actions/resume:
    post:
      deprecated: false
      description: Resume an RSS-Driven campaign.
      operationId: postCampaignsIdActionsResume
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Resume rss campaign
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: resume
        methodNameCamel: resume
  /campaigns/{campaign_id}/actions/create-resend:
    post:
      deprecated: false
      description: "Remove the guesswork for resending a campaign to certain segments.\
        \ You can use this endpoint as a shortcut to replicate a campaign and resend\
        \ it to common segments, such as those who didn't open the campaign, or any\
        \ new subscribers since it was sent."
      operationId: postCampaignsIdActionsCreateResend
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCampaignsIdActionsCreateResend_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_3'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Resend campaign
      tags:
      - campaigns
      x-pro-required: true
      x-custom-config:
        methodNameSnake: create_resend
        methodNameCamel: createResend
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/content:
    get:
      deprecated: false
      description: Get the the HTML and plain-text content for a campaign.
      operationId: getCampaignsIdContent
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Content'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Content'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get campaign content
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: get_content
        methodNameCamel: getContent
    put:
      deprecated: false
      description: Set the content for a campaign.
      operationId: putCampaignsIdContent
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign_Content_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Content'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Content'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Set campaign content
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: set_content
        methodNameCamel: setContent
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/feedback:
    get:
      deprecated: false
      description: Get team feedback while you're working together on a Mailchimp
        campaign.
      operationId: getCampaignsIdFeedback
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Reports'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Reports'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List campaign feedback
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: get_feedback
        methodNameCamel: getFeedback
    post:
      deprecated: false
      description: Add feedback on a specific campaign.
      operationId: postCampaignsIdFeedback
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign_Feedback_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Feedback_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Feedback_2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add campaign feedback
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: add_feedback
        methodNameCamel: addFeedback
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/feedback/{feedback_id}:
    delete:
      deprecated: false
      description: Remove a specific feedback message for a campaign.
      operationId: deleteCampaignsIdFeedbackId
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The unique id for the feedback message.
        in: path
        name: feedback_id
        required: true
        schema:
          type: string
          x-title: Feedback ID
        x-title: Feedback ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete campaign feedback message
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: delete_feedback_message
        methodNameCamel: deleteFeedbackMessage
    get:
      deprecated: false
      description: Get a specific feedback message from a campaign.
      operationId: getCampaignsIdFeedbackId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The unique id for the feedback message.
        in: path
        name: feedback_id
        required: true
        schema:
          type: string
          x-title: Feedback ID
        x-title: Feedback ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Feedback_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Feedback_2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get campaign feedback message
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: get_feedback_message
        methodNameCamel: getFeedbackMessage
    patch:
      deprecated: false
      description: Update a specific feedback message for a campaign.
      operationId: patchCampaignsIdFeedbackId
      parameters:
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The unique id for the feedback message.
        in: path
        name: feedback_id
        required: true
        schema:
          type: string
          x-title: Feedback ID
        x-title: Feedback ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign_Feedback_3'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Feedback_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Feedback_2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update campaign feedback message
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: update_feedback_message
        methodNameCamel: updateFeedbackMessage
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/send-checklist:
    get:
      deprecated: false
      description: "Review the send checklist for a campaign, and resolve any issues\
        \ before sending."
      operationId: getCampaignsIdSendChecklist
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Send_Checklist'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Send_Checklist'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get campaign send checklist
      tags:
      - campaigns
      x-custom-config:
        methodNameSnake: get_send_checklist
        methodNameCamel: getSendChecklist
  /connected-sites:
    get:
      deprecated: false
      description: Get all connected sites in an account.
      operationId: getConnectedSites
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connected_Sites'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Connected_Sites'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List connected sites
      tags:
      - connectedSites
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      deprecated: false
      description: Create a new Mailchimp connected site.
      operationId: postConnectedSites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connected_Site_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connected_Site'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Connected_Site'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add connected site
      tags:
      - connectedSites
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /connected-sites/{connected_site_id}:
    delete:
      deprecated: false
      description: Remove a connected site from your Mailchimp account.
      operationId: deleteConnectedSitesId
      parameters:
      - description: The unique identifier for the site.
        in: path
        name: connected_site_id
        required: true
        schema:
          type: string
          x-title: Connected Site Foreign ID
        x-title: Connected Site Foreign ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete connected site
      tags:
      - connectedSites
      x-custom-config:
        methodNameSnake: remove
        methodNameCamel: remove
    get:
      deprecated: false
      description: Get information about a specific connected site.
      operationId: getConnectedSitesId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique identifier for the site.
        in: path
        name: connected_site_id
        required: true
        schema:
          type: string
          x-title: Connected Site Foreign ID
        x-title: Connected Site Foreign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connected_Site'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Connected_Site'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get connected site
      tags:
      - connectedSites
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
  /connected-sites/{connected_site_id}/actions/verify-script-installation:
    post:
      deprecated: false
      description: "Verify that the connected sites script has been installed, either\
        \ via the script URL or fragment."
      operationId: postConnectedSitesIdActionsVerifyScriptInstallation
      parameters:
      - description: The unique identifier for the site.
        in: path
        name: connected_site_id
        required: true
        schema:
          type: string
          x-title: Connected Site Foreign ID
        x-title: Connected Site Foreign ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Verify connected site script
      tags:
      - connectedSites
      x-pro-required: true
      x-custom-config:
        methodNameSnake: verify_script_installation
        methodNameCamel: verifyScriptInstallation
  /conversations:
    get:
      deprecated: true
      description: "Get a list of conversations for the account. Conversations has\
        \ been deprecated in favor of Inbox and these endpoints don't include Inbox\
        \ data. Past Conversations are still available via this endpoint, but new\
        \ campaign replies and other Inbox messages aren’t available using this endpoint."
      operationId: getConversations
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: Whether the conversation has any unread messages.
        in: query
        name: has_unread_messages
        schema:
          enum:
          - "true"
          - "false"
          type: string
          x-title: Has Unread Messages
        x-title: Has Unread Messages
      - description: The unique id for the list.
        in: query
        name: list_id
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique id for the campaign.
        in: query
        name: campaign_id
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracked_Conversations'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Tracked_Conversations'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List conversations
      tags:
      - conversations
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
  /conversations/{conversation_id}:
    get:
      deprecated: true
      description: "Get details about an individual conversation. Conversations has\
        \ been deprecated in favor of Inbox and these endpoints don't include Inbox\
        \ data. Past Conversations are still available via this endpoint, but new\
        \ campaign replies and other Inbox messages aren’t available using this endpoint."
      operationId: getConversationsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the conversation.
        in: path
        name: conversation_id
        required: true
        schema:
          type: string
          x-title: Conversation ID
        x-title: Conversation ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get conversation
      tags:
      - conversations
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
  /conversations/{conversation_id}/messages:
    get:
      deprecated: true
      description: "Get messages from a specific conversation. Conversations has been\
        \ deprecated in favor of Inbox and these endpoints don't include Inbox data.\
        \ Past Conversations are still available via this endpoint, but new campaign\
        \ replies and other Inbox messages aren’t available using this endpoint."
      operationId: getConversationsIdMessages
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the conversation.
        in: path
        name: conversation_id
        required: true
        schema:
          type: string
          x-title: Conversation ID
        x-title: Conversation ID
      - description: Whether a conversation message has been marked as read.
        in: query
        name: is_read
        schema:
          enum:
          - "true"
          - "false"
          type: string
          x-title: Is Read
        x-title: Is Read
      - description: "Restrict the response to messages created before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_timestamp
        schema:
          format: date-time
          type: string
          x-title: Before Timestamp
        x-title: Before Timestamp
      - description: "Restrict the response to messages created after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_timestamp
        schema:
          format: date-time
          type: string
          x-title: Since Timestamp
        x-title: Since Timestamp
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection_of_Conversation_Messages'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection_of_Conversation_Messages'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List messages
      tags:
      - conversations
      x-custom-config:
        methodNameSnake: get_conversation_messages
        methodNameCamel: getConversationMessages
  /conversations/{conversation_id}/messages/{message_id}:
    get:
      deprecated: true
      description: "Get an individual message in a conversation. Conversations has\
        \ been deprecated in favor of Inbox and these endpoints don't include Inbox\
        \ data. Past Conversations are still available via this endpoint, but new\
        \ campaign replies and other Inbox messages aren’t available using this endpoint."
      operationId: getConversationsIdMessagesId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the conversation.
        in: path
        name: conversation_id
        required: true
        schema:
          type: string
          x-title: Conversation ID
        x-title: Conversation ID
      - description: The unique id for the conversation message.
        in: path
        name: message_id
        required: true
        schema:
          type: string
          x-title: Message ID
        x-title: Message ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation_Message'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Conversation_Message'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get message
      tags:
      - conversations
      x-custom-config:
        methodNameSnake: get_conversation_message
        methodNameCamel: getConversationMessage
  /customer-journeys/journeys/{journey_id}/steps/{step_id}/actions/trigger:
    post:
      deprecated: false
      description: "A step trigger in a Customer Journey. To use it, create a starting\
        \ point or step from the Customer Journey builder in the app using the Customer\
        \ Journeys API condition. We’ll provide a url during the process that includes\
        \ the {journey_id} and {step_id}. You’ll then be able to use this endpoint\
        \ to trigger the condition for the posted contact."
      operationId: postCustomerJourneysJourneysIdStepsIdActionsTrigger
      parameters:
      - description: The id for the Journey.
        in: path
        name: journey_id
        required: true
        schema:
          type: integer
          x-title: Journey ID
        x-title: Journey ID
      - description: The id for the Step.
        in: path
        name: step_id
        required: true
        schema:
          type: integer
          x-title: Step ID
        x-title: Step ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber_in_Customer_Journey_s_audience'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                description: Empty Response
                type: object
            application/problem+json:
              schema:
                description: Empty Response
                type: object
          description: An empty response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Customer Journeys API trigger for a contact
      tags:
      - customerJourneys
      x-custom-config:
        methodNameSnake: trigger
        methodNameCamel: trigger
      x-codegen-request-body-name: body
  /file-manager/files:
    get:
      deprecated: false
      description: Get a list of available images and files stored in the File Manager
        for the account.
      operationId: getFileManagerFiles
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The file type for the File Manager file.
        in: query
        name: type
        schema:
          type: string
          x-title: File Type
        x-title: File Type
      - description: The Mailchimp account user who created the File Manager file.
        in: query
        name: created_by
        schema:
          type: string
          x-title: Created By
        x-title: Created By
      - description: "Restrict the response to files created before the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_created_at
        schema:
          type: string
          x-title: Before Created At
        x-title: Before Created At
      - description: "Restrict the response to files created after the set date. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_created_at
        schema:
          type: string
          x-title: Since Created At
        x-title: Since Created At
      - description: Returns files sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - added_date
          - name
          - size
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File_Manager'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/File_Manager'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List stored files
      tags:
      - fileManager
      x-custom-config:
        methodNameSnake: files
        methodNameCamel: files
    post:
      deprecated: false
      description: Upload a new image or file to the File Manager.
      operationId: postFileManagerFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gallery_File_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery_File'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery_File'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add file
      tags:
      - fileManager
      x-custom-config:
        methodNameSnake: upload
        methodNameCamel: upload
      x-codegen-request-body-name: body
  /file-manager/files/{file_id}:
    delete:
      deprecated: false
      description: Remove a specific file from the File Manager.
      operationId: deleteFileManagerFilesId
      parameters:
      - description: The unique id for the File Manager file.
        in: path
        name: file_id
        required: true
        schema:
          type: string
          x-title: File ID
        x-title: File ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete file
      tags:
      - fileManager
      x-custom-config:
        methodNameSnake: delete_file
        methodNameCamel: deleteFile
    get:
      deprecated: false
      description: Get information about a specific file in the File Manager.
      operationId: getFileManagerFilesId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the File Manager file.
        in: path
        name: file_id
        required: true
        schema:
          type: string
          x-title: File ID
        x-title: File ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery_File'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery_File'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get file
      tags:
      - fileManager
      x-custom-config:
        methodNameSnake: get_file
        methodNameCamel: getFile
    patch:
      deprecated: false
      description: Update a file in the File Manager.
      operationId: patchFileManagerFilesId
      parameters:
      - description: The unique id for the File Manager file.
        in: path
        name: file_id
        required: true
        schema:
          type: string
          x-title: File ID
        x-title: File ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gallery_File_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery_File'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery_File'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update file
      tags:
      - fileManager
      x-custom-config:
        methodNameSnake: update_file
        methodNameCamel: updateFile
      x-codegen-request-body-name: body
  /file-manager/folders:
    get:
      deprecated: false
      description: Get a list of all folders in the File Manager.
      operationId: getFileManagerFolders
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The Mailchimp account user who created the File Manager file.
        in: query
        name: created_by
        schema:
          type: string
          x-title: Created By
        x-title: Created By
      - description: "Restrict the response to files created before the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_created_at
        schema:
          type: string
          x-title: Before Created At
        x-title: Before Created At
      - description: "Restrict the response to files created after the set date. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_created_at
        schema:
          type: string
          x-title: Since Created At
        x-title: Since Created At
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File_Manager_Folders'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/File_Manager_Folders'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List folders
      tags:
      - fileManager
      x-custom-config:
        methodNameSnake: list_folders
        methodNameCamel: listFolders
    post:
      deprecated: false
      description: Create a new folder in the File Manager.
      operationId: postFileManagerFolders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gallery_Folder_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery_Folder'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery_Folder'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add folder
      tags:
      - fileManager
      x-custom-config:
        methodNameSnake: create_folder
        methodNameCamel: createFolder
      x-codegen-request-body-name: body
  /file-manager/folders/{folder_id}:
    delete:
      deprecated: false
      description: Delete a specific folder in the File Manager.
      operationId: deleteFileManagerFoldersId
      parameters:
      - description: The unique id for the File Manager folder.
        in: path
        name: folder_id
        required: true
        schema:
          type: string
          x-title: Folder ID
        x-title: Folder ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete folder
      tags:
      - fileManager
      x-custom-config:
        methodNameSnake: delete_folder
        methodNameCamel: deleteFolder
    get:
      deprecated: false
      description: Get information about a specific folder in the File Manager.
      operationId: getFileManagerFoldersId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the File Manager folder.
        in: path
        name: folder_id
        required: true
        schema:
          type: string
          x-title: Folder ID
        x-title: Folder ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery_Folder'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery_Folder'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get folder
      tags:
      - fileManager
      x-custom-config:
        methodNameSnake: get_folder
        methodNameCamel: getFolder
    patch:
      deprecated: false
      description: Update a specific File Manager folder.
      operationId: patchFileManagerFoldersId
      parameters:
      - description: The unique id for the File Manager folder.
        in: path
        name: folder_id
        required: true
        schema:
          type: string
          x-title: Folder ID
        x-title: Folder ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gallery_Folder_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery_Folder'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery_Folder'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update folder
      tags:
      - fileManager
      x-custom-config:
        methodNameSnake: update_folder
        methodNameCamel: updateFolder
      x-codegen-request-body-name: body
  /file-manager/folders/{folder_id}/files:
    get:
      deprecated: false
      description: Get a list of available images and files stored in this folder.
      operationId: getFileManagerFoldersFiles
      parameters:
      - description: The unique id for the File Manager folder.
        in: path
        name: folder_id
        required: true
        schema:
          type: string
          x-title: Folder ID
        x-title: Folder ID
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The file type for the File Manager file.
        in: query
        name: type
        schema:
          type: string
          x-title: File Type
        x-title: File Type
      - description: The Mailchimp account user who created the File Manager file.
        in: query
        name: created_by
        schema:
          type: string
          x-title: Created By
        x-title: Created By
      - description: "Restrict the response to files created before the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_created_at
        schema:
          type: string
          x-title: Before Created At
        x-title: Before Created At
      - description: "Restrict the response to files created after the set date. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_created_at
        schema:
          type: string
          x-title: Since Created At
        x-title: Since Created At
      - description: Returns files sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - added_date
          - name
          - size
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File_Manager'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/File_Manager'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List stored files
      tags:
      - fileManager
      x-custom-config:
        methodNameSnake: folders_files
        methodNameCamel: foldersFiles
  /lists:
    get:
      deprecated: false
      description: Get information about all lists in the account.
      operationId: getLists
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: "Restrict response to lists created before the set date. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_date_created
        schema:
          type: string
          x-title: Before Date Created
        x-title: Before Date Created
      - description: "Restrict results to lists created after the set date. Uses ISO\
          \ 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_date_created
        schema:
          type: string
          x-title: Since Date Created
        x-title: Since Date Created
      - description: "Restrict results to lists created before the last campaign send\
          \ date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_campaign_last_sent
        schema:
          type: string
          x-title: Before Campaign Last Sent
        x-title: Before Campaign Last Sent
      - description: "Restrict results to lists created after the last campaign send\
          \ date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_campaign_last_sent
        schema:
          type: string
          x-title: Since Campaign Last Sent
        x-title: Since Campaign Last Sent
      - description: Restrict results to lists that include a specific subscriber's
          email address.
        in: query
        name: email
        schema:
          type: string
          x-title: Subscriber Email
        x-title: Subscriber Email
      - description: Returns files sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - date_created
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      - description: "Restrict results to lists that contain an active, connected,\
          \ undeleted ecommerce store."
        in: query
        name: has_ecommerce_store
        schema:
          type: boolean
          x-title: Has Ecommerce Store
        x-title: Has Ecommerce Store
      - description: "Return the total_contacts field in the stats response, which\
          \ contains an approximate count of all contacts in any state."
        in: query
        name: include_total_contacts
        schema:
          type: boolean
          x-title: Include Total Contacts
        x-title: Include Total Contacts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber_Lists'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber_Lists'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get lists info
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_all_lists
        methodNameCamel: getAllLists
    post:
      deprecated: false
      description: Create a new list in your Mailchimp account.
      operationId: postLists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber_List_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber_List'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber_List'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add list
      tags:
      - lists
      x-custom-config:
        methodNameSnake: create_list
        methodNameCamel: createList
      x-codegen-request-body-name: body
  /lists/{list_id}:
    delete:
      deprecated: false
      description: "Delete a list from your Mailchimp account. If you delete a list,\
        \ you'll lose the list history—including subscriber activity, unsubscribes,\
        \ complaints, and bounces. You’ll also lose subscribers’ email addresses,\
        \ unless you exported and backed up your list."
      operationId: deleteListsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete list
      tags:
      - lists
      x-custom-config:
        methodNameSnake: delete_list
        methodNameCamel: deleteList
    get:
      deprecated: false
      description: Get information about a specific list in your Mailchimp account.
        Results include list members who have signed up but haven't confirmed their
        subscription yet and unsubscribed or cleaned.
      operationId: getListsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: "Return the total_contacts field in the stats response, which\
          \ contains an approximate count of all contacts in any state."
        in: query
        name: include_total_contacts
        schema:
          type: boolean
          x-title: Include Total Contacts
        x-title: Include Total Contacts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber_List'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber_List'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get list info
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list
        methodNameCamel: getList
    patch:
      deprecated: false
      description: Update the settings for a specific list.
      operationId: patchListsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber_List_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber_List'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber_List'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update lists
      tags:
      - lists
      x-custom-config:
        methodNameSnake: update_list
        methodNameCamel: updateList
      x-codegen-request-body-name: body
    post:
      deprecated: false
      description: Batch subscribe or unsubscribe list members.
      operationId: postListsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        in: query
        name: skip_merge_validation
        schema:
          type: boolean
          x-title: Skip Merge Validation
        x-title: Skip Merge Validation
      - description: "If skip_duplicate_check is true, we will ignore duplicates sent\
          \ in the request when using the batch sub/unsub on the lists endpoint. The\
          \ status of the first appearance in the request will be saved. This defaults\
          \ to false."
        in: query
        name: skip_duplicate_check
        schema:
          type: boolean
          x-title: Skip Duplicate Check
        x-title: Skip Duplicate Check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Members_to_Subscribe_Unsubscribe_to_from_a_List_in_batch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch_update_List_members'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch_update_List_members'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Batch subscribe or unsubscribe
      tags:
      - lists
      x-custom-config:
        methodNameSnake: batch_list_members
        methodNameCamel: batchListMembers
      x-codegen-request-body-name: body
  /lists/{list_id}/abuse-reports:
    get:
      deprecated: false
      description: Get all abuse reports for a specific list.
      operationId: getListsIdAbuseReports
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Abuse_Complaints'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Abuse_Complaints'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List abuse reports
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_abuse_reports
        methodNameCamel: getListAbuseReports
  /lists/{list_id}/abuse-reports/{report_id}:
    get:
      deprecated: false
      description: Get details about a specific abuse report.
      operationId: getListsIdAbuseReportsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The id for the abuse report.
        in: path
        name: report_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Abuse_Complaint'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Abuse_Complaint'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get abuse report
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_abuse_report_details
        methodNameCamel: getListAbuseReportDetails
  /lists/{list_id}/activity:
    get:
      deprecated: false
      description: "Get up to the previous 180 days of daily detailed aggregated activity\
        \ stats for a list, not including Automation activity."
      operationId: getListsIdActivity
      parameters:
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Activity'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Activity'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List recent activity
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_recent_activity
        methodNameCamel: getListRecentActivity
  /lists/{list_id}/clients:
    get:
      deprecated: false
      description: Get a list of the top email clients based on user-agent strings.
      operationId: getListsIdClients
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email_Clients'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Email_Clients'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List top email clients
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_clients
        methodNameCamel: getListClients
  /lists/{list_id}/growth-history:
    get:
      deprecated: false
      description: Get a month-by-month summary of a specific list's growth activity.
      operationId: getListsIdGrowthHistory
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: Returns files sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - month
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Growth_History'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Growth_History'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List growth history data
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_growth_history
        methodNameCamel: getListGrowthHistory
  /lists/{list_id}/growth-history/{month}:
    get:
      deprecated: false
      description: Get a summary of a specific list's growth activity for a specific
        month and year.
      operationId: getListsIdGrowthHistoryId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: A specific month of list growth history.
        in: path
        name: month
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Growth_History'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Growth_History'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get growth history by month
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_growth_history_by_month
        methodNameCamel: getListGrowthHistoryByMonth
  /lists/{list_id}/interest-categories:
    get:
      deprecated: false
      description: Get information about a list's interest categories.
      operationId: getListsIdInterestCategories
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: Restrict results a type of interest group
        in: query
        name: type
        schema:
          type: string
          x-title: Interest Group Type
        x-title: Interest Group Type
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest_Groupings'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest_Groupings'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List interest categories
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_interest_categories
        methodNameCamel: getListInterestCategories
    post:
      deprecated: false
      description: Create a new interest category.
      operationId: postListsIdInterestCategories
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest_Category_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest_Category'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest_Category'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add interest category
      tags:
      - lists
      x-custom-config:
        methodNameSnake: create_list_interest_category
        methodNameCamel: createListInterestCategory
      x-codegen-request-body-name: body
  /lists/{list_id}/interest-categories/{interest_category_id}:
    delete:
      deprecated: false
      description: Delete a specific interest category.
      operationId: deleteListsIdInterestCategoriesId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique ID for the interest category.
        in: path
        name: interest_category_id
        required: true
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete interest category
      tags:
      - lists
      x-custom-config:
        methodNameSnake: delete_interest_category
        methodNameCamel: deleteInterestCategory
    get:
      deprecated: false
      description: Get information about a specific interest category.
      operationId: getListsIdInterestCategoriesId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique ID for the interest category.
        in: path
        name: interest_category_id
        required: true
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest_Category'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest_Category'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get interest category info
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_interest_category
        methodNameCamel: getInterestCategory
    patch:
      deprecated: false
      description: Update a specific interest category.
      operationId: patchListsIdInterestCategoriesId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique ID for the interest category.
        in: path
        name: interest_category_id
        required: true
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest_Category_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest_Category'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest_Category'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update interest category
      tags:
      - lists
      x-custom-config:
        methodNameSnake: update_interest_category
        methodNameCamel: updateInterestCategory
      x-codegen-request-body-name: body
  /lists/{list_id}/interest-categories/{interest_category_id}/interests:
    get:
      deprecated: false
      description: Get a list of this category's interests.
      operationId: getListsIdInterestCategoriesIdInterests
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique ID for the interest category.
        in: path
        name: interest_category_id
        required: true
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interests'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interests'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List interests in category
      tags:
      - lists
      x-custom-config:
        methodNameSnake: list_interest_category_interests
        methodNameCamel: listInterestCategoryInterests
    post:
      deprecated: false
      description: Create a new interest or 'group name' for a specific category.
      operationId: postListsIdInterestCategoriesIdInterests
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique ID for the interest category.
        in: path
        name: interest_category_id
        required: true
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add interest in category
      tags:
      - lists
      x-custom-config:
        methodNameSnake: create_interest_category_interest
        methodNameCamel: createInterestCategoryInterest
      x-codegen-request-body-name: body
  /lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}:
    delete:
      deprecated: false
      description: Delete interests or group names in a specific category.
      operationId: deleteListsIdInterestCategoriesIdInterestsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique ID for the interest category.
        in: path
        name: interest_category_id
        required: true
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - description: The specific interest or 'group name'.
        in: path
        name: interest_id
        required: true
        schema:
          type: string
          x-title: Interest ID
        x-title: Interest ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete interest in category
      tags:
      - lists
      x-custom-config:
        methodNameSnake: delete_interest_category_interest
        methodNameCamel: deleteInterestCategoryInterest
    get:
      deprecated: false
      description: Get interests or 'group names' for a specific category.
      operationId: getListsIdInterestCategoriesIdInterestsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique ID for the interest category.
        in: path
        name: interest_category_id
        required: true
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - description: The specific interest or 'group name'.
        in: path
        name: interest_id
        required: true
        schema:
          type: string
          x-title: Interest ID
        x-title: Interest ID
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get interest in category
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_interest_category_interest
        methodNameCamel: getInterestCategoryInterest
    patch:
      deprecated: false
      description: Update interests or 'group names' for a specific category.
      operationId: patchListsIdInterestCategoriesIdInterestsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique ID for the interest category.
        in: path
        name: interest_category_id
        required: true
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - description: The specific interest or 'group name'.
        in: path
        name: interest_id
        required: true
        schema:
          type: string
          x-title: Interest ID
        x-title: Interest ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update interest in category
      tags:
      - lists
      x-custom-config:
        methodNameSnake: update_interest_category_interest
        methodNameCamel: updateInterestCategoryInterest
      x-codegen-request-body-name: body
  /lists/{list_id}/segments:
    get:
      deprecated: false
      description: Get information about all available segments for a specific list.
      operationId: previewASegment
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: Limit results based on segment type.
        in: query
        name: type
        schema:
          type: string
          x-title: Segment Type
        x-title: Segment Type
      - description: "Restrict results to segments created after the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_created_at
        schema:
          type: string
          x-title: Since Created At
        x-title: Since Created At
      - description: "Restrict results to segments created before the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_created_at
        schema:
          type: string
          x-title: Before Created At
        x-title: Before Created At
      - description: Include cleaned members in response
        example: false
        in: query
        name: include_cleaned
        schema:
          type: boolean
          x-title: Include Cleaned
        x-title: Include Cleaned
      - description: Include transactional members in response
        example: false
        in: query
        name: include_transactional
        schema:
          type: boolean
          x-title: Include Transactional
        x-title: Include Transactional
      - description: Include unsubscribed members in response
        example: false
        in: query
        name: include_unsubscribed
        schema:
          type: boolean
          x-title: Include Unsubscribed
        x-title: Include Unsubscribed
      - description: "Restrict results to segments update after the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_updated_at
        schema:
          type: string
          x-title: Since Updated At
        x-title: Since Updated At
      - description: "Restrict results to segments update before the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_updated_at
        schema:
          type: string
          x-title: Before Updated At
        x-title: Before Updated At
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection_of_Segments'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection_of_Segments'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List segments
      tags:
      - lists
      x-custom-config:
        methodNameSnake: list_segments
        methodNameCamel: listSegments
    post:
      deprecated: false
      description: Create a new segment in a specific list.
      operationId: postListsIdSegments
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List_8'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_7'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_7'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add segment
      tags:
      - lists
      x-custom-config:
        methodNameSnake: create_segment
        methodNameCamel: createSegment
      x-codegen-request-body-name: body
  /lists/{list_id}/segments/{segment_id}:
    delete:
      deprecated: false
      description: Delete a specific segment in a list.
      operationId: deleteListsIdSegmentsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique id for the segment.
        in: path
        name: segment_id
        required: true
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete segment
      tags:
      - lists
      x-custom-config:
        methodNameSnake: delete_segment
        methodNameCamel: deleteSegment
    get:
      deprecated: false
      description: Get information about a specific segment.
      operationId: getListsIdSegmentsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique id for the segment.
        in: path
        name: segment_id
        required: true
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      - description: Include cleaned members in response
        example: false
        in: query
        name: include_cleaned
        schema:
          type: boolean
          x-title: Include Cleaned
        x-title: Include Cleaned
      - description: Include transactional members in response
        example: false
        in: query
        name: include_transactional
        schema:
          type: boolean
          x-title: Include Transactional
        x-title: Include Transactional
      - description: Include unsubscribed members in response
        example: false
        in: query
        name: include_unsubscribed
        schema:
          type: boolean
          x-title: Include Unsubscribed
        x-title: Include Unsubscribed
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_7'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_7'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get segment info
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_segment
        methodNameCamel: getSegment
    patch:
      deprecated: false
      description: Update a specific segment in a list.
      operationId: patchListsIdSegmentsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique id for the segment.
        in: path
        name: segment_id
        required: true
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List_9'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_7'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_7'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update segment
      tags:
      - lists
      x-custom-config:
        methodNameSnake: update_segment
        methodNameCamel: updateSegment
      x-codegen-request-body-name: body
    post:
      deprecated: false
      description: Batch add/remove list members to static segment
      operationId: postListsIdSegmentsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique id for the segment.
        in: path
        name: segment_id
        required: true
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Members_to_add_remove_to_from_a_static_segment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch_add_remove_List_members_to_from_static_segment'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch_add_remove_List_members_to_from_static_segment'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Batch add or remove members
      tags:
      - lists
      x-custom-config:
        methodNameSnake: batch_segment_members
        methodNameCamel: batchSegmentMembers
      x-codegen-request-body-name: body
  /lists/{list_id}/segments/{segment_id}/members:
    get:
      deprecated: false
      description: Get information about members in a saved segment.
      operationId: getListsIdSegmentsIdMembers
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique id for the segment.
        in: path
        name: segment_id
        required: true
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      - description: Include cleaned members in response
        example: false
        in: query
        name: include_cleaned
        schema:
          type: boolean
          x-title: Include Cleaned
        x-title: Include Cleaned
      - description: Include transactional members in response
        example: false
        in: query
        name: include_transactional
        schema:
          type: boolean
          x-title: Include Transactional
        x-title: Include Transactional
      - description: Include unsubscribed members in response
        example: false
        in: query
        name: include_unsubscribed
        schema:
          type: boolean
          x-title: Include Unsubscribed
        x-title: Include Unsubscribed
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment_Members'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Segment_Members'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List members in segment
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_segment_members_list
        methodNameCamel: getSegmentMembersList
    post:
      deprecated: false
      description: Add a member to a static segment.
      operationId: postListsIdSegmentsIdMembers
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique id for the segment.
        in: path
        name: segment_id
        required: true
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postListsIdSegmentsIdMembers_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Members_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Members_1'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add member to segment
      tags:
      - lists
      x-custom-config:
        methodNameSnake: create_segment_member
        methodNameCamel: createSegmentMember
      x-codegen-request-body-name: body
  /lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}:
    delete:
      deprecated: false
      description: Remove a member from the specified static segment.
      operationId: deleteListsIdSegmentsIdMembersId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The unique id for the segment.
        in: path
        name: segment_id
        required: true
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Remove list member from segment
      tags:
      - lists
      x-custom-config:
        methodNameSnake: remove_segment_member
        methodNameCamel: removeSegmentMember
  /lists/{list_id}/tag-search:
    get:
      deprecated: false
      description: "Search for tags on a list by name. If no name is provided, will\
        \ return all tags on the list."
      operationId: searchTagsByName
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: "The search query used to filter tags.  The search query will\
          \ be compared to each tag as a prefix, so all tags that have a name starting\
          \ with this field will be returned."
        in: query
        name: name
        schema:
          type: string
          x-title: Name
        x-title: Name
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag_search_results'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Tag_search_results'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Search for tags on a list by name.
      tags:
      - lists
      x-custom-config:
        methodNameSnake: tag_search
        methodNameCamel: tagSearch
  /lists/{list_id}/members:
    get:
      deprecated: false
      description: Get information about members in a specific Mailchimp list.
      operationId: getListsIdMembers
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The email type.
        in: query
        name: email_type
        schema:
          type: string
          x-title: Email Type
        x-title: Email Type
      - description: The subscriber's status.
        in: query
        name: status
        schema:
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
          - archived
          type: string
          x-title: Subscriber Status
        x-title: Subscriber Status
      - description: "Restrict results to subscribers who opted-in after the set timeframe.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_timestamp_opt
        schema:
          type: string
          x-title: Since Timestamp Opt
        x-title: Since Timestamp Opt
      - description: "Restrict results to subscribers who opted-in before the set\
          \ timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_timestamp_opt
        schema:
          type: string
          x-title: Before Timestamp Opt
        x-title: Before Timestamp Opt
      - description: "Restrict results to subscribers whose information changed after\
          \ the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_last_changed
        schema:
          type: string
          x-title: Since Last Changed
        x-title: Since Last Changed
      - description: "Restrict results to subscribers whose information changed before\
          \ the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_last_changed
        schema:
          type: string
          x-title: Before Last Changed
        x-title: Before Last Changed
      - description: A unique identifier for the email address across all Mailchimp
          lists.
        in: query
        name: unique_email_id
        schema:
          type: string
          x-title: Unique Email ID
        x-title: Unique Email ID
      - description: "A filter to return only the list's VIP members. Passing `true`\
          \ will restrict results to VIP list members, passing `false` will return\
          \ all list members."
        in: query
        name: vip_only
        schema:
          type: boolean
          x-title: VIP Only
        x-title: VIP Only
      - description: The unique id for the interest category.
        in: query
        name: interest_category_id
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - description: Used to filter list members by interests. Must be accompanied
          by interest_category_id and interest_match. The value must be a comma separated
          list of interest ids present for any supplied interest categories.
        in: query
        name: interest_ids
        schema:
          type: string
          x-title: Interest Ids
        x-title: Interest Ids
      - description: "Used to filter list members by interests. Must be accompanied\
          \ by interest_category_id and interest_ids. \"any\" will match a member\
          \ with any of the interest supplied, \"all\" will only match members with\
          \ every interest supplied, and \"none\" will match members without any of\
          \ the interest supplied."
        in: query
        name: interest_match
        schema:
          enum:
          - any
          - all
          - none
          type: string
          x-title: Interest Match
        x-title: Interest Match
      - description: Returns files sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - timestamp_opt
          - timestamp_signup
          - last_changed
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      - description: Filter subscribers by those subscribed/unsubscribed/pending/cleaned
          since last email campaign send. Member status is required to use this filter.
        in: query
        name: since_last_campaign
        schema:
          type: boolean
          x-title: Since Last Campaign
        x-title: Since Last Campaign
      - description: Filter subscribers by those unsubscribed since a specific date.
          Using any status other than unsubscribed with this filter will result in
          an error.
        in: query
        name: unsubscribed_since
        schema:
          type: string
          x-title: Unsubscribed Since
        x-title: Unsubscribed Since
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Members_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Members_2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List members info
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_members_info
        methodNameCamel: getListMembersInfo
    post:
      deprecated: false
      description: Add a new member to the list.
      operationId: postListsIdMembers
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        in: query
        name: skip_merge_validation
        schema:
          type: boolean
          x-title: Skip Merge Validation
        x-title: Skip Merge Validation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Add_List_Members_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Members_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Members_2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add member to list
      tags:
      - lists
      x-custom-config:
        methodNameSnake: add_list_member
        methodNameCamel: addListMember
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}:
    delete:
      deprecated: false
      description: "Archive a list member. To permanently delete, use the delete-permanent\
        \ action."
      operationId: deleteListsIdMembersId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Archive list member
      tags:
      - lists
      x-custom-config:
        methodNameSnake: delete_list_member
        methodNameCamel: deleteListMember
    get:
      deprecated: false
      description: "Get information about a specific list member, including a currently\
        \ subscribed, unsubscribed, or bounced member."
      operationId: getListsIdMembersId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Members_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Members_2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get member info
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_member
        methodNameCamel: getListMember
    patch:
      deprecated: false
      description: Update information for a specific list member.
      operationId: patchListsIdMembersId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        in: query
        name: skip_merge_validation
        schema:
          type: boolean
          x-title: Skip Merge Validation
        x-title: Skip Merge Validation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Add_List_Members_3'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Members_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Members_2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update list member
      tags:
      - lists
      x-custom-config:
        methodNameSnake: update_list_member
        methodNameCamel: updateListMember
      x-codegen-request-body-name: body
    put:
      deprecated: false
      description: Add or update a list member.
      operationId: putListsIdMembersId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        in: query
        name: skip_merge_validation
        schema:
          type: boolean
          x-title: Skip Merge Validation
        x-title: Skip Merge Validation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Add_List_Members_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Members_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Members_2'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add or update list member
      tags:
      - lists
      x-custom-config:
        methodNameSnake: set_list_member
        methodNameCamel: setListMember
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}/activity:
    get:
      deprecated: false
      description: "Get the last 50 events of a member's activity on a specific list,\
        \ including opens, clicks, and unsubscribes."
      operationId: getListsIdMembersIdActivity
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: A comma seperated list of actions to return.
        explode: false
        in: query
        name: action
        schema:
          enum:
          - abuse
          - bounce
          - click
          - open
          - sent
          - unsub
          - ecomm
          items:
            type: string
          type: array
          x-title: Action
        style: form
        x-title: Action
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member_Activity_Events'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Member_Activity_Events'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: View recent activity 50
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_member_activity
        methodNameCamel: getListMemberActivity
  /lists/{list_id}/members/{subscriber_hash}/activity-feed:
    get:
      deprecated: false
      description: "Get a member's activity on a specific list, including opens, clicks,\
        \ and unsubscribes."
      operationId: getListsIdMembersIdActivityFeed
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: "A comma-separated list of activity filters that correspond to\
          \ a set of activity types, e.g \"?activity_filters=open,bounce,click\"."
        explode: false
        in: query
        name: activity_filters
        schema:
          enum:
          - bounce
          - click
          - conversation
          - ecommerce_signup
          - event
          - web_engagement
          - generic_signup
          - landing_page_signup
          - marketing_permission
          - note
          - open
          - order
          - postcard_sent
          - sent
          - signup
          - squatter_signup
          - unsub
          - website_signup
          - survey_response
          - sms_bulk_sent
          items:
            type: string
          type: array
          x-title: Activity Filters
        style: form
        x-title: Activity Filters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member_Activity_Events_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Member_Activity_Events_1'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: View recent activity
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_member_activity_feed
        methodNameCamel: getListMemberActivityFeed
  /lists/{list_id}/members/{subscriber_hash}/tags:
    get:
      deprecated: false
      description: Get the tags on a list member.
      operationId: getListMemberTags
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection_of_Tags'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection_of_Tags'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List member tags
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_member_tags
        methodNameCamel: getListMemberTags
    post:
      deprecated: false
      description: "Add or remove tags from a list member. If a tag that does not\
        \ exist is passed in and set as 'active', a new tag will be created."
      operationId: postListMemberTags
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member_Tags'
        required: true
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add or remove member tags
      tags:
      - lists
      x-custom-config:
        methodNameSnake: update_list_member_tags
        methodNameCamel: updateListMemberTags
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}/events:
    get:
      deprecated: false
      description: Get events for a contact.
      operationId: getListsIdMembersIdEvents
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection_of_Events'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection_of_Events'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List member events
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_member_events
        methodNameCamel: getListMemberEvents
    post:
      deprecated: false
      description: Add an event for a list member.
      operationId: postListMemberEvents
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Events'
        required: true
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add event
      tags:
      - lists
      x-custom-config:
        methodNameSnake: create_list_member_event
        methodNameCamel: createListMemberEvent
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}/goals:
    get:
      deprecated: false
      description: Get the last 50 Goal events for a member on a specific list.
      operationId: getListsIdMembersIdGoals
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection_of_Member_Activity_Events'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection_of_Member_Activity_Events'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List member goal events
      tags:
      - lists
      x-custom-config:
        methodNameSnake: getListMemberGoals
        methodNameCamel: getListMemberGoals
  /lists/{list_id}/members/{subscriber_hash}/notes:
    get:
      deprecated: false
      description: Get recent notes for a specific list member.
      operationId: getListsIdMembersIdNotes
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: Returns notes sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - created_at
          - updated_at
          - note_id
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection_of_Notes'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection_of_Notes'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List recent member notes
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_member_notes
        methodNameCamel: getListMemberNotes
    post:
      deprecated: false
      description: Add a new note for a specific subscriber.
      operationId: postListsIdMembersIdNotes
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member_Notes_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member_Notes'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Member_Notes'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add member note
      tags:
      - lists
      x-custom-config:
        methodNameSnake: create_list_member_note
        methodNameCamel: createListMemberNote
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}/notes/{note_id}:
    delete:
      deprecated: false
      description: Delete a specific note for a specific list member.
      operationId: deleteListsIdMembersIdNotesId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: The id for the note.
        in: path
        name: note_id
        required: true
        schema:
          type: string
          x-title: Note ID
        x-title: Note ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete note
      tags:
      - lists
      x-custom-config:
        methodNameSnake: delete_list_member_note
        methodNameCamel: deleteListMemberNote
    get:
      deprecated: false
      description: Get a specific note for a specific list member.
      operationId: getListsIdMembersIdNotesId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: The id for the note.
        in: path
        name: note_id
        required: true
        schema:
          type: string
          x-title: Note ID
        x-title: Note ID
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member_Notes'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Member_Notes'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get member note
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_member_note
        methodNameCamel: getListMemberNote
    patch:
      deprecated: false
      description: Update a specific note for a specific list member.
      operationId: patchListsIdMembersIdNotesId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: The id for the note.
        in: path
        name: note_id
        required: true
        schema:
          type: string
          x-title: Note ID
        x-title: Note ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member_Notes_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member_Notes'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Member_Notes'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update note
      tags:
      - lists
      x-custom-config:
        methodNameSnake: update_list_member_note
        methodNameCamel: updateListMemberNote
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}/actions/delete-permanent:
    post:
      deprecated: false
      description: "Delete all personally identifiable information related to a list\
        \ member, and remove them from a list. This will make it impossible to re-import\
        \ the list member."
      operationId: postListsIdMembersHashActionsDeletePermanent
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete list member
      tags:
      - lists
      x-custom-config:
        methodNameSnake: delete_list_member_permanent
        methodNameCamel: deleteListMemberPermanent
  /lists/{list_id}/merge-fields:
    get:
      deprecated: false
      description: Get a list of all merge fields for an audience.
      operationId: getListsIdMergeFields
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The merge field type.
        in: query
        name: type
        schema:
          type: string
          x-title: Merge Type
        x-title: Merge Type
      - description: Whether it's a required merge field.
        in: query
        name: required
        schema:
          type: boolean
          x-title: Required
        x-title: Required
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection_of_Merge_Fields'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection_of_Merge_Fields'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List merge fields
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_merge_fields
        methodNameCamel: getListMergeFields
    post:
      deprecated: false
      description: Add a new merge field for a specific audience.
      operationId: postListsIdMergeFields
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Merge_Field_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merge_Field'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Merge_Field'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add merge field
      tags:
      - lists
      x-custom-config:
        methodNameSnake: add_list_merge_field
        methodNameCamel: addListMergeField
      x-codegen-request-body-name: body
  /lists/{list_id}/merge-fields/{merge_id}:
    delete:
      deprecated: false
      description: Delete a specific merge field.
      operationId: deleteListsIdMergeFieldsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The id for the merge field.
        in: path
        name: merge_id
        required: true
        schema:
          type: string
          x-title: Merge ID
        x-title: Merge ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete merge field
      tags:
      - lists
      x-custom-config:
        methodNameSnake: delete_list_merge_field
        methodNameCamel: deleteListMergeField
    get:
      deprecated: false
      description: Get information about a specific merge field.
      operationId: getListsIdMergeFieldsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The id for the merge field.
        in: path
        name: merge_id
        required: true
        schema:
          type: string
          x-title: Merge ID
        x-title: Merge ID
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merge_Field'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Merge_Field'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get merge field
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_merge_field
        methodNameCamel: getListMergeField
    patch:
      deprecated: false
      description: Update a specific merge field.
      operationId: patchListsIdMergeFieldsId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The id for the merge field.
        in: path
        name: merge_id
        required: true
        schema:
          type: string
          x-title: Merge ID
        x-title: Merge ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Merge_Field_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merge_Field'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Merge_Field'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update merge field
      tags:
      - lists
      x-custom-config:
        methodNameSnake: update_list_merge_field
        methodNameCamel: updateListMergeField
      x-codegen-request-body-name: body
  /lists/{list_id}/webhooks:
    get:
      deprecated: false
      description: Get information about all webhooks for a specific list.
      operationId: getListsIdWebhooks
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Webhooks'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Webhooks'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List webhooks
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_webhooks
        methodNameCamel: getListWebhooks
    post:
      deprecated: false
      description: Create a new webhook for a specific list.
      operationId: postListsIdWebhooks
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Add_Webhook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Webhooks'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Webhooks'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add webhook
      tags:
      - lists
      x-custom-config:
        methodNameSnake: create_list_webhook
        methodNameCamel: createListWebhook
      x-codegen-request-body-name: body
  /lists/{list_id}/webhooks/{webhook_id}:
    delete:
      deprecated: false
      description: Delete a specific webhook in a list.
      operationId: deleteListsIdWebhooksId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The webhook's id.
        in: path
        name: webhook_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete webhook
      tags:
      - lists
      x-custom-config:
        methodNameSnake: delete_list_webhook
        methodNameCamel: deleteListWebhook
    get:
      deprecated: false
      description: Get information about a specific webhook.
      operationId: getListsIdWebhooksId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The webhook's id.
        in: path
        name: webhook_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Webhooks'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Webhooks'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get webhook info
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_webhook
        methodNameCamel: getListWebhook
    patch:
      deprecated: false
      description: Update the settings for an existing webhook.
      operationId: patchListsIdWebhooksId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The webhook's id.
        in: path
        name: webhook_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Add_Webhook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Webhooks'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Webhooks'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update webhook
      tags:
      - lists
      x-custom-config:
        methodNameSnake: update_list_webhook
        methodNameCamel: updateListWebhook
      x-codegen-request-body-name: body
  /lists/{list_id}/signup-forms:
    get:
      deprecated: false
      description: Get signup forms for a specific list.
      operationId: getListsIdSignupForms
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Signup_Forms'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Signup_Forms'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List signup forms
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_signup_forms
        methodNameCamel: getListSignupForms
    post:
      deprecated: false
      description: Customize a list's default signup form.
      operationId: postListsIdSignupForms
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup_Form_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signup_Form'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Signup_Form'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Customize signup form
      tags:
      - lists
      x-custom-config:
        methodNameSnake: update_list_signup_form
        methodNameCamel: updateListSignupForm
      x-codegen-request-body-name: body
  /lists/{list_id}/locations:
    get:
      deprecated: false
      description: Get the locations (countries) that the list's subscribers have
        been tagged to based on geocoding their IP address.
      operationId: getListsIdLocations
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_Locations'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_Locations'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List locations
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_list_locations
        methodNameCamel: getListLocations
  /lists/{list_id}/surveys:
    get:
      deprecated: false
      description: Get information about all available surveys for a specific list.
      operationId: getListsIdSurveys
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          content: {}
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get information about all surveys for a list
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_all_surveys_for_list
        methodNameCamel: getAllSurveysForList
  /lists/{list_id}/surveys/{survey_id}:
    get:
      deprecated: false
      description: Get details about a specific survey.
      operationId: getListsIdSurveysId
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The ID of the survey.
        in: path
        name: survey_id
        required: true
        schema:
          type: string
          x-title: Survey ID
        x-title: Survey ID
      responses:
        "200":
          content: {}
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get survey
      tags:
      - lists
      x-custom-config:
        methodNameSnake: get_survey
        methodNameCamel: getSurvey
  /lists/{list_id}/surveys/{survey_id}/actions/publish:
    post:
      deprecated: false
      description: "Publish a survey that is in draft, unpublished, or has been previously\
        \ published and edited."
      operationId: postListsIdSurveysIdActionsPublish
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The ID of the survey.
        in: path
        name: survey_id
        required: true
        schema:
          type: string
          x-title: Survey ID
        x-title: Survey ID
      responses:
        "200":
          content: {}
          description: Survey Published
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Publish a Survey
      tags:
      - Surveys
      x-custom-config:
        methodNameSnake: publish_survey
        methodNameCamel: publishSurvey
  /lists/{list_id}/surveys/{survey_id}/actions/unpublish:
    post:
      deprecated: false
      description: Unpublish a survey that has been published.
      operationId: postListsIdSurveysIdActionsUnpublish
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The ID of the survey.
        in: path
        name: survey_id
        required: true
        schema:
          type: string
          x-title: Survey ID
        x-title: Survey ID
      responses:
        "200":
          content: {}
          description: Survey Instance
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Unpublish a Survey
      tags:
      - Surveys
      x-custom-config:
        methodNameSnake: unpublish_survey
        methodNameCamel: unpublishSurvey
  /lists/{list_id}/surveys/{survey_id}/actions/create-email:
    post:
      deprecated: false
      description: Utilize the List ID and Survey ID to generate a Campaign that links
        to your survey.
      operationId: postListsIdSurveysIdActionsCreateEmail
      parameters:
      - description: The unique ID for the list.
        in: path
        name: list_id
        required: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - description: The ID of the survey.
        in: path
        name: survey_id
        required: true
        schema:
          type: string
          x-title: Survey ID
        x-title: Survey ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_3'
          description: Campaign Instance
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Create a Survey Campaign
      tags:
      - Surveys
      x-custom-config:
        methodNameSnake: create_email
        methodNameCamel: createEmail
  /landing-pages:
    get:
      description: Get all landing pages.
      operationId: getAllLandingPages
      parameters:
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      - description: Returns files sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - created_at
          - updated_at
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllLandingPages_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getAllLandingPages_200_response'
          description: Landing Pages Collection
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List landing pages
      tags:
      - landingPages
      x-custom-config:
        methodNameSnake: get_all
        methodNameCamel: getAll
    post:
      deprecated: false
      description: Create a new Mailchimp landing page.
      operationId: postAllLandingPages
      parameters:
      - description: Will create the Landing Page using the account's Default List
          instead of requiring a list_id.
        in: query
        name: use_default_list
        schema:
          type: boolean
          x-title: Use Default List
        x-title: Use Default List
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Landing_Page_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing_Page'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Landing_Page'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add landing page
      tags:
      - landingPages
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /landing-pages/{page_id}:
    delete:
      deprecated: false
      description: Delete a landing page.
      operationId: deleteLandingPageId
      parameters:
      - description: The unique id for the page.
        in: path
        name: page_id
        required: true
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete landing page
      tags:
      - landingPages
      x-custom-config:
        methodNameSnake: delete_page
        methodNameCamel: deletePage
    get:
      deprecated: false
      description: Get information about a specific page.
      operationId: getLandingPageId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the page.
        in: path
        name: page_id
        required: true
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing_Page'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Landing_Page'
          description: Landing Pages Instance
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get landing page info
      tags:
      - landingPages
      x-custom-config:
        methodNameSnake: get_page
        methodNameCamel: getPage
    patch:
      description: Update a landing page.
      operationId: patchLandingPageId
      parameters:
      - description: The unique id for the page.
        in: path
        name: page_id
        required: true
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Landing_Page_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing_Page'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Landing_Page'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update landing page
      tags:
      - landingPages
      x-custom-config:
        methodNameSnake: update_page
        methodNameCamel: updatePage
      x-codegen-request-body-name: body
  /landing-pages/{page_id}/actions/publish:
    post:
      deprecated: false
      description: "Publish a landing page that is in draft, unpublished, or has been\
        \ previously published and edited."
      operationId: postLandingPageIdActionsPublish
      parameters:
      - description: The unique id for the page.
        in: path
        name: page_id
        required: true
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Publish landing page
      tags:
      - landingPages
      x-custom-config:
        methodNameSnake: publish_page
        methodNameCamel: publishPage
  /landing-pages/{page_id}/actions/unpublish:
    post:
      deprecated: false
      description: Unpublish a landing page that is in draft or has been published.
      operationId: postLandingPageIdActionsUnpublish
      parameters:
      - description: The unique id for the page.
        in: path
        name: page_id
        required: true
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Unpublish landing page
      tags:
      - landingPages
      x-custom-config:
        methodNameSnake: unpublish_page
        methodNameCamel: unpublishPage
  /landing-pages/{page_id}/content:
    get:
      deprecated: false
      description: Get the the HTML for your landing page.
      operationId: getLandingPageIdContent
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the page.
        in: path
        name: page_id
        required: true
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing_Page_Content'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Landing_Page_Content'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get landing page content
      tags:
      - landingPages
      x-custom-config:
        methodNameSnake: get_page_content
        methodNameCamel: getPageContent
  /reports:
    get:
      deprecated: false
      description: Get campaign reports.
      operationId: getReports
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The campaign type.
        in: query
        name: type
        schema:
          enum:
          - regular
          - plaintext
          - absplit
          - rss
          - variate
          type: string
          x-title: Campaign Type
        x-title: Campaign Type
      - description: "Restrict the response to campaigns sent before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_send_time
        schema:
          format: date-time
          type: string
          x-title: Before Send Time
        x-title: Before Send Time
      - description: "Restrict the response to campaigns sent after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_send_time
        schema:
          format: date-time
          type: string
          x-title: Since Send Time
        x-title: Since Send Time
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Reports_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Reports_1'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List campaign reports
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_all_campaign_reports
        methodNameCamel: getAllCampaignReports
  /reports/{campaign_id}:
    get:
      deprecated: false
      description: Get report details for a specific sent campaign.
      operationId: getReportsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Report'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get campaign report
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_campaign_report
        methodNameCamel: getCampaignReport
  /reports/{campaign_id}/abuse-reports:
    get:
      deprecated: false
      description: Get a list of abuse complaints for a specific campaign.
      operationId: getReportsIdAbuseReportsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Abuse_Complaints_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Abuse_Complaints_1'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List abuse reports
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_campaign_abuse_reports
        methodNameCamel: getCampaignAbuseReports
  /reports/{campaign_id}/abuse-reports/{report_id}:
    get:
      deprecated: false
      description: Get information about a specific abuse report for a campaign.
      operationId: getReportsIdAbuseReportsIdId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The id for the abuse report.
        in: path
        name: report_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Abuse_Complaint_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Abuse_Complaint_1'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get abuse report
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_campaign_abuse_report
        methodNameCamel: getCampaignAbuseReport
  /reports/{campaign_id}/advice:
    get:
      deprecated: false
      description: "Get feedback based on a campaign's statistics. Advice feedback\
        \ is based on campaign stats like opens, clicks, unsubscribes, bounces, and\
        \ more."
      operationId: getReportsIdAdvice
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Advice_Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Advice_Report'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List campaign feedback
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_campaign_advice
        methodNameCamel: getCampaignAdvice
  /reports/{campaign_id}/click-details:
    get:
      deprecated: false
      description: Get information about clicks on specific links in your Mailchimp
        campaigns.
      operationId: getReportsIdClickDetails
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: Returns click reports sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - total_clicks
          - unique_clicks
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Click_Detail_Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Click_Detail_Report'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List campaign details
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_campaign_click_details
        methodNameCamel: getCampaignClickDetails
  /reports/{campaign_id}/click-details/{link_id}:
    get:
      deprecated: false
      description: Get click details for a specific link in a campaign.
      operationId: getReportsIdClickDetailsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The id for the link.
        in: path
        name: link_id
        required: true
        schema:
          type: string
          x-title: Link ID
        x-title: Link ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Click_Detail_Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Click_Detail_Report'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get campaign link details
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_campaign_click_details_for_link
        methodNameCamel: getCampaignClickDetailsForLink
  /reports/{campaign_id}/click-details/{link_id}/members:
    get:
      deprecated: false
      description: Get information about list members who clicked on a specific link
        in a campaign.
      operationId: getReportsIdClickDetailsIdMembers
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The id for the link.
        in: path
        name: link_id
        required: true
        schema:
          type: string
          x-title: Link ID
        x-title: Link ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Click_Detail_Members'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Click_Detail_Members'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List clicked link subscribers
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_subscribers_info
        methodNameCamel: getSubscribersInfo
  /reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}:
    get:
      deprecated: false
      description: Get information about a specific subscriber who clicked a link
        in a specific campaign.
      operationId: getReportsIdClickDetailsIdMembersId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The id for the link.
        in: path
        name: link_id
        required: true
        schema:
          type: string
          x-title: Link ID
        x-title: Link ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Click_Detail_Member'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Click_Detail_Member'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get clicked link subscriber
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_subscriber_info
        methodNameCamel: getSubscriberInfo
  /reports/{campaign_id}/open-details:
    get:
      deprecated: false
      description: Get detailed information about any campaign emails that were opened
        by a list member.
      operationId: getReportsIdOpenDetails
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: "Restrict results to campaign open events that occur after a\
          \ specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        example: 2016-04-12 12:00:00
        in: query
        name: since
        schema:
          type: string
          x-title: Campaign opens since
        x-title: Campaign opens since
      - description: Returns open reports sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - opens_count
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Open_Detail_Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Open_Detail_Report'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List campaign open details
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_campaign_open_details
        methodNameCamel: getCampaignOpenDetails
  /reports/{campaign_id}/open-details/{subscriber_hash}:
    get:
      deprecated: false
      description: Get information about a specific subscriber who opened a campaign.
      operationId: getReportsIdOpenDetailsIdMembersId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Open_Activity'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Open_Activity'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get opened campaign subscriber
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_subscriber_info_for_opened_campaign
        methodNameCamel: getSubscriberInfoForOpenedCampaign
  /reports/{campaign_id}/domain-performance:
    get:
      deprecated: false
      description: Get statistics for the top-performing email domains in a campaign.
      operationId: getReportsIdDomainPerformance
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain_Performance'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Domain_Performance'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List domain performance stats
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_domain_performance_for_campaign
        methodNameCamel: getDomainPerformanceForCampaign
  /reports/{campaign_id}/eepurl:
    get:
      deprecated: false
      description: "Get a summary of social activity for the campaign, tracked by\
        \ EepURL."
      operationId: getReportsIdEepurl
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eepurl_Activity'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Eepurl_Activity'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List EepURL activity
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_eepurl_activity_for_campaign
        methodNameCamel: getEepurlActivityForCampaign
  /reports/{campaign_id}/email-activity:
    get:
      deprecated: false
      description: Get a list of member's subscriber activity in a specific campaign.
      operationId: getReportsIdEmailActivity
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: "Restrict results to email activity events that occur after a\
          \ specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since
        schema:
          type: string
          x-title: Email Activity since
        x-title: Email Activity since
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email_Activity'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Email_Activity'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List email activity
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_email_activity_for_campaign
        methodNameCamel: getEmailActivityForCampaign
  /reports/{campaign_id}/email-activity/{subscriber_hash}:
    get:
      deprecated: false
      description: "Get a specific list member's activity in a campaign including\
        \ opens, clicks, and bounces."
      operationId: getReportsIdEmailActivityId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - description: "Restrict results to email activity events that occur after a\
          \ specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since
        schema:
          type: string
          x-title: Email Activity since
        x-title: Email Activity since
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email_Activity'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Email_Activity'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get subscriber email activity
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_email_activity_for_subscriber
        methodNameCamel: getEmailActivityForSubscriber
  /reports/{campaign_id}/locations:
    get:
      deprecated: false
      description: Get top open locations for a specific campaign.
      operationId: getReportsIdLocations
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Open_Locations'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Open_Locations'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List top open activities
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_locations_for_campaign
        methodNameCamel: getLocationsForCampaign
  /reports/{campaign_id}/sent-to:
    get:
      deprecated: false
      description: Get information about campaign recipients.
      operationId: getReportsIdSentTo
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sent_To'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Sent_To'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List campaign recipients
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_campaign_recipients
        methodNameCamel: getCampaignRecipients
  /reports/{campaign_id}/sent-to/{subscriber_hash}:
    get:
      deprecated: false
      description: Get information about a specific campaign recipient.
      operationId: getReportsIdSentToId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sent_To'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Sent_To'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get campaign recipient info
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_campaign_recipient
        methodNameCamel: getCampaignRecipient
  /reports/{campaign_id}/sub-reports:
    get:
      deprecated: false
      description: Get a list of reports with child campaigns for a specific parent
        campaign.
      operationId: getReportsIdSubReportsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_Sub_Reports'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_Sub_Reports'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List child campaign reports
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_sub_reports_for_campaign
        methodNameCamel: getSubReportsForCampaign
  /reports/{campaign_id}/unsubscribed:
    get:
      deprecated: false
      description: Get information about members who have unsubscribed from a specific
        campaign.
      operationId: getReportsIdUnsubscribed
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unsubscribes'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Unsubscribes'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List unsubscribed members
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_unsubscribed_list_for_campaign
        methodNameCamel: getUnsubscribedListForCampaign
  /reports/{campaign_id}/unsubscribed/{subscriber_hash}:
    get:
      deprecated: false
      description: Get information about a specific list member who unsubscribed from
        a campaign.
      operationId: getReportsIdUnsubscribedId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: The MD5 hash of the lowercase version of the list member's email
          address.
        in: path
        name: subscriber_hash
        required: true
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unsubscribes'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Unsubscribes'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get unsubscribed member
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_unsubscribed_list_member
        methodNameCamel: getUnsubscribedListMember
  /reports/{campaign_id}/ecommerce-product-activity:
    get:
      description: Get breakdown of product activity for a campaign
      operationId: getReportsIdEcommerceProductActivity
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The unique id for the campaign.
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: Returns files sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - title
          - total_revenue
          - total_purchased
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReportsIdEcommerceProductActivity_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getReportsIdEcommerceProductActivity_200_response'
          description: Ecommerce Product Activity Instance
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List campaign product activity
      tags:
      - reports
      x-custom-config:
        methodNameSnake: get_ecommerce_product_activity_for_campaign
        methodNameCamel: getEcommerceProductActivityForCampaign
  /templates:
    get:
      deprecated: false
      description: Get a list of an account's available templates.
      operationId: getTemplates
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The Mailchimp account user who created the template.
        in: query
        name: created_by
        schema:
          type: string
          x-title: Created By
        x-title: Created By
      - description: "Restrict the response to templates created after the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: since_date_created
        schema:
          type: string
          x-title: Since Date Created
        x-title: Since Date Created
      - description: "Restrict the response to templates created before the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        in: query
        name: before_date_created
        schema:
          type: string
          x-title: Before Date Created
        x-title: Before Date Created
      - description: Limit results based on template type.
        in: query
        name: type
        schema:
          type: string
          x-title: Template Type
        x-title: Template Type
      - description: Limit results based on category.
        in: query
        name: category
        schema:
          type: string
          x-title: Category
        x-title: Category
      - description: The unique folder id.
        in: query
        name: folder_id
        schema:
          type: string
          x-title: Folder ID
        x-title: Folder ID
      - description: Returns user templates sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - date_created
          - date_edited
          - name
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: "Limit results based on how the template's content is put together.\
          \ Only templates of type `user` can be filtered by `content_type`. If you\
          \ want to retrieve saved templates created with the legacy email editor,\
          \ then filter `content_type` to `template`. If you'd rather pull your saved\
          \ templates for the new editor, filter to `multichannel`. For code your\
          \ own templates, filter to `html`."
        in: query
        name: content_type
        schema:
          enum:
          - html
          - template
          - multichannel
          type: string
          x-title: Content Type
        x-title: Content Type
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Templates'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Templates'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List templates
      tags:
      - templates
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      deprecated: false
      description: Create a new template for the account. Only Classic templates are
        supported.
      operationId: postTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template_Instance_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Instance'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template_Instance'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add template
      tags:
      - templates
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /templates/{template_id}:
    delete:
      deprecated: false
      description: Delete a specific template.
      operationId: deleteTemplatesId
      parameters:
      - description: The unique id for the template.
        in: path
        name: template_id
        required: true
        schema:
          type: string
          x-title: Template ID
        x-title: Template ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete template
      tags:
      - templates
      x-custom-config:
        methodNameSnake: delete_template
        methodNameCamel: deleteTemplate
    get:
      deprecated: false
      description: Get information about a specific template.
      operationId: getTemplatesId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the template.
        in: path
        name: template_id
        required: true
        schema:
          type: string
          x-title: Template ID
        x-title: Template ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Instance'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template_Instance'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get template info
      tags:
      - templates
      x-custom-config:
        methodNameSnake: get_template
        methodNameCamel: getTemplate
    patch:
      deprecated: false
      description: "Update the name, HTML, or `folder_id` of an existing template."
      operationId: patchTemplatesId
      parameters:
      - description: The unique id for the template.
        in: path
        name: template_id
        required: true
        schema:
          type: string
          x-title: Template ID
        x-title: Template ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template_Instance_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Instance'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template_Instance'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update template
      tags:
      - templates
      x-custom-config:
        methodNameSnake: update_template
        methodNameCamel: updateTemplate
      x-codegen-request-body-name: body
  /templates/{template_id}/default-content:
    get:
      deprecated: false
      description: "Get the sections that you can edit in a template, including each\
        \ section's default content."
      operationId: getTemplatesIdDefaultContent
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The unique id for the template.
        in: path
        name: template_id
        required: true
        schema:
          type: string
          x-title: Template ID
        x-title: Template ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template_Default_Content'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template_Default_Content'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: View default content
      tags:
      - templates
      x-custom-config:
        methodNameSnake: get_default_content_for_template
        methodNameCamel: getDefaultContentForTemplate
  /ecommerce/orders:
    get:
      deprecated: false
      description: Get information about an account's orders.
      operationId: getEcommerceOrders
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: Restrict results to orders with a specific `campaign_id` value.
        in: query
        name: campaign_id
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: Restrict results to orders with a specific `outreach_id` value.
        in: query
        name: outreach_id
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - description: Restrict results to orders made by a specific customer.
        in: query
        name: customer_id
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      - description: "Restrict results to orders that have an outreach attached. For\
          \ example, an email campaign or Facebook ad."
        in: query
        name: has_outreach
        schema:
          type: boolean
          x-title: Has Outreach
        x-title: Has Outreach
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Orders'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List account orders
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: orders
        methodNameCamel: orders
  /ecommerce/stores:
    get:
      deprecated: false
      description: Get information about all stores in the account.
      operationId: getEcommerceStores
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Stores'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Stores'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List stores
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: stores
        methodNameCamel: stores
    post:
      deprecated: false
      description: Add a new store to your Mailchimp account.
      operationId: postEcommerceStores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Store_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Store'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Store'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add store
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_store
        methodNameCamel: addStore
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}:
    delete:
      deprecated: false
      description: "Delete a store. Deleting a store will also delete any associated\
        \ subresources, including Customers, Orders, Products, and Carts."
      operationId: deleteEcommerceStoresId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "204":
          content:
            application/json:
              schema:
                description: Empty Response
                type: object
            application/problem+json:
              schema:
                description: Empty Response
                type: object
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete store
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: delete_store
        methodNameCamel: deleteStore
    get:
      deprecated: false
      description: Get information about a specific store.
      operationId: getEcommerceStoresId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Store'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Store'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get store info
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_store
        methodNameCamel: getStore
    patch:
      deprecated: false
      description: Update a store.
      operationId: patchEcommerceStoresId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Store_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Store'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Store'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update store
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: update_store
        methodNameCamel: updateStore
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/carts:
    get:
      deprecated: false
      description: Get information about a store's carts.
      operationId: getEcommerceStoresIdCarts
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Carts'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List carts
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_store_carts
        methodNameCamel: getStoreCarts
    post:
      deprecated: false
      description: Add a new cart to a store.
      operationId: postEcommerceStoresIdCarts
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Cart_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add cart
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_store_cart
        methodNameCamel: addStoreCart
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/carts/{cart_id}:
    delete:
      deprecated: false
      description: Delete a cart.
      operationId: deleteEcommerceStoresIdCartsId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the cart.
        in: path
        name: cart_id
        required: true
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete cart
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: delete_store_cart
        methodNameCamel: deleteStoreCart
    get:
      deprecated: false
      description: Get information about a specific cart.
      operationId: getEcommerceStoresIdCartsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the cart.
        in: path
        name: cart_id
        required: true
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get cart info
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_store_cart
        methodNameCamel: getStoreCart
    patch:
      deprecated: false
      description: Update a specific cart.
      operationId: patchEcommerceStoresIdCartsId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the cart.
        in: path
        name: cart_id
        required: true
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Cart_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update cart
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: update_store_cart
        methodNameCamel: updateStoreCart
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/carts/{cart_id}/lines:
    get:
      deprecated: false
      description: Get information about a cart's line items.
      operationId: getEcommerceStoresIdCartsIdLines
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the cart.
        in: path
        name: cart_id
        required: true
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart_Lines'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Cart_Lines'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List cart line items
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_all_cart_line_items
        methodNameCamel: getAllCartLineItems
    post:
      deprecated: false
      description: Add a new line item to an existing cart.
      operationId: postEcommerceStoresIdCartsIdLines
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the cart.
        in: path
        name: cart_id
        required: true
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Cart_Line_Item_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart_Line_Item'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart_Line_Item'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add cart line item
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_cart_line_item
        methodNameCamel: addCartLineItem
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}:
    delete:
      deprecated: false
      description: Delete a specific cart line item.
      operationId: deleteEcommerceStoresIdCartsLinesId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the cart.
        in: path
        name: cart_id
        required: true
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      - description: The id for the line item of a cart.
        in: path
        name: line_id
        required: true
        schema:
          type: string
          x-title: Cart Line ID
        x-title: Cart Line ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete cart line item
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: delete_cart_line_item
        methodNameCamel: deleteCartLineItem
    get:
      deprecated: false
      description: Get information about a specific cart line item.
      operationId: getEcommerceStoresIdCartsIdLinesId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the cart.
        in: path
        name: cart_id
        required: true
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      - description: The id for the line item of a cart.
        in: path
        name: line_id
        required: true
        schema:
          type: string
          x-title: Cart Line ID
        x-title: Cart Line ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart_Line_Item'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart_Line_Item'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get cart line item
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_cart_line_item
        methodNameCamel: getCartLineItem
    patch:
      deprecated: false
      description: Update a specific cart line item.
      operationId: patchEcommerceStoresIdCartsIdLinesId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the cart.
        in: path
        name: cart_id
        required: true
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      - description: The id for the line item of a cart.
        in: path
        name: line_id
        required: true
        schema:
          type: string
          x-title: Cart Line ID
        x-title: Cart Line ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Cart_Line_Item_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart_Line_Item'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Cart_Line_Item'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update cart line item
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: update_cart_line_item
        methodNameCamel: updateCartLineItem
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/customers:
    get:
      deprecated: false
      description: Get information about a store's customers.
      operationId: getEcommerceStoresIdCustomers
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: Restrict the response to customers with the email address.
        in: query
        name: email_address
        schema:
          type: string
          x-title: Customer Email Address
        x-title: Customer Email Address
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Customers'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List customers
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_all_store_customers
        methodNameCamel: getAllStoreCustomers
    post:
      deprecated: false
      description: Add a new customer to a store.
      operationId: postEcommerceStoresIdCustomers
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Customer_3'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Customer'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Customer'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add customer
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_store_customer
        methodNameCamel: addStoreCustomer
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/customers/{customer_id}:
    delete:
      deprecated: false
      description: Delete a customer from a store.
      operationId: deleteEcommerceStoresIdCustomersId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the customer of a store.
        in: path
        name: customer_id
        required: true
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete customer
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: delete_store_customer
        methodNameCamel: deleteStoreCustomer
    get:
      deprecated: false
      description: Get information about a specific customer.
      operationId: getEcommerceStoresIdCustomersId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the customer of a store.
        in: path
        name: customer_id
        required: true
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Customer'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Customer'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get customer info
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_store_customer
        methodNameCamel: getStoreCustomer
    patch:
      deprecated: false
      description: Update a customer.
      operationId: patchEcommerceStoresIdCustomersId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the customer of a store.
        in: path
        name: customer_id
        required: true
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Customer_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Customer'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Customer'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update customer
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: update_store_customer
        methodNameCamel: updateStoreCustomer
      x-codegen-request-body-name: body
    put:
      deprecated: false
      description: Add or update a customer.
      operationId: putEcommerceStoresIdCustomersId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the customer of a store.
        in: path
        name: customer_id
        required: true
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Customer_4'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Customer'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Customer'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add or update customer
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: set_store_customer
        methodNameCamel: setStoreCustomer
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/promo-rules:
    get:
      deprecated: false
      description: Get information about a store's promo rules.
      operationId: getEcommerceStoresIdPromorules
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promo_Rules'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Promo_Rules'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List promo rules
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: list_promo_rules
        methodNameCamel: listPromoRules
    post:
      deprecated: false
      description: Add a new promo rule to a store.
      operationId: postEcommerceStoresIdPromorules
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Promo_Rule_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Rule'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Rule'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add promo rule
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_promo_rules
        methodNameCamel: addPromoRules
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}:
    delete:
      deprecated: false
      description: Delete a promo rule from a store.
      operationId: deleteEcommerceStoresIdPromorulesId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the promo rule of a store.
        in: path
        name: promo_rule_id
        required: true
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete promo rule
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: delete_promo_rule
        methodNameCamel: deletePromoRule
    get:
      deprecated: false
      description: Get information about a specific promo rule.
      operationId: getEcommerceStoresIdPromorulesId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the promo rule of a store.
        in: path
        name: promo_rule_id
        required: true
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Rule'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Rule'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get promo rule
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_promo_rule
        methodNameCamel: getPromoRule
    patch:
      deprecated: false
      description: Update a promo rule.
      operationId: patchEcommerceStoresIdPromorulesId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the promo rule of a store.
        in: path
        name: promo_rule_id
        required: true
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Promo_Rule_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Rule'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Rule'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update promo rule
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: update_promo_rule
        methodNameCamel: updatePromoRule
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes:
    get:
      deprecated: false
      description: Get information about a store's promo codes.
      operationId: getEcommerceStoresIdPromocodes
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The id for the promo rule of a store.
        in: path
        name: promo_rule_id
        required: true
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promo_Codes'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Promo_Codes'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List promo codes
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_promo_codes
        methodNameCamel: getPromoCodes
    post:
      deprecated: false
      description: Add a new promo code to a store.
      operationId: postEcommerceStoresIdPromocodes
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the promo rule of a store.
        in: path
        name: promo_rule_id
        required: true
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Promo_Code_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Code'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Code'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add promo code
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_promo_code
        methodNameCamel: addPromoCode
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}:
    delete:
      deprecated: false
      description: Delete a promo code from a store.
      operationId: deleteEcommerceStoresIdPromocodesId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the promo rule of a store.
        in: path
        name: promo_rule_id
        required: true
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      - description: The id for the promo code of a store.
        in: path
        name: promo_code_id
        required: true
        schema:
          type: string
          x-title: Promo Code ID
        x-title: Promo Code ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete promo code
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: delete_promo_code
        methodNameCamel: deletePromoCode
    get:
      deprecated: false
      description: Get information about a specific promo code.
      operationId: getEcommerceStoresIdPromocodesId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the promo rule of a store.
        in: path
        name: promo_rule_id
        required: true
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      - description: The id for the promo code of a store.
        in: path
        name: promo_code_id
        required: true
        schema:
          type: string
          x-title: Promo Code ID
        x-title: Promo Code ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Code'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Code'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get promo code
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_promo_code
        methodNameCamel: getPromoCode
    patch:
      deprecated: false
      description: Update a promo code.
      operationId: patchEcommerceStoresIdPromocodesId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the promo rule of a store.
        in: path
        name: promo_rule_id
        required: true
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      - description: The id for the promo code of a store.
        in: path
        name: promo_code_id
        required: true
        schema:
          type: string
          x-title: Promo Code ID
        x-title: Promo Code ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Promo_Code_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Code'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Promo_Code'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update promo code
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: update_promo_code
        methodNameCamel: updatePromoCode
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/orders:
    get:
      deprecated: false
      description: Get information about a store's orders.
      operationId: getEcommerceStoresIdOrders
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: Restrict results to orders made by a specific customer.
        in: query
        name: customer_id
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      - description: "Restrict results to orders that have an outreach attached. For\
          \ example, an email campaign or Facebook ad."
        in: query
        name: has_outreach
        schema:
          type: boolean
          x-title: Has Outreach
        x-title: Has Outreach
      - description: Restrict results to orders with a specific `campaign_id` value.
        in: query
        name: campaign_id
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - description: Restrict results to orders with a specific `outreach_id` value.
        in: query
        name: outreach_id
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Orders_1'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List orders
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_store_orders
        methodNameCamel: getStoreOrders
    post:
      deprecated: false
      description: Add a new order to a store.
      operationId: postEcommerceStoresIdOrders
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Order_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add order
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_store_order
        methodNameCamel: addStoreOrder
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/orders/{order_id}:
    delete:
      deprecated: false
      description: Delete an order.
      operationId: deleteEcommerceStoresIdOrdersId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the order in a store.
        in: path
        name: order_id
        required: true
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete order
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: delete_order
        methodNameCamel: deleteOrder
    get:
      deprecated: false
      description: Get information about a specific order.
      operationId: getEcommerceStoresIdOrdersId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the order in a store.
        in: path
        name: order_id
        required: true
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get order info
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_order
        methodNameCamel: getOrder
    patch:
      deprecated: false
      description: Update a specific order.
      operationId: patchEcommerceStoresIdOrdersId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the order in a store.
        in: path
        name: order_id
        required: true
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Order_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update order
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: update_order
        methodNameCamel: updateOrder
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/orders/{order_id}/lines:
    get:
      deprecated: false
      description: Get information about an order's line items.
      operationId: getEcommerceStoresIdOrdersIdLines
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the order in a store.
        in: path
        name: order_id
        required: true
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order_Lines'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Order_Lines'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List order line items
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_all_order_line_items
        methodNameCamel: getAllOrderLineItems
    post:
      deprecated: false
      description: Add a new line item to an existing order.
      operationId: postEcommerceStoresIdOrdersIdLines
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the order in a store.
        in: path
        name: order_id
        required: true
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Order_Line_Item_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order_Line_Item'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order_Line_Item'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add order line item
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_order_line_item
        methodNameCamel: addOrderLineItem
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}:
    delete:
      deprecated: false
      description: Delete a specific order line item.
      operationId: deleteEcommerceStoresIdOrdersIdLinesId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the order in a store.
        in: path
        name: order_id
        required: true
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      - description: The id for the line item of an order.
        in: path
        name: line_id
        required: true
        schema:
          type: string
          x-title: Order Line ID
        x-title: Order Line ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete order line item
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: delete_order_line_item
        methodNameCamel: deleteOrderLineItem
    get:
      deprecated: false
      description: Get information about a specific order line item.
      operationId: getEcommerceStoresIdOrdersIdLinesId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the order in a store.
        in: path
        name: order_id
        required: true
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      - description: The id for the line item of an order.
        in: path
        name: line_id
        required: true
        schema:
          type: string
          x-title: Order Line ID
        x-title: Order Line ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order_Line_Item'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order_Line_Item'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get order line item
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_order_line_item
        methodNameCamel: getOrderLineItem
    patch:
      deprecated: false
      description: Update a specific order line item.
      operationId: patchEcommerceStoresIdOrdersIdLinesId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the order in a store.
        in: path
        name: order_id
        required: true
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      - description: The id for the line item of an order.
        in: path
        name: line_id
        required: true
        schema:
          type: string
          x-title: Order Line ID
        x-title: Order Line ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Order_Line_Item_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order_Line_Item'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Order_Line_Item'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update order line item
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: update_order_line_item
        methodNameCamel: updateOrderLineItem
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products:
    get:
      deprecated: false
      description: Get information about a store's products.
      operationId: getEcommerceStoresIdProducts
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Products'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List product
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_all_store_products
        methodNameCamel: getAllStoreProducts
    post:
      deprecated: false
      description: Add a new product to a store.
      operationId: postEcommerceStoresIdProducts
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Product_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add product
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_store_product
        methodNameCamel: addStoreProduct
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products/{product_id}:
    delete:
      deprecated: false
      description: Delete a product.
      operationId: deleteEcommerceStoresIdProductsId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete product
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: delete_store_product
        methodNameCamel: deleteStoreProduct
    get:
      deprecated: false
      description: Get information about a specific product.
      operationId: getEcommerceStoresIdProductsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get product info
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_store_product
        methodNameCamel: getStoreProduct
    patch:
      deprecated: false
      description: Update a specific product.
      operationId: patchEcommerceStoresIdProductsId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Product_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update product
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: update_store_product
        methodNameCamel: updateStoreProduct
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products/{product_id}/variants:
    get:
      deprecated: false
      description: Get information about a product's variants.
      operationId: getEcommerceStoresIdProductsIdVariants
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce_Product_Variants'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce_Product_Variants'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List product variants
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_product_variants
        methodNameCamel: getProductVariants
    post:
      deprecated: false
      description: Add a new variant to the product.
      operationId: postEcommerceStoresIdProductsIdVariants
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Product_Variant_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Variant'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Variant'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add product variant
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_product_variants
        methodNameCamel: addProductVariants
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}:
    delete:
      deprecated: false
      description: Delete a product variant.
      operationId: deleteEcommerceStoresIdProductsIdVariantsId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - description: The id for the product variant.
        in: path
        name: variant_id
        required: true
        schema:
          type: string
          x-title: Product Variant ID
        x-title: Product Variant ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete product variant
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: delete_product_variant
        methodNameCamel: deleteProductVariant
    get:
      deprecated: false
      description: Get information about a specific product variant.
      operationId: getEcommerceStoresIdProductsIdVariantsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - description: The id for the product variant.
        in: path
        name: variant_id
        required: true
        schema:
          type: string
          x-title: Product Variant ID
        x-title: Product Variant ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Variant'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Variant'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get product variant info
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_product_variant
        methodNameCamel: getProductVariant
    patch:
      deprecated: false
      description: Update a product variant.
      operationId: patchEcommerceStoresIdProductsIdVariantsId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - description: The id for the product variant.
        in: path
        name: variant_id
        required: true
        schema:
          type: string
          x-title: Product Variant ID
        x-title: Product Variant ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Product_Variant_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Variant'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Variant'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update product variant
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: update_product_variant
        methodNameCamel: updateProductVariant
      x-codegen-request-body-name: body
    put:
      deprecated: false
      description: Add or update a product variant.
      operationId: putEcommerceStoresIdProductsIdVariantsId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - description: The id for the product variant.
        in: path
        name: variant_id
        required: true
        schema:
          type: string
          x-title: Product Variant ID
        x-title: Product Variant ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Product_Variant_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Variant'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Variant'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add or update product variant
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_product_variant
        methodNameCamel: addProductVariant
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products/{product_id}/images:
    get:
      deprecated: false
      description: Get information about a product's images.
      operationId: getEcommerceStoresIdProductsIdImages
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce_Product_Images'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce_Product_Images'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List product images
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_product_images
        methodNameCamel: getProductImages
    post:
      deprecated: false
      description: Add a new image to the product.
      operationId: postEcommerceStoresIdProductsIdImages
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Product_Image_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Image'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Image'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add product image
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: add_product_image
        methodNameCamel: addProductImage
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}:
    delete:
      deprecated: false
      description: Delete a product image.
      operationId: deleteEcommerceStoresIdProductsIdImagesId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - description: The id for the product image.
        in: path
        name: image_id
        required: true
        schema:
          type: string
          x-title: Product Image ID
        x-title: Product Image ID
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete product image
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: delete_product_image
        methodNameCamel: deleteProductImage
    get:
      deprecated: false
      description: Get information about a specific product image.
      operationId: getEcommerceStoresIdProductsIdImagesId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - description: The id for the product image.
        in: path
        name: image_id
        required: true
        schema:
          type: string
          x-title: Product Image ID
        x-title: Product Image ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Image'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Image'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get product image info
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: get_product_image
        methodNameCamel: getProductImage
    patch:
      deprecated: false
      description: Update a product image.
      operationId: patchEcommerceStoresIdProductsIdImagesId
      parameters:
      - description: The store id.
        in: path
        name: store_id
        required: true
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - description: The id for the product of a store.
        in: path
        name: product_id
        required: true
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - description: The id for the product image.
        in: path
        name: image_id
        required: true
        schema:
          type: string
          x-title: Product Image ID
        x-title: Product Image ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E_commerce_Product_Image_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Image'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/E_commerce_Product_Image'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Update product image
      tags:
      - ecommerce
      x-custom-config:
        methodNameSnake: update_product_image
        methodNameCamel: updateProductImage
      x-codegen-request-body-name: body
  /search-campaigns:
    get:
      deprecated: false
      description: Search all campaigns for the specified query terms.
      operationId: getSearchCampaigns
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The search query used to filter results.
        in: query
        name: query
        required: true
        schema:
          type: string
          x-title: Query
        x-title: Query
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaigns'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaigns'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Search campaigns
      tags:
      - searchCampaigns
      x-custom-config:
        methodNameSnake: search
        methodNameCamel: search
  /search-members:
    get:
      deprecated: false
      description: "Search for list members. This search can be restricted to a specific\
        \ list, or can be used to search across all lists in an account."
      operationId: getSearchMembers
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: "The search query used to filter results. Query should be a valid\
          \ email, or a string representing a contact's first or last name."
        in: query
        name: query
        required: true
        schema:
          type: string
          x-title: Query
        x-title: Query
      - description: The unique id for the list.
        in: query
        name: list_id
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Members'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Members'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Search members
      tags:
      - searchMembers
      x-custom-config:
        methodNameSnake: search
        methodNameCamel: search
  /ping:
    get:
      deprecated: false
      description: A health check for the API that won't return any account-specific
        information.
      operationId: getPing
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API_health_status'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/API_health_status'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Ping
      tags:
      - ping
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
  /facebook-ads:
    get:
      description: Get list of Facebook ads.
      operationId: getAllFacebookAds
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: Returns files sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - created_at
          - updated_at
          - end_time
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllFacebookAds_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getAllFacebookAds_200_response'
          description: List of Facebook Ad Instances
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List facebook ads
      tags:
      - facebookAds
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
  /facebook-ads/{outreach_id}:
    get:
      description: Get details of a Facebook ad.
      operationId: getFacebookAdsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: The outreach id.
        in: path
        name: outreach_id
        required: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFacebookAdsId_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getFacebookAdsId_200_response'
          description: Facebook Ad Instance
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get facebook ad info
      tags:
      - facebookAds
      x-custom-config:
        methodNameSnake: get_ad
        methodNameCamel: getAd
  /reporting/facebook-ads:
    get:
      description: Get reports of Facebook ads.
      operationId: getReportingFacebookAds
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: Returns files sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - created_at
          - updated_at
          - end_time
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      - description: Determines the order direction for sorted results.
        in: query
        name: sort_dir
        schema:
          enum:
          - ASC
          - DESC
          type: string
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReportingFacebookAds_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getReportingFacebookAds_200_response'
          description: List of Facebook Ad Report Instances
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List facebook ads reports
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_facebook_ads_report_all
        methodNameCamel: getFacebookAdsReportAll
  /reporting/facebook-ads/{outreach_id}:
    get:
      description: Get report of a Facebook ad.
      operationId: getReportingFacebookAdsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: The outreach id.
        in: path
        name: outreach_id
        required: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReportingFacebookAdsId_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getReportingFacebookAdsId_200_response'
          description: Facebook Ad report Instance
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get facebook ad report
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_facebook_ad_report
        methodNameCamel: getFacebookAdReport
  /reporting/facebook-ads/{outreach_id}/ecommerce-product-activity:
    get:
      description: Get breakdown of product activity for an outreach.
      operationId: getReportingFacebookAdsIdEcommerceProductActivity
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      - description: The outreach id.
        in: path
        name: outreach_id
        required: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - description: Returns files sorted by the specified field.
        in: query
        name: sort_field
        schema:
          enum:
          - title
          - total_revenue
          - total_purchased
          type: string
          x-title: Sort By Field
        x-title: Sort By Field
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReportsIdEcommerceProductActivity_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getReportsIdEcommerceProductActivity_200_response'
          description: Ecommerce Product Activity Instance
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List facebook ecommerce report
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_facebook_ad_product_activity_report
        methodNameCamel: getFacebookAdProductActivityReport
  /reporting/landing-pages/{outreach_id}:
    get:
      description: Get report of a landing page.
      operationId: getReportingLandingPagesId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: The outreach id.
        in: path
        name: outreach_id
        required: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing_Page_Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Landing_Page_Report'
          description: Landing Page Report Instance
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get landing page report
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_landing_page_report
        methodNameCamel: getLandingPageReport
  /reporting/landing-pages:
    get:
      description: Get reports of landing pages.
      operationId: getReportingLandingPages
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReportingLandingPages_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getReportingLandingPages_200_response'
          description: List of Landing Page Report Instances
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List landing pages reports
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_landing_page_reports_all
        methodNameCamel: getLandingPageReportsAll
  /reporting/surveys:
    get:
      description: Get reports for surveys.
      operationId: getReportingSurveys
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The number of records to return. Default value is 10. Maximum
          value is 1000
        in: query
        name: count
        schema:
          default: 10
          maximum: 1000
          type: integer
          x-title: Count
        x-title: Count
      - description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        in: query
        name: offset
        schema:
          default: 0
          type: integer
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReportingSurveys_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getReportingSurveys_200_response'
          description: List of Survey Report Instances
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List survey reports
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_survey_reports_all
        methodNameCamel: getSurveyReportsAll
  /reporting/surveys/{outreach_id}:
    get:
      description: Get report for a survey.
      operationId: getReportingSurveysId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The outreach id.
        in: path
        name: outreach_id
        required: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey_Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Survey_Report'
          description: Survey Report Instance
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get survey report
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_survey_report
        methodNameCamel: getSurveyReport
  /reporting/surveys/{outreach_id}/questions:
    get:
      description: Get reports for survey questions.
      operationId: getReportingSurveysIdQuestions
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The outreach id.
        in: path
        name: outreach_id
        required: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReportingSurveysIdQuestions_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getReportingSurveysIdQuestions_200_response'
          description: List of Survey Question Report Instances
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List survey question reports
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_survey_question_reports_all
        methodNameCamel: getSurveyQuestionReportsAll
  /reporting/surveys/{outreach_id}/questions/{question_id}:
    get:
      description: Get report for a survey question.
      operationId: getReportingSurveysIdQuestionsId
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The outreach id.
        in: path
        name: outreach_id
        required: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - description: The ID of the survey question.
        in: path
        name: question_id
        required: true
        schema:
          type: string
          x-title: Question ID
        x-title: Question ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey_Question_Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Survey_Question_Report'
          description: Survey Question Report Instance
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get survey question report
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_survey_question_report
        methodNameCamel: getSurveyQuestionReport
  /reporting/surveys/{outreach_id}/questions/{question_id}/answers:
    get:
      description: Get answers for a survey question.
      operationId: getReportingSurveysIdQuestionsIdAnswers
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The outreach id.
        in: path
        name: outreach_id
        required: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - description: The ID of the survey question.
        in: path
        name: question_id
        required: true
        schema:
          type: string
          x-title: Question ID
        x-title: Question ID
      - description: Filter survey responses by familiarity of the respondents.
        in: query
        name: respondent_familiarity_is
        schema:
          enum:
          - new
          - known
          - unknown
          type: string
          x-title: Respondent Familiarity Is
        x-title: Respondent Familiarity Is
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReportingSurveysIdQuestionsIdAnswers_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getReportingSurveysIdQuestionsIdAnswers_200_response'
          description: List of Survey Question Answers
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List answers for question
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_survey_question_answers
        methodNameCamel: getSurveyQuestionAnswers
  /reporting/surveys/{outreach_id}/responses:
    get:
      description: Get responses to a survey.
      operationId: getReportingSurveysIdResponses
      parameters:
      - description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
          x-title: Fields
        style: form
        x-title: Fields
      - description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        explode: false
        in: query
        name: exclude_fields
        schema:
          items:
            type: string
          type: array
          x-title: Exclude Fields
        style: form
        x-title: Exclude Fields
      - description: The outreach id.
        in: path
        name: outreach_id
        required: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - description: The ID of the question that was answered.
        in: query
        name: answered_question
        schema:
          type: integer
          x-title: Answered Question
        x-title: Answered Question
      - description: The ID of the option chosen to filter responses on.
        in: query
        name: chose_answer
        schema:
          type: string
          x-title: Chose Answer
        x-title: Chose Answer
      - description: Filter survey responses by familiarity of the respondents.
        in: query
        name: respondent_familiarity_is
        schema:
          enum:
          - new
          - known
          - unknown
          type: string
          x-title: Respondent Familiarity Is
        x-title: Respondent Familiarity Is
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReportingSurveysIdResponses_200_response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/getReportingSurveysIdResponses_200_response'
          description: List of survey responses
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List survey responses
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_survey_responses_all
        methodNameCamel: getSurveyResponsesAll
  /reporting/surveys/{outreach_id}/responses/{response_id}:
    get:
      description: Get a single survey response.
      operationId: getReportingSurveysIdResponsesId
      parameters:
      - description: The outreach id.
        in: path
        name: outreach_id
        required: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - description: The ID of the survey response.
        in: path
        name: response_id
        required: true
        schema:
          type: string
          x-title: Response ID
        x-title: Response ID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey_Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Survey_Response'
          description: Get a single survey response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get survey response
      tags:
      - reporting
      x-custom-config:
        methodNameSnake: get_survey_response
        methodNameCamel: getSurveyResponse
  /verified-domains/{domain_name}:
    delete:
      deprecated: false
      description: Delete a verified domain from the account.
      operationId: deleteVerifiedDomain
      parameters:
      - description: The domain name.
        in: path
        name: domain_name
        required: true
        schema:
          type: string
          x-title: Domain Name
        x-title: Domain Name
      responses:
        "204":
          content: {}
          description: Empty Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Delete domain
      tags:
      - verifiedDomains
      x-custom-config:
        methodNameSnake: delete_domain
        methodNameCamel: deleteDomain
    get:
      deprecated: false
      description: Get the details for a single domain on the account.
      operationId: getVerifiedDomain
      parameters:
      - description: The domain name.
        in: path
        name: domain_name
        required: true
        schema:
          type: string
          x-title: Domain Name
        x-title: Domain Name
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verified_Domains'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Verified_Domains'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Get domain info
      tags:
      - verifiedDomains
      x-custom-config:
        methodNameSnake: get_domain
        methodNameCamel: getDomain
  /verified-domains/{domain_name}/actions/verify:
    post:
      deprecated: false
      description: Verify a domain for sending.
      operationId: verifyDomain
      parameters:
      - description: The domain name.
        in: path
        name: domain_name
        required: true
        schema:
          type: string
          x-title: Domain Name
        x-title: Domain Name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verify_a_domain_for_sending_'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verified_Domains'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Verified_Domains'
          description: The domain being verified for sending.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Verify domain
      tags:
      - verifiedDomains
      x-custom-config:
        methodNameSnake: submit_domain_verification
        methodNameCamel: submitDomainVerification
      x-codegen-request-body-name: body
  /verified-domains:
    get:
      deprecated: false
      description: Get all of the sending domains on the account.
      operationId: getVerifiedDomains
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verified_Domains_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Verified_Domains_1'
          description: The domains on the account.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: List sending domains
      tags:
      - verifiedDomains
      x-custom-config:
        methodNameSnake: get_verified_domains_all
        methodNameCamel: getVerifiedDomainsAll
    post:
      deprecated: false
      description: Add a domain to the account.
      operationId: createVerifiedDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verified_Domains_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verified_Domains'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Verified_Domains'
          description: The newly-created domain.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem_Detail_Document'
          description: An error generated by the Mailchimp API.
      summary: Add domain to account
      tags:
      - verifiedDomains
      x-custom-config:
        methodNameSnake: create_verified_domain
        methodNameCamel: createVerifiedDomain
      x-codegen-request-body-name: body
components:
  schemas:
    E_commerce_Store:
      description: An individual store in an account.
      example:
        is_syncing: true
        automations:
          abandoned_browse:
            is_supported: false
            id: 355a72bfc3
            status: sending
          abandoned_cart:
            is_supported: false
            id: 355a72bfc3
            status: sending
        address:
          country: United States
          country_code: US
          province: Georgia
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          latitude: 45.427408
          province_code: GA
          postal_code: "30308"
          longitude: -75.68903
        list_id: 1a2df69511
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        timezone: Eastern
        primary_locale: fr
        created_at: 2015-07-15T19:28:00Z
        list_is_active: true
        platform: platform
        currency_code: USD
        money_format: $
        connected_site:
          site_script:
            fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
              script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
              );</script>"
            url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
          site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created via\
            \ API"
        email_address: freddie@mailchimp.com
        updated_at: 2015-07-15T19:28:00Z
        phone: 404-444-4444
        domain: example.com
        name: Freddie's Cat Hat Emporium
        id: example_store
      properties:
        id:
          description: The unique identifier for the store.
          example: example_store
          readOnly: true
          title: Store Foreign ID
          type: string
        list_id:
          description: The unique identifier for the list that's associated with the
            store. The `list_id` for a specific store can't change.
          example: 1a2df69511
          readOnly: true
          title: List ID
          type: string
        name:
          description: The name of the store.
          example: Freddie's Cat Hat Emporium
          title: Store Name
          type: string
        platform:
          description: The e-commerce platform of the store.
          title: Platform
          type: string
        domain:
          description: The store domain.  The store domain must be unique within a
            user account.
          example: example.com
          title: Domain
          type: string
        is_syncing:
          description: "Whether to disable automations because the store is currently\
            \ [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations)."
          title: Is Syncing
          type: boolean
        email_address:
          description: The email address for the store.
          example: freddie@mailchimp.com
          title: Email Address
          type: string
        currency_code:
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          example: USD
          title: Currency
          type: string
        money_format:
          description: "The currency format for the store. For example: `$`, `£`,\
            \ etc."
          example: $
          title: Money Format
          type: string
        primary_locale:
          description: "The primary locale for the store. For example: `en`, `de`,\
            \ etc."
          example: fr
          title: Primary Locale
          type: string
        timezone:
          description: The timezone for the store.
          example: Eastern
          title: Timezone
          type: string
        phone:
          description: The store phone number.
          example: 404-444-4444
          title: Phone
          type: string
        address:
          $ref: '#/components/schemas/Address_1'
        connected_site:
          $ref: '#/components/schemas/Connected_Site_2'
        automations:
          $ref: '#/components/schemas/Automations'
        list_is_active:
          description: "The status of the list connected to the store, namely if it's\
            \ deleted or disabled."
          readOnly: true
          title: List Status
          type: boolean
        created_at:
          description: The date and time the store was created in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          readOnly: true
          title: Creation Time
          type: string
        updated_at:
          description: The date and time the store was last updated in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          readOnly: true
          title: Update Time
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Store
      type: object
    Batch_Webhooks:
      description: Manage webhooks for batch requests.
      example:
        webhooks:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
          url: http://yourdomain.com/webhook
          enabled: true
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
          url: http://yourdomain.com/webhook
          enabled: true
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
      properties:
        webhooks:
          description: "An array of objects, each representing a Batch Webhook."
          items:
            $ref: '#/components/schemas/Batch_Webhook'
          title: Webhooks
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Batch Webhooks
      type: object
    File_Manager:
      description: A list of available images and files stored in the File Manager
        for the account.
      example:
        total_file_size: 2.3021358869347655
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        files:
        - full_size_url: https://openapi-generator.tech
          size: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          width: 5
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          folder_id: 6
          type: image
          thumbnail_url: https://openapi-generator.tech
          created_by: created_by
          height: 5
        - full_size_url: https://openapi-generator.tech
          size: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          width: 5
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          folder_id: 6
          type: image
          thumbnail_url: https://openapi-generator.tech
          created_by: created_by
          height: 5
        total_items: 7
      properties:
        files:
          description: ' A list of files and images in an account.'
          items:
            $ref: '#/components/schemas/Gallery_File'
          title: Files
          type: array
        total_file_size:
          description: The total size of all File Manager files in bytes.
          readOnly: true
          title: Total File Size
          type: number
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: File Manager
      type: object
    Landing_Page_Report_timeseries:
      example:
        daily_stats:
          unique_visits:
          - date: 2018-04-25
            val: 1
          - date: 2018-04-25
            val: 1
          visits:
          - date: 2018-04-25
            val: 11
          - date: 2018-04-25
            val: 11
          clicks:
          - date: 2018-04-25
            val: 13
          - date: 2018-04-25
            val: 13
        weekly_stats:
          unique_visits:
          - date: 2018-04-25
            val: 1
          - date: 2018-04-25
            val: 1
          visits:
          - date: 2018-04-25
            val: 49
          - date: 2018-04-25
            val: 49
          clicks:
          - date: 2018-04-25
            val: 23
          - date: 2018-04-25
            val: 23
      properties:
        daily_stats:
          $ref: '#/components/schemas/Daily_clicks_and_visits_data'
        weekly_stats:
          $ref: '#/components/schemas/Weekly_clicks_and_visits_data'
      type: object
    Account_Contact:
      description: Information about the account contact.
      example:
        zip: zip
        country: country
        addr2: addr2
        addr1: addr1
        city: city
        company: company
        state: state
      properties:
        company:
          description: The company name for the account.
          readOnly: true
          title: Company
          type: string
        addr1:
          description: The street address for the account contact.
          readOnly: true
          title: Address Line 1
          type: string
        addr2:
          description: The street address for the account contact.
          readOnly: true
          title: Address Line 2
          type: string
        city:
          description: The city for the account contact.
          readOnly: true
          title: City
          type: string
        state:
          description: The state for the account contact.
          readOnly: true
          title: State
          type: string
        zip:
          description: The zip code for the account contact.
          readOnly: true
          title: Zip Code
          type: string
        country:
          description: The country for the account contact.
          readOnly: true
          title: Country
          type: string
      readOnly: true
      title: Account Contact
      type: object
    E_commerce_Product_Variant:
      description: Information about a specific product variant.
      example:
        inventory_quantity: 6
        visibility: visibility
        updated_at: 2015-07-15T19:28:00Z
        backorders: backorders
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        price: 0.8008281904610115
        image_url: image_url
        created_at: 2015-07-15T19:28:00Z
        id: id
        title: Cat Hat
        sku: sku
        url: url
      properties:
        id:
          description: A unique identifier for the product variant.
          readOnly: true
          title: Product Variant Foreign ID
          type: string
        title:
          description: The title of a product variant.
          example: Cat Hat
          title: Title
          type: string
        url:
          description: The URL for a product variant.
          title: URL
          type: string
        sku:
          description: The stock keeping unit (SKU) of a product variant.
          title: SKU
          type: string
        price:
          description: The price of a product variant.
          title: Price
          type: number
        inventory_quantity:
          description: The inventory quantity of a product variant.
          title: Inventory Quantity
          type: integer
        image_url:
          description: The image URL for a product variant.
          title: Image URL
          type: string
        backorders:
          description: The backorders of a product variant.
          title: Backorders
          type: string
        visibility:
          description: The visibility of a product variant.
          title: Visibility
          type: string
        created_at:
          description: The date and time the product was created in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          readOnly: true
          title: Creation Time
          type: string
        updated_at:
          description: The date and time the product was last updated in ISO 8601
            format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          readOnly: true
          title: Update Time
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Product Variant
      type: object
    Orders_1:
      description: A collection of orders in a store.
      example:
        store_id: store_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        orders:
        - discount_total: 6.027456183070403
          fulfillment_status: fulfillment_status
          tax_total: 1.4658129805029452
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          processed_at_foreign: 2015-07-15T19:28:00Z
          billing_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          currency_code: currency_code
          landing_site: http://www.example.com?source=abc
          order_url: order_url
          tracking_number: tracking_number
          id: id
          shipping_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          updated_at_foreign: 2015-07-15T19:28:00Z
          lines:
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          promos:
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          tracking_url: tracking_url
          campaign_id: 839488a60b
          cancelled_at_foreign: 2015-07-15T19:28:00Z
          store_id: store_id
          shipping_total: 5.962133916683182
          outreach:
            published_time: 2017-06-06T13:56:12Z
            name: Freddie's Jokes
            id: 839488a60b
            type: regular
          tracking_code: prec
          tracking_carrier: tracking_carrier
          financial_status: financial_status
          order_total: 0.8008281904610115
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        - discount_total: 6.027456183070403
          fulfillment_status: fulfillment_status
          tax_total: 1.4658129805029452
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          processed_at_foreign: 2015-07-15T19:28:00Z
          billing_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          currency_code: currency_code
          landing_site: http://www.example.com?source=abc
          order_url: order_url
          tracking_number: tracking_number
          id: id
          shipping_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          updated_at_foreign: 2015-07-15T19:28:00Z
          lines:
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          promos:
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          tracking_url: tracking_url
          campaign_id: 839488a60b
          cancelled_at_foreign: 2015-07-15T19:28:00Z
          store_id: store_id
          shipping_total: 5.962133916683182
          outreach:
            published_time: 2017-06-06T13:56:12Z
            name: Freddie's Jokes
            id: 839488a60b
            type: regular
          tracking_code: prec
          tracking_carrier: tracking_carrier
          financial_status: financial_status
          order_total: 0.8008281904610115
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        total_items: 0
      properties:
        store_id:
          description: The unique identifier for the store.
          title: Store ID
          type: string
        orders:
          description: "An array of objects, each representing an order in a store."
          items:
            $ref: '#/components/schemas/E_commerce_Order'
          title: Orders
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Orders
      type: object
    Errors_inner_1:
      example:
        email_addresses:
        - email_addresses
        - email_addresses
        error: error
      properties:
        email_addresses:
          description: Email addresses added to the static segment or removed
          items:
            type: string
          title: Email addresses added to the static segment or removed
          type: array
        error:
          description: The error message indicating why the email addresses could
            not be added or updated.
          title: Error message
          type: string
      type: object
    Collection_of_Content_for_List_Signup_Forms:
      description: Collection of Content for List Signup Forms.
      example:
        section: signup_message
        value: Signup message goes here
      properties:
        section:
          description: The content section name.
          enum:
          - signup_message
          - unsub_message
          - signup_thank_you_title
          example: signup_message
          title: Content Section Name
          type: string
        value:
          description: The content section text.
          example: Signup message goes here
          title: Content Section Value
          type: string
      title: Collection of Content for List Signup Forms
      type: object
    getReportsIdEcommerceProductActivity_200_response:
      description: A collection of ecommerce products.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 5
        products:
        - total_purchased: 6.027456183070403
          image_url: image_url
          total_revenue: 0.8008281904610115
          recommendation_purchased: 5
          recommendation_total: 1
          title: title
          sku: sku
          currency_code: currency_code
        - total_purchased: 6.027456183070403
          image_url: image_url
          total_revenue: 0.8008281904610115
          recommendation_purchased: 5
          recommendation_total: 1
          title: title
          sku: sku
          currency_code: currency_code
      properties:
        products:
          items:
            $ref: '#/components/schemas/getReportsIdEcommerceProductActivity_200_response_products_inner'
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    Twitter_Status:
      description: An individual tweet.
      example:
        datetime: 2000-01-23T04:56:07.000+00:00
        status_id: status_id
        screen_name: screen_name
        is_retweet: true
        status: status
      properties:
        status:
          description: The body of the tweet.
          readOnly: true
          title: Status Body
          type: string
        screen_name:
          description: The Twitter handle for the author of the tweet.
          readOnly: true
          title: Screen Name
          type: string
        status_id:
          description: The individual id for the tweet.
          readOnly: true
          title: Status ID
          type: string
        datetime:
          description: A timestamp for the tweet.
          format: date-time
          readOnly: true
          title: Datetime
          type: string
        is_retweet:
          description: A 'true' or 'false' status of whether the tweet is a retweet.
          readOnly: true
          title: Is Retweet
          type: boolean
      title: Twitter Status
      type: object
    List_Signup_Forms:
      description: List Signup Forms.
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        signup_forms:
        - list_id: 4ca5becb8d
          contents:
          - section: signup_message
            value: Signup message goes here
          - section: signup_message
            value: Signup message goes here
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          header:
            image_height: "200"
            image_link: gotothisimage.com
            image_align: center
            image_border_color: '#896d6d'
            image_url: http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png
            image_border_style: solid
            image_alt: This is an image
            text: Header Text goes here
            image_width: "800"
            image_target: _blank
            image_border_width: "2"
          signup_form_url: signup_form_url
          styles:
          - options:
            - property: background-color
              value: '#111111'
            - property: background-color
              value: '#111111'
            selector: page_background
          - options:
            - property: background-color
              value: '#111111'
            - property: background-color
              value: '#111111'
            selector: page_background
        - list_id: 4ca5becb8d
          contents:
          - section: signup_message
            value: Signup message goes here
          - section: signup_message
            value: Signup message goes here
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          header:
            image_height: "200"
            image_link: gotothisimage.com
            image_align: center
            image_border_color: '#896d6d'
            image_url: http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png
            image_border_style: solid
            image_alt: This is an image
            text: Header Text goes here
            image_width: "800"
            image_target: _blank
            image_border_width: "2"
          signup_form_url: signup_form_url
          styles:
          - options:
            - property: background-color
              value: '#111111'
            - property: background-color
              value: '#111111'
            selector: page_background
          - options:
            - property: background-color
              value: '#111111'
            - property: background-color
              value: '#111111'
            selector: page_background
        total_items: 0
      properties:
        signup_forms:
          description: List signup form.
          items:
            $ref: '#/components/schemas/Signup_Form'
          title: List Signup Form
          type: array
        list_id:
          description: The list id.
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: List Signup Forms
      type: object
    Member_Notes_1:
      description: A specific note for a specific member.
      properties:
        note:
          description: "The content of the note. Note length is limited to 1,000 characters."
          title: Note
          type: string
      title: Member Notes
      type: object
    getActivityFeedChimpChatter_200_response:
      description: An array of Chimp Chatter messages. There's a maximum of 200 messages
        present for an account.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        chimp_chatter:
        - update_time: 2017-08-04T11:09:01Z
          list_id: 2017-08-04T11:09:01+00:00
          title: 1 new subscriber to Your New Campaign!
          message: People are telling their friends about your campaign!
          type: campaigns:forward-to-friend
          url: http://dev.mailchimp.com/reports/summary?id=1
          campaign_id: 2017-08-04T11:09:01+00:00
        - update_time: 2017-08-04T11:09:01Z
          list_id: 2017-08-04T11:09:01+00:00
          title: 1 new subscriber to Your New Campaign!
          message: People are telling their friends about your campaign!
          type: campaigns:forward-to-friend
          url: http://dev.mailchimp.com/reports/summary?id=1
          campaign_id: 2017-08-04T11:09:01+00:00
        total_items: 0
      properties:
        chimp_chatter:
          description: An array of Chimp Chatter messages. There's a maximum of 200
            messages present for an account.
          items:
            $ref: '#/components/schemas/ChimpChatter'
          readOnly: true
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    Segment_Options_1:
      description: "An object representing all segmentation options. This object should\
        \ contain a `saved_segment_id` to use an existing segment, or you can create\
        \ a new segment by including both `match` and `conditions` options."
      example:
        prebuilt_segment_id: subscribers-female
        match: any
        saved_segment_id: 5
        conditions:
        - "{}"
        - "{}"
      properties:
        saved_segment_id:
          description: The id for an existing saved segment.
          title: Saved Segment ID
          type: integer
        prebuilt_segment_id:
          description: "The prebuilt segment id, if a prebuilt segment has been designated\
            \ for this campaign."
          example: subscribers-female
          title: Prebuilt Segment Id
          type: string
        match:
          description: Segment match type.
          enum:
          - any
          - all
          title: Match Type
          type: string
        conditions:
          description: "Segment match conditions. There are multiple possible types,\
            \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
          items:
            type: object
            x-oneOf:
            - type: object
              title: Aim Segment
              description: Segment by interaction with a specific campaign.
              properties:
                condition_type:
                  type: string
                  x-value: Aim
                  enum:
                  - Aim
                field:
                  type: string
                  enum:
                  - aim
                  title: Segment Field
                  description: Segment by interaction with a specific campaign.
                  example: aim
                op:
                  type: string
                  enum:
                  - open
                  - click
                  - sent
                  - noopen
                  - noclick
                  - nosent
                  title: Segment Operator
                  description: "The status of the member with regard to their campaign\
                    \ interaction. One of the following: opened, clicked, was sent,\
                    \ didn't open, didn't click, or was not sent."
                  example: open
                value:
                  type: string
                  title: Segment Data
                  description: Either the web id value for a specific campaign or
                    'any' to account for subscribers who have/have not interacted
                    with any campaigns.
                  example: any
            - type: object
              title: Automation Segment
              description: Segment by interaction with an Automation workflow.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Automation
                  enum:
                  - Automation
                field:
                  type: string
                  enum:
                  - automation
                  title: Segment Field
                  description: Segment by interaction with an Automation workflow.
                  example: automation
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the automation\
                    \ workflow. One of the following: has started the workflow, has\
                    \ completed the workflow, has not started the workflow, or has\
                    \ not completed the workflow."
                  example: started
                value:
                  type: string
                  title: Segment Data
                  description: The web id for the automation workflow to segment against.
                  example: "2135217"
            - type: object
              title: Poll Activity Segment
              description: Segment by poll activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: CampaignPoll
                  enum:
                  - CampaignPoll
                field:
                  type: string
                  enum:
                  - poll
                  title: Segment Field
                  description: Segment by poll activity.
                  example: poll
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members have/have not interacted with a specific poll
                    in a Mailchimp email.
                  example: member
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the poll.
                  example: 409
            - type: object
              title: Conversation Segment
              description: Segment by interaction with a campaign via Conversations.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Conversation
                  enum:
                  - Conversation
                field:
                  type: string
                  enum:
                  - conversation
                  title: Segment Field
                  description: Segment by interaction with a campaign via Conversations.
                  example: conversation
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: "The status of a member's interaction with a conversation.\
                    \ One of the following: has replied or has not replied."
                  example: member
                value:
                  type: string
                  title: Segment Data
                  description: The web id value for a specific campaign or 'any' to
                    account for subscribers who have/have not interacted with any
                    campaigns.
                  example: any
            - type: object
              title: Date Segment
              description: Segment by a specific date field.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Date
                  enum:
                  - Date
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  - info_changed
                  - ecomm_date
                  title: Segment Field
                  description: "The type of date field to segment on: The opt-in time\
                    \ for a signup, the date the subscriber was last updated, or the\
                    \ date of their last ecomm purchase."
                  example: timestamp_opt
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  - not
                  - blank
                  - blank_not
                  - within
                  - notwithin
                  title: Segment Operator
                  description: "When the event took place:  Before, after, is a specific\
                    \ date, is not a specific date, is blank, or is not blank."
                  example: greater
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
                  example: date
                extra:
                  type: string
                  title: Segment Extra Value
                  description: "When segmenting on 'date' or 'campaign', the date\
                    \ for the segment formatted as YYYY-MM-DD or the web id for the\
                    \ campaign."
                  example: 2015-01-30
            - type: object
              title: Email Client Segment
              description: Segment by use of a particular email client.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EmailClient
                  enum:
                  - EmailClient
                field:
                  type: string
                  enum:
                  - email_client
                  title: Segment Field
                  description: Segment by use of a particular email client.
                  example: email_client
                op:
                  type: string
                  enum:
                  - client_is
                  - client_not
                  title: Segment Operator
                  description: "The operation to determine whether we select clients\
                    \ that match the value, or clients that do not match the value."
                  example: client_is
                value:
                  type: string
                  title: Segment Data
                  description: The name of the email client.
                  example: Gmail
            - type: object
              title: Language Segment
              description: Segment by language.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Language
                  enum:
                  - Language
                field:
                  type: string
                  enum:
                  - language
                  title: Segment Field
                  description: Segmenting based off of a subscriber's language.
                  example: language
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Whether the member's language is or is not set to a
                    specific language.
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: A two-letter language identifier.
                  example: en
            - type: object
              title: Member Rating Segment
              description: Segment by member rating.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: MemberRating
                  enum:
                  - MemberRating
                field:
                  type: string
                  enum:
                  - rating
                  title: Segment Field
                  description: Segment by member rating.
                  example: rating
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have have a rating that is/not exactly
                    a given number or members who have a rating greater/less than
                    a given number.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The star rating number to segment against.
                  example: 4
            - type: object
              title: Signup Source Segment
              description: Segment by signup source.
              required:
              - field
              - condition_type
              - op
              properties:
                condition_type:
                  type: string
                  enum:
                  - SignupSource
                  x-value: SignupSource
                  title: Type
                field:
                  type: string
                  enum:
                  - source
                  title: Segment Field
                  example: source
                op:
                  type: string
                  enum:
                  - source_is
                  - source_not
                  title: Segment Operator
                  description: Whether the member's signup source was/was not a particular
                    value.
                  example: source_is
                value:
                  type: string
                  title: Segment Data
                  description: The signup source.
                  example: List Import
            - type: object
              title: Survey Monkey Segment
              description: Segment by interaction with a SurveyMonkey survey.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SurveyMonkey
                  enum:
                  - SurveyMonkey
                field:
                  type: string
                  enum:
                  - survey_monkey
                  title: Segment Field
                  description: Segment by interaction with a SurveyMonkey survey.
                  example: survey_monkey
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the survey.One\
                    \ of the following: has started the survey, has completed the\
                    \ survey, has not started the survey, or has not completed the\
                    \ survey."
                  example: started
                value:
                  type: string
                  title: Survey ID
                  description: The unique ID of the survey monkey survey.
                  example: "32179586"
            - type: object
              title: VIP Segment
              description: Segment by VIP status.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: VIP
                  enum:
                  - VIP
                field:
                  type: string
                  enum:
                  - gmonkey
                  title: Segment Field
                  description: Segment by VIP status.
                  example: gmonkey
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Whether the member is or is not marked as VIP.
                  example: member
            - type: object
              title: Interests Segment
              description: Segment by an interest group merge field.
              properties:
                condition_type:
                  type: string
                  x-value: Interests
                  enum:
                  - Interests
                field:
                  type: string
                  title: Segment Field
                  description: Segmenting based on interest group information. This
                    should start with 'interests-' followed by the grouping id. Ex.
                    'interests-123'.
                  example: interests-123
                op:
                  type: string
                  enum:
                  - interestcontains
                  - interestcontainsall
                  - interestnotcontains
                  title: Segment Operator
                  description: "Whether the member is a part of one, all, or none\
                    \ of the groups."
                  example: interestcontains
                value:
                  type: array
                  title: Segment Value
                  description: "An array containing strings, each representing a group\
                    \ id."
                  items:
                    type: string
                    example:
                    - "44401"
                    - "44405"
                    - "44409"
            - type: object
              title: Ecommerce Category Segment
              description: Segment by purchases in specific items or categories.
              properties:
                condition_type:
                  type: string
                  x-value: EcommCategory
                  enum:
                  - EcommCategory
                field:
                  type: string
                  enum:
                  - ecomm_cat
                  - ecomm_prod
                  title: Segment Field
                  description: Segment by purchases in specific items or categories.
                  example: ecomm_cat
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "A member who has purchased from a category/specific\
                    \ item that is/is not a specific name, where the category/item\
                    \ name contains/doesn't contain a specific phrase or string, or\
                    \ a category/item name that starts/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: The ecommerce category/item information.
                  example: Product
            - type: object
              title: Ecommerce Number Segment
              description: "Segment by average spent total, number of orders, total\
                \ number of products purchased, or average number of products per\
                \ order."
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EcommNumber
                  enum:
                  - EcommNumber
                field:
                  type: string
                  enum:
                  - ecomm_spent_avg
                  - ecomm_orders
                  - ecomm_prod_all
                  - ecomm_avg_ord
                  title: Segment Field
                  description: "Segment by average spent total, number of orders,\
                    \ total number of products purchased, or average number of products\
                    \ per order."
                  example: ecomm_orders
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than the segment value."
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than this amount."
                  example: 42
            - type: object
              title: Ecommerce Purchased Segment
              description: Segment by whether someone has purchased anything.
              properties:
                condition_type:
                  type: string
                  x-value: EcommPurchased
                  enum:
                  - EcommPurchased
                field:
                  type: string
                  enum:
                  - ecomm_purchased
                  title: Segment Field
                  description: Segment by whether someone has purchased anything.
                  example: ecomm_purchased
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who have have ('member') or have not ('notmember')
                    purchased.
                  example: member
            - type: object
              title: Ecommerce Spent Segment
              description: Segment by amount spent on a single order or across all
                orders.
              properties:
                condition_type:
                  type: string
                  x-value: EcommSpent
                  enum:
                  - EcommSpent
                field:
                  type: string
                  enum:
                  - ecomm_spent_one
                  - ecomm_spent_all
                  title: Segment Field
                  description: Segment by amount spent on a single order or across
                    all orders.
                  example: ecomm_spent_one
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have spent 'more' or 'less' than then specified
                    value.
                  example: greater
                value:
                  type: integer
                  title: Segment Data
                  description: The total amount a member spent.
                  example: 42
            - type: object
              title: Ecommerce Purchased Store Segment
              description: Segment by purchases from a specific store.
              properties:
                condition_type:
                  type: string
                  x-value: EcommStore
                  enum:
                  - EcommStore
                field:
                  type: string
                  enum:
                  - ecomm_store
                  title: Segment Field
                  description: Segment by purchases from a specific store.
                  example: ecomm_store
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who have or have not purchased from a specific
                    store.
                  example: is
                value:
                  type: string
                  title: Segment Operator
                  description: The store id to segment against.
                  example: "289"
            - type: object
              title: Goal Activity Segment
              description: Segment by Goal activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalActivity
                  enum:
                  - GoalActivity
                field:
                  type: string
                  enum:
                  - goal
                  title: Segment Field
                  description: Segment by Goal activity.
                  example: goal
                op:
                  type: string
                  enum:
                  - is
                  - goal_not
                  - contains
                  - goal_notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "Whether the website URL is/not exactly, contains/doesn't\
                    \ contain, starts with/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The URL to check Goal activity against.
            - type: object
              title: Goal Timestamp Segment
              description: Segment by most recent interaction with a website.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalTimestamp
                  enum:
                  - GoalTimestamp
                field:
                  type: string
                  enum:
                  - goal_last_visited
                  title: Segment Field
                  description: Segment by most recent interaction with a website.
                  example: goal_last_visited
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  title: Segment Operator
                  description: "Whether the website activity happened after, before,\
                    \ or at a given timestamp."
                  example: greater
                value:
                  type: string
                  title: Segment Value
                  description: The date to check Goal activity against.
                  example: 2015-07-20 19:45:21
            - type: object
              title: Similar Subscribers Segment Member Segment
              description: Segment by similar subscribers.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: FuzzySegment
                  enum:
                  - FuzzySegment
                field:
                  type: string
                  enum:
                  - fuzzy_segment
                  title: Segment Field
                  description: Segment by similar subscribers.
                  example: fuzzy_segment
                op:
                  type: string
                  enum:
                  - fuzzy_is
                  - fuzzy_not
                  title: Segment Operator
                  description: Members who are/are not apart of a 'similar subscribers'
                    segment.
                  example: fuzzy_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the 'similar subscribers' segment.
                  example: 48433
            - type: object
              title: Static Segment Member Segment
              description: Segment by a given static segment.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: StaticSegment
                  enum:
                  - StaticSegment
                field:
                  type: string
                  enum:
                  - static_segment
                  title: Segment Field
                  description: Segment by a given static segment.
                  example: static_segment
                op:
                  type: string
                  enum:
                  - static_is
                  - static_not
                  title: Segment Operator
                  description: Members who are/are not apart of a static segment.
                  example: static_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the static segment.
                  example: 48433
            - type: object
              title: Location-Based Segment
              description: Segment by a specific country or US state.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoCountryState
                  enum:
                  - IPGeoCountryState
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeocountry
                  - ipgeonotcountry
                  - ipgeostate
                  - ipgeonotstate
                  title: Segment Operator
                  description: Segment members who are within a specific country or
                    US state.
                  example: ipgeocountry
                value:
                  type: string
                  title: Segment Data
                  description: The two-letter country code or US state abbreviation.
                  example: US
            - type: object
              title: Geolocation Segment
              description: Segment by a specific geographic region.
              required:
              - field
              - op
              - value
              - addr
              - lat
              - lng
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoIn
                  enum:
                  - IPGeoIn
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoin
                  - ipgeonotin
                  title: Segment Operator
                  description: Segment members who are within a specific geographic
                    region.
                  example: ipgeoin
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 42
                addr:
                  type: string
                  title: Segment Location Address
                  description: The address of the target location.
                  example: "Atlanta, GA, USA"
                lat:
                  type: string
                  title: Segment Location Latitude
                  description: The latitude of the target location.
                  example: "33.7489954"
                lng:
                  type: string
                  title: Segment Location Longitude
                  description: The longitude of the target location.
                  example: "-84.3879824"
            - type: object
              title: US Zip Code Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoInZip
                  enum:
                  - IPGeoInZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoinzip
                  title: Segment Operator
                  description: Segment members who are within a specific US zip code.
                  example: ipgeoinzip
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 25
                extra:
                  type: integer
                  title: Extra Data
                  description: The zip code to segment against.
                  example: 30318
            - type: object
              title: Unknown Location-Based Segment
              description: Segment members whose location information is unknown.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoUnknown
                  enum:
                  - IPGeoUnknown
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeounknown
                  title: Segment Operator
                  description: Segment members for which location information is unknown.
                  example: ipgeounknown
            - type: object
              title: Zip Code Location-Based Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoZip
                  enum:
                  - IPGeoZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoiszip
                  - ipgeonotzip
                  title: Segment Operator
                  description: Segment members who are/are not within a specific US
                    zip code.
                  example: ipgeonotzip
                value:
                  type: integer
                  title: Segment Data
                  description: The 5-digit zip code.
                  example: 30318
            - type: object
              title: Social Profiles Age Segment
              description: Segment by age ranges in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialAge
                  enum:
                  - SocialAge
                field:
                  type: string
                  enum:
                  - social_age
                  title: Segment Field
                  description: Segment by age ranges in Social Profiles data.
                  example: social_age
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-54
                  - 55+
                  title: Segment Operator
                  description: The age range to segment.
                  example: 35-54
            - type: object
              title: Social Profiles Gender Segment
              description: Segment by listed gender in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialGender
                  enum:
                  - SocialGender
                field:
                  type: string
                  enum:
                  - social_gender
                  title: Segment Field
                  description: Segment by listed gender in Social Profiles data.
                  example: social_gender
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The Social Profiles gender to segment.
                  example: female
            - type: object
              title: Social Profiles Influence Segment
              description: Segment by influence rating in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialInfluence
                  enum:
                  - SocialInfluence
                field:
                  type: string
                  enum:
                  - social_influence
                  title: Segment Field
                  description: Segment by influence rating in Social Profiles data.
                  example: social_influence
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have a rating that is/not or greater/less
                    than the rating provided.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The Social Profiles influence rating to segment.
                  example: 2
            - type: object
              title: Social Profiles Social Network Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkMember
                  enum:
                  - SocialNetworkMember
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who are/not on a given social network.
                  example: member
                value:
                  type: string
                  enum:
                  - twitter
                  - facebook
                  - linkedin
                  - flickr
                  - foursquare
                  - lastfm
                  - myspace
                  - quora
                  - vimeo
                  - yelp
                  - youtube
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter
            - type: object
              title: Social Profiles Social Network Follow Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkFollow
                  enum:
                  - SocialNetworkFollow
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - follow
                  - notfollow
                  title: Segment Operator
                  description: Members who are/not following a linked account on a
                    given social network.
                  example: follow
                value:
                  type: string
                  enum:
                  - twitter_follow
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter_follow
            - type: object
              title: Address Merge Field Segment
              description: Segment by an address-type merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: AddressMerge
                  enum:
                  - AddressMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address-type merge field to segment.
                  example: MMERGE3
                op:
                  type: string
                  enum:
                  - contains
                  - notcontain
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's address merge field contains/does
                    not contain a value or is/is not blank.
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Atlanta
            - type: object
              title: Address/Zip Merge Field Segment
              description: Segment by an address-type merge field within a given distance.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: ZipMerge
                  enum:
                  - ZipMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address or zip-type merge field to segment.
                  example: MMERGE2
                op:
                  type: string
                  enum:
                  - geoin
                  title: Segment Operator
                  description: Whether the member's address merge field is within
                    a given distance from a city or zip.
                  example: geoin
                value:
                  type: string
                  title: Segment Value
                  description: The distance from the city/zip.
                  example: "25"
                extra:
                  type: string
                  title: Segment Extra
                  description: The city or the zip being used to segment against.
                  example: "30318"
            - type: object
              title: Birthday Merge Field Segment
              description: Segment by a contact's birthday.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: BirthdayMerge
                  enum:
                  - BirthdayMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE4
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's birthday merge information is/is
                    not a certain date or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against (mm/dd).
                  example: 01/30
            - type: object
              title: Date Merge Field Segment
              description: Segment by a given date merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: DateMerge
                  enum:
                  - DateMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE5
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - less
                  - blank
                  - blank_not
                  - greater
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ is greater/less than a value or is/is not blank."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against.
                  example: 01/30/2015
            - type: object
              title: Dropdown/Radio Merge Field Segment
              description: An individual segment condition
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: SelectMerge
                  enum:
                  - SelectMerge
                field:
                  type: string
                  title: Segment Field
                  description: A merge field to segment.
                  example: MMERGE6
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  - notcontain
                  - contains
                  title: Segment Operator
                  description: Whether the member's merge information is/is not a
                    value or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Second Choice
            - type: object
              title: Text or Number Merge Field Segment
              description: Segment by a given text or number merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: TextMerge
                  enum:
                  - TextMerge
                field:
                  type: string
                  title: Segment Field
                  description: A text or number merge field to segment.
                  example: MMERGE7
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ contains/does not contain, starts/ends with, or is greater/less\
                    \ than a value"
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text or number merge field with.
                  example: Freddie's Jokes
            - type: object
              title: Email Segment
              description: Segment by email address.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: EmailAddress
                  enum:
                  - EmailAddress
                field:
                  type: string
                  enum:
                  - merge0
                  - EMAIL
                  title: Segment Field
                  description: Segmenting based off of a subscriber's email address.
                  example: EMAIL
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  title: Segment Operator
                  description: "Whether the email address is/not exactly, contains/doesn't\
                    \ contain, starts/ends with a string."
                value:
                  type: string
                  title: Segment Value
                  description: The value to compare the email against.
                  example: urist.mcvankab@freddiesjokes.com
            - type: object
              title: Predicted Gender Segment
              description: Segment by predicted gender.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedGender
                  enum:
                  - PredictedGender
                field:
                  type: string
                  enum:
                  - predicted_gender
                  title: Segment Field
                  description: Segment by predicted gender.
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The predicted gender to segment.
                  example: female
            - type: object
              title: Predicted Age Segment
              description: Segment by predicted age.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedAge
                  enum:
                  - PredictedAge
                field:
                  type: string
                  enum:
                  - predicted_age_range
                  title: Segment Field
                  description: Segment by predicted age.
                op:
                  type: string
                  enum:
                  - is
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-44
                  - 45-54
                  - 55-64
                  - 65+
                  title: Segment Operator
                  description: The predicted age to segment.
                  example: female
            - type: object
              title: New Subscribers Prebuilt Segment
              description: Segment by when people subscribed.
              properties:
                condition_type:
                  type: string
                  x-value: NewSubscribers
                  enum:
                  - NewSubscribers
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  title: Segment Field
                  description: Segment by when people subscribed.
                op:
                  type: string
                  enum:
                  - date_within
                  title: Segment Operator
                  description: "Whe the event took place, namely within a time frame."
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
            x-discriminator:
              type: string
              propertyName: condition_type
          title: Segment Type
          type: array
      title: Segment Options
      type: object
    E_commerce_Cart_2:
      description: Information about a specific cart.
      properties:
        customer:
          $ref: '#/components/schemas/E_commerce_Customer_2'
        campaign_id:
          description: A string that uniquely identifies the campaign associated with
            a cart.
          example: 839488a60b
          title: Campaign ID
          type: string
        checkout_url:
          description: "The URL for the cart. This parameter is required for [Abandoned\
            \ Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
          title: Checkout URL
          type: string
        currency_code:
          description: The three-letter ISO 4217 code for the currency that the cart
            uses.
          title: Currency Code
          type: string
        order_total:
          description: The order total for the cart.
          title: Order Total
          type: number
        tax_total:
          description: The total tax for the cart.
          title: Tax Total
          type: number
        lines:
          description: An array of the cart's line items.
          items:
            $ref: '#/components/schemas/E_commerce_Cart_Line_Item_2'
          title: Cart Line Items
          type: array
      title: E-commerce Cart
      type: object
    Segment_Options_2:
      description: "An object representing all segmentation options. This object should\
        \ contain a `saved_segment_id` to use an existing segment, or you can create\
        \ a new segment by including both `match` and `conditions` options."
      properties:
        saved_segment_id:
          description: The id for an existing saved segment.
          title: Saved Segment ID
          type: integer
        match:
          description: Segment match type.
          enum:
          - any
          - all
          title: Match Type
          type: string
        conditions:
          description: "Segment match conditions. There are multiple possible types,\
            \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
          items:
            type: object
            x-oneOf:
            - type: object
              title: Aim Segment
              description: Segment by interaction with a specific campaign.
              properties:
                condition_type:
                  type: string
                  x-value: Aim
                  enum:
                  - Aim
                field:
                  type: string
                  enum:
                  - aim
                  title: Segment Field
                  description: Segment by interaction with a specific campaign.
                  example: aim
                op:
                  type: string
                  enum:
                  - open
                  - click
                  - sent
                  - noopen
                  - noclick
                  - nosent
                  title: Segment Operator
                  description: "The status of the member with regard to their campaign\
                    \ interaction. One of the following: opened, clicked, was sent,\
                    \ didn't open, didn't click, or was not sent."
                  example: open
                value:
                  type: string
                  title: Segment Data
                  description: Either the web id value for a specific campaign or
                    'any' to account for subscribers who have/have not interacted
                    with any campaigns.
                  example: any
            - type: object
              title: Automation Segment
              description: Segment by interaction with an Automation workflow.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Automation
                  enum:
                  - Automation
                field:
                  type: string
                  enum:
                  - automation
                  title: Segment Field
                  description: Segment by interaction with an Automation workflow.
                  example: automation
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the automation\
                    \ workflow. One of the following: has started the workflow, has\
                    \ completed the workflow, has not started the workflow, or has\
                    \ not completed the workflow."
                  example: started
                value:
                  type: string
                  title: Segment Data
                  description: The web id for the automation workflow to segment against.
                  example: "2135217"
            - type: object
              title: Poll Activity Segment
              description: Segment by poll activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: CampaignPoll
                  enum:
                  - CampaignPoll
                field:
                  type: string
                  enum:
                  - poll
                  title: Segment Field
                  description: Segment by poll activity.
                  example: poll
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members have/have not interacted with a specific poll
                    in a Mailchimp email.
                  example: member
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the poll.
                  example: 409
            - type: object
              title: Conversation Segment
              description: Segment by interaction with a campaign via Conversations.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Conversation
                  enum:
                  - Conversation
                field:
                  type: string
                  enum:
                  - conversation
                  title: Segment Field
                  description: Segment by interaction with a campaign via Conversations.
                  example: conversation
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: "The status of a member's interaction with a conversation.\
                    \ One of the following: has replied or has not replied."
                  example: member
                value:
                  type: string
                  title: Segment Data
                  description: The web id value for a specific campaign or 'any' to
                    account for subscribers who have/have not interacted with any
                    campaigns.
                  example: any
            - type: object
              title: Date Segment
              description: Segment by a specific date field.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Date
                  enum:
                  - Date
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  - info_changed
                  - ecomm_date
                  title: Segment Field
                  description: "The type of date field to segment on: The opt-in time\
                    \ for a signup, the date the subscriber was last updated, or the\
                    \ date of their last ecomm purchase."
                  example: timestamp_opt
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  - not
                  - blank
                  - blank_not
                  - within
                  - notwithin
                  title: Segment Operator
                  description: "When the event took place:  Before, after, is a specific\
                    \ date, is not a specific date, is blank, or is not blank."
                  example: greater
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
                  example: date
                extra:
                  type: string
                  title: Segment Extra Value
                  description: "When segmenting on 'date' or 'campaign', the date\
                    \ for the segment formatted as YYYY-MM-DD or the web id for the\
                    \ campaign."
                  example: 2015-01-30
            - type: object
              title: Email Client Segment
              description: Segment by use of a particular email client.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EmailClient
                  enum:
                  - EmailClient
                field:
                  type: string
                  enum:
                  - email_client
                  title: Segment Field
                  description: Segment by use of a particular email client.
                  example: email_client
                op:
                  type: string
                  enum:
                  - client_is
                  - client_not
                  title: Segment Operator
                  description: "The operation to determine whether we select clients\
                    \ that match the value, or clients that do not match the value."
                  example: client_is
                value:
                  type: string
                  title: Segment Data
                  description: The name of the email client.
                  example: Gmail
            - type: object
              title: Language Segment
              description: Segment by language.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Language
                  enum:
                  - Language
                field:
                  type: string
                  enum:
                  - language
                  title: Segment Field
                  description: Segmenting based off of a subscriber's language.
                  example: language
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Whether the member's language is or is not set to a
                    specific language.
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: A two-letter language identifier.
                  example: en
            - type: object
              title: Member Rating Segment
              description: Segment by member rating.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: MemberRating
                  enum:
                  - MemberRating
                field:
                  type: string
                  enum:
                  - rating
                  title: Segment Field
                  description: Segment by member rating.
                  example: rating
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have have a rating that is/not exactly
                    a given number or members who have a rating greater/less than
                    a given number.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The star rating number to segment against.
                  example: 4
            - type: object
              title: Signup Source Segment
              description: Segment by signup source.
              required:
              - field
              - condition_type
              - op
              properties:
                condition_type:
                  type: string
                  enum:
                  - SignupSource
                  x-value: SignupSource
                  title: Type
                field:
                  type: string
                  enum:
                  - source
                  title: Segment Field
                  example: source
                op:
                  type: string
                  enum:
                  - source_is
                  - source_not
                  title: Segment Operator
                  description: Whether the member's signup source was/was not a particular
                    value.
                  example: source_is
                value:
                  type: string
                  title: Segment Data
                  description: The signup source.
                  example: List Import
            - type: object
              title: Survey Monkey Segment
              description: Segment by interaction with a SurveyMonkey survey.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SurveyMonkey
                  enum:
                  - SurveyMonkey
                field:
                  type: string
                  enum:
                  - survey_monkey
                  title: Segment Field
                  description: Segment by interaction with a SurveyMonkey survey.
                  example: survey_monkey
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the survey.One\
                    \ of the following: has started the survey, has completed the\
                    \ survey, has not started the survey, or has not completed the\
                    \ survey."
                  example: started
                value:
                  type: string
                  title: Survey ID
                  description: The unique ID of the survey monkey survey.
                  example: "32179586"
            - type: object
              title: VIP Segment
              description: Segment by VIP status.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: VIP
                  enum:
                  - VIP
                field:
                  type: string
                  enum:
                  - gmonkey
                  title: Segment Field
                  description: Segment by VIP status.
                  example: gmonkey
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Whether the member is or is not marked as VIP.
                  example: member
            - type: object
              title: Interests Segment
              description: Segment by an interest group merge field.
              properties:
                condition_type:
                  type: string
                  x-value: Interests
                  enum:
                  - Interests
                field:
                  type: string
                  title: Segment Field
                  description: Segmenting based on interest group information. This
                    should start with 'interests-' followed by the grouping id. Ex.
                    'interests-123'.
                  example: interests-123
                op:
                  type: string
                  enum:
                  - interestcontains
                  - interestcontainsall
                  - interestnotcontains
                  title: Segment Operator
                  description: "Whether the member is a part of one, all, or none\
                    \ of the groups."
                  example: interestcontains
                value:
                  type: array
                  title: Segment Value
                  description: "An array containing strings, each representing a group\
                    \ id."
                  items:
                    type: string
                    example:
                    - "44401"
                    - "44405"
                    - "44409"
            - type: object
              title: Ecommerce Category Segment
              description: Segment by purchases in specific items or categories.
              properties:
                condition_type:
                  type: string
                  x-value: EcommCategory
                  enum:
                  - EcommCategory
                field:
                  type: string
                  enum:
                  - ecomm_cat
                  - ecomm_prod
                  title: Segment Field
                  description: Segment by purchases in specific items or categories.
                  example: ecomm_cat
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "A member who has purchased from a category/specific\
                    \ item that is/is not a specific name, where the category/item\
                    \ name contains/doesn't contain a specific phrase or string, or\
                    \ a category/item name that starts/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: The ecommerce category/item information.
                  example: Product
            - type: object
              title: Ecommerce Number Segment
              description: "Segment by average spent total, number of orders, total\
                \ number of products purchased, or average number of products per\
                \ order."
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EcommNumber
                  enum:
                  - EcommNumber
                field:
                  type: string
                  enum:
                  - ecomm_spent_avg
                  - ecomm_orders
                  - ecomm_prod_all
                  - ecomm_avg_ord
                  title: Segment Field
                  description: "Segment by average spent total, number of orders,\
                    \ total number of products purchased, or average number of products\
                    \ per order."
                  example: ecomm_orders
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than the segment value."
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than this amount."
                  example: 42
            - type: object
              title: Ecommerce Purchased Segment
              description: Segment by whether someone has purchased anything.
              properties:
                condition_type:
                  type: string
                  x-value: EcommPurchased
                  enum:
                  - EcommPurchased
                field:
                  type: string
                  enum:
                  - ecomm_purchased
                  title: Segment Field
                  description: Segment by whether someone has purchased anything.
                  example: ecomm_purchased
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who have have ('member') or have not ('notmember')
                    purchased.
                  example: member
            - type: object
              title: Ecommerce Spent Segment
              description: Segment by amount spent on a single order or across all
                orders.
              properties:
                condition_type:
                  type: string
                  x-value: EcommSpent
                  enum:
                  - EcommSpent
                field:
                  type: string
                  enum:
                  - ecomm_spent_one
                  - ecomm_spent_all
                  title: Segment Field
                  description: Segment by amount spent on a single order or across
                    all orders.
                  example: ecomm_spent_one
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have spent 'more' or 'less' than then specified
                    value.
                  example: greater
                value:
                  type: integer
                  title: Segment Data
                  description: The total amount a member spent.
                  example: 42
            - type: object
              title: Ecommerce Purchased Store Segment
              description: Segment by purchases from a specific store.
              properties:
                condition_type:
                  type: string
                  x-value: EcommStore
                  enum:
                  - EcommStore
                field:
                  type: string
                  enum:
                  - ecomm_store
                  title: Segment Field
                  description: Segment by purchases from a specific store.
                  example: ecomm_store
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who have or have not purchased from a specific
                    store.
                  example: is
                value:
                  type: string
                  title: Segment Operator
                  description: The store id to segment against.
                  example: "289"
            - type: object
              title: Goal Activity Segment
              description: Segment by Goal activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalActivity
                  enum:
                  - GoalActivity
                field:
                  type: string
                  enum:
                  - goal
                  title: Segment Field
                  description: Segment by Goal activity.
                  example: goal
                op:
                  type: string
                  enum:
                  - is
                  - goal_not
                  - contains
                  - goal_notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "Whether the website URL is/not exactly, contains/doesn't\
                    \ contain, starts with/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The URL to check Goal activity against.
            - type: object
              title: Goal Timestamp Segment
              description: Segment by most recent interaction with a website.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalTimestamp
                  enum:
                  - GoalTimestamp
                field:
                  type: string
                  enum:
                  - goal_last_visited
                  title: Segment Field
                  description: Segment by most recent interaction with a website.
                  example: goal_last_visited
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  title: Segment Operator
                  description: "Whether the website activity happened after, before,\
                    \ or at a given timestamp."
                  example: greater
                value:
                  type: string
                  title: Segment Value
                  description: The date to check Goal activity against.
                  example: 2015-07-20 19:45:21
            - type: object
              title: Similar Subscribers Segment Member Segment
              description: Segment by similar subscribers.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: FuzzySegment
                  enum:
                  - FuzzySegment
                field:
                  type: string
                  enum:
                  - fuzzy_segment
                  title: Segment Field
                  description: Segment by similar subscribers.
                  example: fuzzy_segment
                op:
                  type: string
                  enum:
                  - fuzzy_is
                  - fuzzy_not
                  title: Segment Operator
                  description: Members who are/are not apart of a 'similar subscribers'
                    segment.
                  example: fuzzy_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the 'similar subscribers' segment.
                  example: 48433
            - type: object
              title: Static Segment Member Segment
              description: Segment by a given static segment.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: StaticSegment
                  enum:
                  - StaticSegment
                field:
                  type: string
                  enum:
                  - static_segment
                  title: Segment Field
                  description: Segment by a given static segment.
                  example: static_segment
                op:
                  type: string
                  enum:
                  - static_is
                  - static_not
                  title: Segment Operator
                  description: Members who are/are not apart of a static segment.
                  example: static_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the static segment.
                  example: 48433
            - type: object
              title: Location-Based Segment
              description: Segment by a specific country or US state.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoCountryState
                  enum:
                  - IPGeoCountryState
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeocountry
                  - ipgeonotcountry
                  - ipgeostate
                  - ipgeonotstate
                  title: Segment Operator
                  description: Segment members who are within a specific country or
                    US state.
                  example: ipgeocountry
                value:
                  type: string
                  title: Segment Data
                  description: The two-letter country code or US state abbreviation.
                  example: US
            - type: object
              title: Geolocation Segment
              description: Segment by a specific geographic region.
              required:
              - field
              - op
              - value
              - addr
              - lat
              - lng
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoIn
                  enum:
                  - IPGeoIn
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoin
                  - ipgeonotin
                  title: Segment Operator
                  description: Segment members who are within a specific geographic
                    region.
                  example: ipgeoin
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 42
                addr:
                  type: string
                  title: Segment Location Address
                  description: The address of the target location.
                  example: "Atlanta, GA, USA"
                lat:
                  type: string
                  title: Segment Location Latitude
                  description: The latitude of the target location.
                  example: "33.7489954"
                lng:
                  type: string
                  title: Segment Location Longitude
                  description: The longitude of the target location.
                  example: "-84.3879824"
            - type: object
              title: US Zip Code Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoInZip
                  enum:
                  - IPGeoInZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoinzip
                  title: Segment Operator
                  description: Segment members who are within a specific US zip code.
                  example: ipgeoinzip
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 25
                extra:
                  type: integer
                  title: Extra Data
                  description: The zip code to segment against.
                  example: 30318
            - type: object
              title: Unknown Location-Based Segment
              description: Segment members whose location information is unknown.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoUnknown
                  enum:
                  - IPGeoUnknown
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeounknown
                  title: Segment Operator
                  description: Segment members for which location information is unknown.
                  example: ipgeounknown
            - type: object
              title: Zip Code Location-Based Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoZip
                  enum:
                  - IPGeoZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoiszip
                  - ipgeonotzip
                  title: Segment Operator
                  description: Segment members who are/are not within a specific US
                    zip code.
                  example: ipgeonotzip
                value:
                  type: integer
                  title: Segment Data
                  description: The 5-digit zip code.
                  example: 30318
            - type: object
              title: Social Profiles Age Segment
              description: Segment by age ranges in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialAge
                  enum:
                  - SocialAge
                field:
                  type: string
                  enum:
                  - social_age
                  title: Segment Field
                  description: Segment by age ranges in Social Profiles data.
                  example: social_age
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-54
                  - 55+
                  title: Segment Operator
                  description: The age range to segment.
                  example: 35-54
            - type: object
              title: Social Profiles Gender Segment
              description: Segment by listed gender in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialGender
                  enum:
                  - SocialGender
                field:
                  type: string
                  enum:
                  - social_gender
                  title: Segment Field
                  description: Segment by listed gender in Social Profiles data.
                  example: social_gender
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The Social Profiles gender to segment.
                  example: female
            - type: object
              title: Social Profiles Influence Segment
              description: Segment by influence rating in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialInfluence
                  enum:
                  - SocialInfluence
                field:
                  type: string
                  enum:
                  - social_influence
                  title: Segment Field
                  description: Segment by influence rating in Social Profiles data.
                  example: social_influence
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have a rating that is/not or greater/less
                    than the rating provided.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The Social Profiles influence rating to segment.
                  example: 2
            - type: object
              title: Social Profiles Social Network Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkMember
                  enum:
                  - SocialNetworkMember
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who are/not on a given social network.
                  example: member
                value:
                  type: string
                  enum:
                  - twitter
                  - facebook
                  - linkedin
                  - flickr
                  - foursquare
                  - lastfm
                  - myspace
                  - quora
                  - vimeo
                  - yelp
                  - youtube
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter
            - type: object
              title: Social Profiles Social Network Follow Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkFollow
                  enum:
                  - SocialNetworkFollow
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - follow
                  - notfollow
                  title: Segment Operator
                  description: Members who are/not following a linked account on a
                    given social network.
                  example: follow
                value:
                  type: string
                  enum:
                  - twitter_follow
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter_follow
            - type: object
              title: Address Merge Field Segment
              description: Segment by an address-type merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: AddressMerge
                  enum:
                  - AddressMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address-type merge field to segment.
                  example: MMERGE3
                op:
                  type: string
                  enum:
                  - contains
                  - notcontain
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's address merge field contains/does
                    not contain a value or is/is not blank.
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Atlanta
            - type: object
              title: Address/Zip Merge Field Segment
              description: Segment by an address-type merge field within a given distance.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: ZipMerge
                  enum:
                  - ZipMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address or zip-type merge field to segment.
                  example: MMERGE2
                op:
                  type: string
                  enum:
                  - geoin
                  title: Segment Operator
                  description: Whether the member's address merge field is within
                    a given distance from a city or zip.
                  example: geoin
                value:
                  type: string
                  title: Segment Value
                  description: The distance from the city/zip.
                  example: "25"
                extra:
                  type: string
                  title: Segment Extra
                  description: The city or the zip being used to segment against.
                  example: "30318"
            - type: object
              title: Birthday Merge Field Segment
              description: Segment by a contact's birthday.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: BirthdayMerge
                  enum:
                  - BirthdayMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE4
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's birthday merge information is/is
                    not a certain date or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against (mm/dd).
                  example: 01/30
            - type: object
              title: Date Merge Field Segment
              description: Segment by a given date merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: DateMerge
                  enum:
                  - DateMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE5
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - less
                  - blank
                  - blank_not
                  - greater
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ is greater/less than a value or is/is not blank."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against.
                  example: 01/30/2015
            - type: object
              title: Dropdown/Radio Merge Field Segment
              description: An individual segment condition
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: SelectMerge
                  enum:
                  - SelectMerge
                field:
                  type: string
                  title: Segment Field
                  description: A merge field to segment.
                  example: MMERGE6
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  - notcontain
                  - contains
                  title: Segment Operator
                  description: Whether the member's merge information is/is not a
                    value or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Second Choice
            - type: object
              title: Text or Number Merge Field Segment
              description: Segment by a given text or number merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: TextMerge
                  enum:
                  - TextMerge
                field:
                  type: string
                  title: Segment Field
                  description: A text or number merge field to segment.
                  example: MMERGE7
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ contains/does not contain, starts/ends with, or is greater/less\
                    \ than a value"
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text or number merge field with.
                  example: Freddie's Jokes
            - type: object
              title: Email Segment
              description: Segment by email address.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: EmailAddress
                  enum:
                  - EmailAddress
                field:
                  type: string
                  enum:
                  - merge0
                  - EMAIL
                  title: Segment Field
                  description: Segmenting based off of a subscriber's email address.
                  example: EMAIL
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  title: Segment Operator
                  description: "Whether the email address is/not exactly, contains/doesn't\
                    \ contain, starts/ends with a string."
                value:
                  type: string
                  title: Segment Value
                  description: The value to compare the email against.
                  example: urist.mcvankab@freddiesjokes.com
            - type: object
              title: Predicted Gender Segment
              description: Segment by predicted gender.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedGender
                  enum:
                  - PredictedGender
                field:
                  type: string
                  enum:
                  - predicted_gender
                  title: Segment Field
                  description: Segment by predicted gender.
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The predicted gender to segment.
                  example: female
            - type: object
              title: Predicted Age Segment
              description: Segment by predicted age.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedAge
                  enum:
                  - PredictedAge
                field:
                  type: string
                  enum:
                  - predicted_age_range
                  title: Segment Field
                  description: Segment by predicted age.
                op:
                  type: string
                  enum:
                  - is
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-44
                  - 45-54
                  - 55-64
                  - 65+
                  title: Segment Operator
                  description: The predicted age to segment.
                  example: female
            - type: object
              title: New Subscribers Prebuilt Segment
              description: Segment by when people subscribed.
              properties:
                condition_type:
                  type: string
                  x-value: NewSubscribers
                  enum:
                  - NewSubscribers
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  title: Segment Field
                  description: Segment by when people subscribed.
                op:
                  type: string
                  enum:
                  - date_within
                  title: Segment Operator
                  description: "Whe the event took place, namely within a time frame."
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
            x-discriminator:
              type: string
              propertyName: condition_type
          title: Segment Type
          type: array
      title: Segment Options
      type: object
    E_commerce_Cart_1:
      description: Information about a specific cart.
      properties:
        id:
          description: A unique identifier for the cart.
          title: Cart Foreign ID
          type: string
        customer:
          $ref: '#/components/schemas/E_commerce_Customer_1'
        campaign_id:
          description: A string that uniquely identifies the campaign for a cart.
          example: 839488a60b
          title: Campaign ID
          type: string
        checkout_url:
          description: "The URL for the cart. This parameter is required for [Abandoned\
            \ Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
          title: Checkout URL
          type: string
        currency_code:
          description: The three-letter ISO 4217 code for the currency that the cart
            uses.
          title: Currency Code
          type: string
        order_total:
          description: The order total for the cart.
          title: Order Total
          type: number
        tax_total:
          description: The total tax for the cart.
          title: Tax Total
          type: number
        lines:
          description: An array of the cart's line items.
          items:
            $ref: '#/components/schemas/E_commerce_Cart_Line_Item_1'
          title: Cart Line Items
          type: array
      required:
      - currency_code
      - customer
      - id
      - lines
      - order_total
      title: E-commerce Cart
      type: object
    Template_Content_1:
      description: Use this template to generate the HTML content for the campaign.
      properties:
        id:
          description: The id of the template to use.
          title: Template ID
          type: integer
        sections:
          description: "Content for the sections of the template. Each key should\
            \ be the unique [mc:edit area](https://mailchimp.com/help/create-editable-content-areas-with-mailchimps-template-language/)\
            \ name from the template."
          properties: {}
          title: Template Sections
          type: object
      required:
      - id
      title: Template Content
      type: object
    Visits_inner_1:
      example:
        date: 2018-04-25
        val: 49
      properties:
        date:
          example: 2018-04-25
          readOnly: true
          title: Date
          type: string
        val:
          example: 49
          readOnly: true
          title: Value
          type: integer
      type: object
    Automation_Workflow_1:
      description: A summary of an individual Automation workflow's settings and content.
      properties:
        recipients:
          $ref: '#/components/schemas/List_1'
        settings:
          $ref: '#/components/schemas/Automation_Campaign_Settings_1'
        trigger_settings:
          $ref: '#/components/schemas/Automation_Trigger_1'
      required:
      - recipients
      - trigger_settings
      title: Automation Workflow
      type: object
    Errors_inner:
      example:
        email_address: email_address
        field: field
        error_code: ERROR_CONTACT_EXISTS
        error: error
        field_message: field_message
      properties:
        email_address:
          description: The email address that could not be added or updated.
          title: Member Email address
          type: string
        error:
          description: The error message indicating why the email address could not
            be added or updated.
          title: Error message
          type: string
        error_code:
          description: A unique code that identifies this specifc error.
          enum:
          - ERROR_CONTACT_EXISTS
          - ERROR_GENERIC
          title: Error code
          type: string
        field:
          description: "If the error is field-related, information about which field\
            \ is at issue."
          title: Field
          type: string
        field_message:
          description: Message indicating how to resolve a field-related error.
          title: Field message
          type: string
      type: object
    E_commerce_Order_Line_Item_1:
      description: Information about a specific order line.
      properties:
        id:
          description: A unique identifier for the order line item.
          title: Order Line Item Foreign ID
          type: string
        product_id:
          description: A unique identifier for the product associated with the order
            line item.
          title: Order Line Item Product Foreign ID
          type: string
        product_variant_id:
          description: A unique identifier for the product variant associated with
            the order line item.
          title: Order Line Item Product Variant Foreign ID
          type: string
        quantity:
          description: The quantity of an order line item.
          title: Quantity
          type: integer
        price:
          description: The price of an order line item.
          title: Price
          type: number
        discount:
          description: The total discount amount applied to this line item.
          title: Discount
          type: number
      required:
      - id
      - price
      - product_id
      - product_variant_id
      - quantity
      title: E-commerce Order Line Item
      type: object
    E_commerce_Order_Line_Item_2:
      description: Information about a specific order line.
      properties:
        product_id:
          description: A unique identifier for the product associated with the order
            line item.
          title: Order Line Item Product Foreign ID
          type: string
        product_variant_id:
          description: A unique identifier for the product variant associated with
            the order line item.
          title: Order Line Item Product Variant Foreign ID
          type: string
        quantity:
          description: The quantity of an order line item.
          title: Quantity
          type: integer
        price:
          description: The price of an order line item.
          title: Price
          type: number
        discount:
          description: The total discount amount applied to this line item.
          title: Discount
          type: number
      title: E-commerce Order Line Item
      type: object
    Unique_Visits_inner:
      example:
        date: 2018-04-25
        val: 1
      properties:
        date:
          example: 2018-04-25
          readOnly: true
          title: Date
          type: string
        val:
          example: 1
          readOnly: true
          title: Value
          type: integer
      type: object
    Campaign_Report_Summary:
      description: A summary of opens and clicks for sent campaigns.
      example:
        subscriber_clicks: 9
        click_rate: 3.616076749251911
        opens: 5
        clicks: 7
        unique_opens: 5
        open_rate: 2.3021358869347655
      properties:
        opens:
          description: The total number of opens for a campaign.
          readOnly: true
          title: Automation Opens
          type: integer
        unique_opens:
          description: The number of unique opens.
          readOnly: true
          title: Unique Opens
          type: integer
        open_rate:
          description: The number of unique opens divided by the total number of successful
            deliveries.
          readOnly: true
          title: Open Rate
          type: number
        clicks:
          description: The total number of clicks for an campaign.
          readOnly: true
          title: Total Clicks
          type: integer
        subscriber_clicks:
          description: The number of unique clicks.
          readOnly: true
          title: Unique Subscriber Clicks
          type: integer
        click_rate:
          description: "The number of unique clicks, divided by the total number of\
            \ successful deliveries."
          readOnly: true
          title: Click Rate
          type: number
      title: Campaign Report Summary
      type: object
    Collection_of_Member_Activity_Events:
      description: The last 50 Goal events for a member on a specific list.
      example:
        email_id: email_id
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
        goals:
        - goal_id: 0
          data: data
          last_visited_at: 2000-01-23T04:56:07.000+00:00
          event: event
        - goal_id: 0
          data: data
          last_visited_at: 2000-01-23T04:56:07.000+00:00
          event: event
      properties:
        goals:
          description: The last 50 Goal events triggered by a member.
          items:
            $ref: '#/components/schemas/Goal'
          title: Goal Activity
          type: array
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        email_id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Collection of Member Activity Events
      type: object
    getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary_extended_at:
      properties:
        datetime:
          type: string
        timezone:
          type: string
      type: object
    E_Commerce_Report:
      description: E-Commerce stats for a campaign.
      example:
        total_spent: 8.762042012749001
        total_revenue: 9.018348186070783
        total_orders: 6
      properties:
        total_orders:
          description: The total orders for a campaign.
          readOnly: true
          title: Total Orders
          type: integer
        total_spent:
          description: The total spent for a campaign. Calculated as the sum of all
            order totals with no deductions.
          readOnly: true
          title: Total Spent
          type: number
        total_revenue:
          description: The total revenue for a campaign. Calculated as the sum of
            all order totals minus shipping and tax totals.
          readOnly: true
          title: Total Revenue
          type: number
      title: E-Commerce Report
      type: object
    Order_Lines:
      description: A collection of an order's line items.
      example:
        store_id: store_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        lines:
        - product_variant_title: product_variant_title
          quantity: 2
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          image_url: image_url
          price: 7.061401241503109
          product_id: product_id
          discount: 9.301444243932576
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        - product_variant_title: product_variant_title
          quantity: 2
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          image_url: image_url
          price: 7.061401241503109
          product_id: product_id
          discount: 9.301444243932576
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        order_id: order_id
        total_items: 0
      properties:
        store_id:
          description: The store id.
          title: Store ID
          type: string
        order_id:
          description: The order id.
          title: Order ID
          type: string
        lines:
          description: "An array of objects, each representing an order's line item."
          items:
            $ref: '#/components/schemas/E_commerce_Order_Line_Item'
          title: Ecommerce Order Lines
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Order Lines
      type: object
    Collection_of_Merge_Fields:
      description: "The [merge fields](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for an audience."
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
        - public: true
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          display_order: 6
          options:
            size: 5
            date_format: date_format
            choices:
            - First Choice
            - Second Choice
            - Third Choice
            default_country: 1
            phone_format: phone_format
          merge_id: 0
          default_value: default_value
          tag: tag
          type: text
          required: true
          help_text: help_text
        - public: true
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          display_order: 6
          options:
            size: 5
            date_format: date_format
            choices:
            - First Choice
            - Second Choice
            - Third Choice
            default_country: 1
            phone_format: phone_format
          merge_id: 0
          default_value: default_value
          tag: tag
          type: text
          required: true
          help_text: help_text
        total_items: 5
      properties:
        merge_fields:
          description: "An array of objects, each representing a merge field resource."
          items:
            $ref: '#/components/schemas/Merge_Field'
          title: Merge Fields
          type: array
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Collection of Merge Fields
      type: object
    Facebook_Likes:
      description: An object describing campaign engagement on Facebook.
      example:
        facebook_likes: 1
        unique_likes: 7
        recipient_likes: 6
      properties:
        recipient_likes:
          description: The number of recipients who liked the campaign on Facebook.
          title: Recipient Likes
          type: integer
        unique_likes:
          description: The number of unique likes.
          title: Unique Likes
          type: integer
        facebook_likes:
          description: The number of Facebook likes for the campaign.
          title: Facebook Likes
          type: integer
      title: Facebook Likes
      type: object
    Campaign_Defaults_1:
      description: "[Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/)\
        \ created for this list."
      properties:
        from_name:
          description: The default from name for campaigns sent to this list.
          title: Sender's Name
          type: string
        from_email:
          description: The default from email for campaigns sent to this list.
          title: Sender's Email Address
          type: string
        subject:
          description: The default subject line for campaigns sent to this list.
          title: Subject
          type: string
        language:
          description: The default language for this lists's forms.
          title: Language
          type: string
      required:
      - from_email
      - from_name
      - language
      - subject
      title: Campaign Defaults
      type: object
    To_New_Subscribers:
      description: Determines if the campaign qualifies to be resent to new subscribers.
      example:
        reason: reason
        is_eligible: true
      properties:
        is_eligible:
          description: Determines if the campaign qualifies to be resent to this segment.
          readOnly: true
          title: Is Eligible
          type: boolean
        reason:
          description: The reason the campaign is not eligible to be resent to this
            segment.
          readOnly: true
          title: Reason
          type: string
      title: To New Subscribers
      type: object
    Campaign_Report:
      description: Report details about a sent campaign.
      example:
        forwards:
          forwards_count: 7
          forwards_opens: 9
        share_report:
          share_url: share_url
          share_password: share_password
        preview_text: preview_text
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        rss_last_send: 2000-01-23T04:56:07.000+00:00
        list_name: list_name
        type: type
        list_is_active: true
        industry_stats:
          unopen_rate: 9.369310271410669
          click_rate: 5.025004791520295
          bounce_rate: 9.965781217890562
          unsub_rate: 6.683562403749608
          type: type
          abuse_rate: 8.762042012749001
          open_rate: 4.965218492984954
        list_stats:
          sub_rate: 9.018348186070783
          click_rate: 6.965117697638846
          unsub_rate: 6.438423552598547
          open_rate: 3.5571952270680973
        campaign_title: campaign_title
        facebook_likes:
          facebook_likes: 1
          unique_likes: 7
          recipient_likes: 6
        timeseries:
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: 2000-01-23T04:56:07.000+00:00
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: 2000-01-23T04:56:07.000+00:00
        emails_sent: 0
        ecommerce:
          total_spent: 4.678947989005849
          total_revenue: 7.260521264802104
          total_orders: 1
          currency_code: USD
        id: id
        bounces:
          hard_bounces: 5
          syntax_errors: 2
          soft_bounces: 5
        subject_line: subject_line
        ab_split:
          a:
            forwards: 5
            unsubs: 6
            opens: 3
            bounces: 1
            recipient_clicks: 6
            forwards_opens: 6
            last_open: last_open
            abuse_reports: 2
            unique_opens: 3
          b:
            forwards: 0
            unsubs: 7
            opens: 8
            bounces: 7
            recipient_clicks: 6
            forwards_opens: 4
            last_open: last_open
            abuse_reports: 0
            unique_opens: 7
        timewarp:
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: 2000-01-23T04:56:07.000+00:00
          gmt_offset: 3
          bounces: 4
          last_open: 2000-01-23T04:56:07.000+00:00
          unique_opens: 7
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: 2000-01-23T04:56:07.000+00:00
          gmt_offset: 3
          bounces: 4
          last_open: 2000-01-23T04:56:07.000+00:00
          unique_opens: 7
        unsubscribed: 1
        send_time: 2000-01-23T04:56:07.000+00:00
        opens:
          opens_total: 3
          last_open: 2000-01-23T04:56:07.000+00:00
          unique_opens: 2
          open_rate: 4.145608029883936
        clicks:
          clicks_total: 7
          unique_clicks: 1
          click_rate: 1.4894159098541704
          last_click: 2000-01-23T04:56:07.000+00:00
          unique_subscriber_clicks: 1
        abuse_reports: 6
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: delivering
      properties:
        id:
          description: A string that uniquely identifies this campaign.
          title: Campaign ID
          type: string
        campaign_title:
          description: The title of the campaign.
          readOnly: true
          title: Campaign Title
          type: string
        type:
          description: "The type of campaign (regular, plain-text, ab_split, rss,\
            \ automation, variate, or auto)."
          title: Campaign Type
          type: string
        list_id:
          description: The unique list id.
          readOnly: true
          title: List ID
          type: string
        list_is_active:
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
          title: List Status
          type: boolean
        list_name:
          description: The name of the list.
          readOnly: true
          title: List Name
          type: string
        subject_line:
          description: The subject line for the campaign.
          readOnly: true
          title: Campaign Subject Line
          type: string
        preview_text:
          description: The preview text for the campaign.
          title: Campaign Preview Text
          type: string
        emails_sent:
          description: The total number of emails sent for this campaign.
          title: Emails Sent
          type: integer
        abuse_reports:
          description: The number of abuse reports generated for this campaign.
          title: Abuse Reports
          type: integer
        unsubscribed:
          description: The total number of unsubscribed members for this campaign.
          readOnly: true
          title: Unsubscribe Count
          type: integer
        send_time:
          description: The date and time a campaign was sent in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Send Time
          type: string
        rss_last_send:
          description: "For RSS campaigns, the date and time of the last send in ISO\
            \ 8601 format."
          format: date-time
          readOnly: true
          title: RSS Last Send
          type: string
        bounces:
          $ref: '#/components/schemas/Bounces'
        forwards:
          $ref: '#/components/schemas/Forwards'
        opens:
          $ref: '#/components/schemas/Opens'
        clicks:
          $ref: '#/components/schemas/Clicks'
        facebook_likes:
          $ref: '#/components/schemas/Facebook_Likes'
        industry_stats:
          $ref: '#/components/schemas/Industry_Stats_1'
        list_stats:
          $ref: '#/components/schemas/List_Stats'
        ab_split:
          $ref: '#/components/schemas/A_B_Split_Stats'
        timewarp:
          description: "An hourly breakdown of sends, opens, and clicks if a campaign\
            \ is sent using timewarp."
          items:
            $ref: '#/components/schemas/Timewarp_Stats_inner'
          title: Timewarp Stats
          type: array
        timeseries:
          description: An hourly breakdown of the performance of the campaign over
            the first 24 hours.
          items:
            $ref: '#/components/schemas/Timeseries_inner'
          title: Timeseries
          type: array
        share_report:
          $ref: '#/components/schemas/Share_Report'
        ecommerce:
          $ref: '#/components/schemas/E_Commerce_Report_1'
        delivery_status:
          $ref: '#/components/schemas/Campaign_Delivery_Status'
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaign Report
      type: object
    Statistics:
      description: Stats for the list. Many of these are cached for at least five
        minutes.
      example:
        cleaned_count: 2
        unsubscribe_count_since_send: 9
        member_count_since_send: 7
        click_rate: 6.84685269835264
        cleaned_count_since_send: 3
        total_contacts: 5
        campaign_count: 2
        avg_unsub_rate: 1.2315135367772556
        last_sub_date: 2000-01-23T04:56:07.000+00:00
        unsubscribe_count: 5
        target_sub_rate: 1.0246457001441578
        campaign_last_sent: 2000-01-23T04:56:07.000+00:00
        avg_sub_rate: 7.386281948385884
        member_count: 1
        merge_field_count: 4
        open_rate: 1.4894159098541704
        last_unsub_date: 2000-01-23T04:56:07.000+00:00
      properties:
        member_count:
          description: The number of active members in the list.
          readOnly: true
          title: Member Count
          type: integer
        total_contacts:
          description: "The number of contacts in the list, including subscribed,\
            \ unsubscribed, pending, cleaned, deleted, transactional, and those that\
            \ need to be reconfirmed. Requires include_total_contacts query parameter\
            \ to be included."
          readOnly: true
          title: Total Contacts
          type: integer
        unsubscribe_count:
          description: The number of members who have unsubscribed from the list.
          readOnly: true
          title: Unsubscribe Count
          type: integer
        cleaned_count:
          description: The number of members cleaned from the list.
          readOnly: true
          title: Cleaned Count
          type: integer
        member_count_since_send:
          description: The number of active members in the list since the last campaign
            was sent.
          readOnly: true
          title: Member Count Since Send
          type: integer
        unsubscribe_count_since_send:
          description: The number of members who have unsubscribed since the last
            campaign was sent.
          readOnly: true
          title: Unsubscribe Count Since Send
          type: integer
        cleaned_count_since_send:
          description: The number of members cleaned from the list since the last
            campaign was sent.
          readOnly: true
          title: Cleaned Count Since Send
          type: integer
        campaign_count:
          description: The number of campaigns in any status that use this list.
          readOnly: true
          title: Campaign Count
          type: integer
        campaign_last_sent:
          description: The date and time the last campaign was sent to this list in
            ISO 8601 format. This is updated when a campaign is sent to 10 or more
            recipients.
          format: date-time
          readOnly: true
          title: Campaign Last Sent
          type: string
        merge_field_count:
          description: "The number of merge fields ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/))\
            \ for this list (doesn't include EMAIL)."
          readOnly: true
          title: Merge Field Count
          type: integer
        avg_sub_rate:
          description: The average number of subscriptions per month for the list
            (not returned if we haven't calculated it yet).
          readOnly: true
          title: Average Subscription Rate
          type: number
        avg_unsub_rate:
          description: The average number of unsubscriptions per month for the list
            (not returned if we haven't calculated it yet).
          readOnly: true
          title: Average Unsubscription Rate
          type: number
        target_sub_rate:
          description: The target number of subscriptions per month for the list to
            keep it growing (not returned if we haven't calculated it yet).
          readOnly: true
          title: Average Subscription Rate
          type: number
        open_rate:
          description: The average open rate (a percentage represented as a number
            between 0 and 100) per campaign for the list (not returned if we haven't
            calculated it yet).
          readOnly: true
          title: Open Rate
          type: number
        click_rate:
          description: The average click rate (a percentage represented as a number
            between 0 and 100) per campaign for the list (not returned if we haven't
            calculated it yet).
          readOnly: true
          title: Click Rate
          type: number
        last_sub_date:
          description: The date and time of the last time someone subscribed to this
            list in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Date of Last List Subscribe
          type: string
        last_unsub_date:
          description: The date and time of the last time someone unsubscribed from
            this list in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Date of Last List Unsubscribe
          type: string
      readOnly: true
      title: Statistics
      type: object
    Unsubscribes:
      description: A list of members who have unsubscribed from a specific campaign.
      example:
        unsubscribes:
        - null
        - null
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
        campaign_id: campaign_id
      properties:
        unsubscribes:
          description: "An array of objects, each representing a member who unsubscribed\
            \ from a campaign."
          items:
            $ref: '#/components/schemas/Unsubscribes'
          title: Lists
          type: array
        campaign_id:
          description: The campaign id.
          readOnly: true
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Unsubscribes
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience:
      description: Audience settings
      properties:
        type:
          description: Type of the audience
          enum:
          - Custom Audience
          - Lookalike Audience
          - Interest-based Audience
          type: string
        source_type:
          description: List or Facebook based audience
          enum:
          - facebook
          - list
          type: string
        email_source:
          $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience_email_source'
        include_source_in_target:
          description: To include list contacts as part of audience
          type: boolean
        lookalike_country_code:
          description: To find similar audience in given country
          type: string
        targeting_specs:
          $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience_targeting_specs'
      type: object
    getReportsIdEcommerceProductActivity_200_response_products_inner:
      example:
        total_purchased: 6.027456183070403
        image_url: image_url
        total_revenue: 0.8008281904610115
        recommendation_purchased: 5
        recommendation_total: 1
        title: title
        sku: sku
        currency_code: currency_code
      properties:
        title:
          type: string
        sku:
          type: string
        image_url:
          type: string
        total_revenue:
          type: number
        total_purchased:
          type: number
        currency_code:
          type: string
        recommendation_total:
          type: integer
        recommendation_purchased:
          type: integer
      type: object
    Template_Folder_1:
      description: A folder used to organize templates.
      properties:
        name:
          description: The name of the folder.
          title: Folder Name
          type: string
      required:
      - name
      title: Template Folder
      type: object
    Gallery_File:
      description: An individual file listed in the File Manager.
      example:
        full_size_url: https://openapi-generator.tech
        size: 1
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        width: 5
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        folder_id: 6
        type: image
        thumbnail_url: https://openapi-generator.tech
        created_by: created_by
        height: 5
      properties:
        id:
          description: The unique id of the file.
          readOnly: true
          title: File ID
          type: integer
        folder_id:
          description: The id of the folder.
          title: Folder ID
          type: integer
        type:
          description: The type of file in the File Manager.
          enum:
          - image
          - file
          readOnly: true
          title: File Type
          type: string
        name:
          description: The name of the file.
          title: File Name
          type: string
        full_size_url:
          description: The url of the full-size file.
          format: uri
          readOnly: true
          title: File URL
          type: string
        thumbnail_url:
          description: The url of the thumbnail preview.
          format: uri
          readOnly: true
          title: Thumbnail URL
          type: string
        size:
          description: The size of the file in bytes.
          readOnly: true
          title: File Size
          type: integer
        created_at:
          description: The date and time a file was added to the File Manager in ISO
            8601 format.
          format: date-time
          readOnly: true
          title: Created Date
          type: string
        created_by:
          description: The username of the profile that uploaded the file.
          readOnly: true
          title: Created By
          type: string
        width:
          description: The width of the image.
          readOnly: true
          title: Image Width
          type: integer
        height:
          description: The height of an image.
          readOnly: true
          title: Image Height
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Gallery File
      type: object
    Campaign_Settings:
      description: "Settings for the campaign including the email subject, from name,\
        \ and from email address."
      example:
        auto_footer: true
        subject_line: subject_line
        preview_text: preview_text
        authenticate: true
        title: title
        from_name: from_name
        auto_tweet: true
        auto_fb_post:
        - auto_fb_post
        - auto_fb_post
        fb_comments: true
        drag_and_drop: true
        reply_to: reply_to
        inline_css: true
        template_id: 2
      properties:
        subject_line:
          description: The subject line for the campaign.
          title: Campaign Subject Line
          type: string
        preview_text:
          description: The preview text for the campaign.
          title: Campaign Preview Text
          type: string
        title:
          description: The title of the campaign.
          title: Campaign Title
          type: string
        from_name:
          description: The 'from' name on the campaign (not an email address).
          title: From Name
          type: string
        reply_to:
          description: The reply-to email address for the campaign.
          title: Reply To Address
          type: string
        authenticate:
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the campaign. Defaults to `true`."
          title: Authentication
          type: boolean
        auto_footer:
          description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the campaign."
          title: Auto-Footer
          type: boolean
        inline_css:
          description: Automatically inline the CSS included with the campaign content.
          title: Inline CSS
          type: boolean
        auto_tweet:
          description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ page when the campaign is sent."
          title: Auto-Tweet
          type: boolean
        auto_fb_post:
          description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
            \ page ids to auto-post to."
          items:
            type: string
          title: Auto Post to Facebook
          type: array
        fb_comments:
          description: Allows Facebook comments on the campaign (also force-enables
            the Campaign Archive toolbar). Defaults to `true`.
          title: Facebook Comments
          type: boolean
        template_id:
          description: The id for the template used in this campaign.
          title: Template ID
          type: integer
        drag_and_drop:
          description: Whether the campaign uses the drag-and-drop editor.
          readOnly: true
          title: Drag And Drop Campaign
          type: boolean
      title: Campaign Settings
      type: object
    Batch_Delivery:
      description: "Choose whether the campaign should use [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/).\
        \ Cannot be set to `true` for campaigns using [Timewarp](https://mailchimp.com/help/use-timewarp/)."
      properties:
        batch_delay:
          description: "The delay, in minutes, between batches."
          title: Batch Delay
          type: integer
        batch_count:
          description: The number of batches for the campaign send.
          title: Batch Count
          type: integer
      required:
      - batch_count
      - batch_delay
      title: Batch Delivery
      type: object
    E_commerce_Customer_3:
      description: Information about a specific customer.
      properties:
        id:
          description: A unique identifier for the customer. Limited to 50 characters.
          maxLength: 50
          title: Customer Foreign ID
          type: string
        email_address:
          description: The customer's email address.
          title: Email Address
          type: string
        opt_in_status:
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
          title: Opt-in Status
          type: boolean
        company:
          description: The customer's company.
          title: Company
          type: string
        first_name:
          description: The customer's first name.
          title: First Name
          type: string
        last_name:
          description: The customer's last name.
          title: Last Name
          type: string
        address:
          $ref: '#/components/schemas/Address'
      required:
      - email_address
      - id
      - opt_in_status
      title: E-commerce Customer
      type: object
    getReportingFacebookAdsId_200_response:
      allOf:
      - properties:
          id:
            description: Unique ID of an Outreach.
            title: ID
            type: string
          web_id:
            description: "The ID used in the Mailchimp web application. For example,\
              \ for a `regular` outreach, you can view this campaign in your Mailchimp\
              \ account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
            title: Web ID
            type: integer
          name:
            description: Title or name of an Outreach.
            title: Name
            type: string
          type:
            description: The type of outreach this object is.
            enum:
            - regular
            - email-touchpoint
            - plaintext
            - rss
            - reconfirm
            - variate
            - absplit
            - automation
            - facebook
            - google
            - autoresponder
            - transactional
            - page
            - website
            - social_post
            - survey
            - customer_journey
            title: Outreach Type
            type: string
          status:
            description: The status of this outreach.
            enum:
            - save
            - paused
            - schedule
            - scheduled
            - sending
            - sent
            - canceled
            - canceling
            - active
            - disconnected
            - somepaused
            - draft
            - completed
            - partialRejected
            - pending
            - rejected
            - published
            - unpublished
            title: Outreach Status
            type: string
          show_report:
            description: "Outreach report availability. Note: This property is hotly\
              \ debated in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371)\
              \ for more context."
            title: Show Report
            type: boolean
          create_time:
            description: The date and time the outreach was created in ISO 8601 format.
            format: date-time
            title: Create Time
            type: string
          start_time:
            description: The date and time the outreach was started in ISO 8601 format.
            format: date-time
            title: Start Time
            type: string
          updated_at:
            description: The date and time the outreach was last updated in ISO 8601
              format.
            format: date-time
            title: Updated At
            type: string
          canceled_at:
            description: The date and time the outreach was canceled in ISO 8601 format.
            format: date-time
            title: Canceled At
            type: string
          published_time:
            description: The date and time the outreach was (or will be) published
              in ISO 8601 format.
            format: date-time
            title: Publish Time
            type: string
          has_segment:
            description: If this outreach targets a segment of your audience.
            title: Has Segment
            type: boolean
          report_summary:
            $ref: '#/components/schemas/Report_Summary'
          recipients:
            $ref: '#/components/schemas/Recipients'
          thumbnail:
            description: The URL of the thumbnail for this outreach.
            title: Thumbnail
            type: string
        type: object
      - properties:
          email_source_name:
            title: "Ad: Email Source Name"
            type: string
          paused_at:
            description: The date and time the ad was paused in ISO 8601 format.
            format: date-time
            title: "Ad: Paused At"
            type: string
          end_time:
            description: The date and time the ad was ended in ISO 8601 format.
            format: date-time
            title: "Ad: End Time"
            type: string
          needs_attention:
            description: If the ad has a problem and needs attention.
            title: "Ad: Needs Attention"
            type: boolean
          was_canceled_by_facebook:
            title: "Ad: Was Canceled By Facebook"
            type: boolean
        type: object
      - properties:
          channel:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_channel'
          audience:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience'
          budget:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_budget'
          report_summary:
            $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary'
          audience_activity:
            $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_audience_activity'
        type: object
      - properties:
          _links:
            description: A list of link types and descriptions for the API schema
              documents.
            items:
              $ref: '#/components/schemas/Resource_Link'
            readOnly: true
            title: Links
            type: array
        type: object
    E_commerce_Customer_4:
      description: Information about a specific customer. Orders for existing customers
        should include only the `id` parameter in the `customer` object body.
      properties:
        id:
          description: A unique identifier for the customer. Limited to 50 characters.
          maxLength: 50
          title: Customer Foreign ID
          type: string
        email_address:
          description: The customer's email address.
          title: Email Address
          type: string
        opt_in_status:
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
          title: Opt-in Status
          type: boolean
        company:
          description: The customer's company.
          title: Company
          type: string
        first_name:
          description: The customer's first name.
          title: First Name
          type: string
        last_name:
          description: The customer's last name.
          title: Last Name
          type: string
        address:
          $ref: '#/components/schemas/Address'
      required:
      - email_address
      - id
      - opt_in_status
      title: E-commerce Customer
      type: object
    getReportingFacebookAds_200_response_facebook_ads_inner:
      allOf:
      - properties:
          id:
            description: Unique ID of an Outreach.
            title: ID
            type: string
          web_id:
            description: "The ID used in the Mailchimp web application. For example,\
              \ for a `regular` outreach, you can view this campaign in your Mailchimp\
              \ account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
            title: Web ID
            type: integer
          name:
            description: Title or name of an Outreach.
            title: Name
            type: string
          type:
            description: The type of outreach this object is.
            enum:
            - regular
            - email-touchpoint
            - plaintext
            - rss
            - reconfirm
            - variate
            - absplit
            - automation
            - facebook
            - google
            - autoresponder
            - transactional
            - page
            - website
            - social_post
            - survey
            - customer_journey
            title: Outreach Type
            type: string
          status:
            description: The status of this outreach.
            enum:
            - save
            - paused
            - schedule
            - scheduled
            - sending
            - sent
            - canceled
            - canceling
            - active
            - disconnected
            - somepaused
            - draft
            - completed
            - partialRejected
            - pending
            - rejected
            - published
            - unpublished
            title: Outreach Status
            type: string
          show_report:
            description: "Outreach report availability. Note: This property is hotly\
              \ debated in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371)\
              \ for more context."
            title: Show Report
            type: boolean
          create_time:
            description: The date and time the outreach was created in ISO 8601 format.
            format: date-time
            title: Create Time
            type: string
          start_time:
            description: The date and time the outreach was started in ISO 8601 format.
            format: date-time
            title: Start Time
            type: string
          updated_at:
            description: The date and time the outreach was last updated in ISO 8601
              format.
            format: date-time
            title: Updated At
            type: string
          canceled_at:
            description: The date and time the outreach was canceled in ISO 8601 format.
            format: date-time
            title: Canceled At
            type: string
          published_time:
            description: The date and time the outreach was (or will be) published
              in ISO 8601 format.
            format: date-time
            title: Publish Time
            type: string
          has_segment:
            description: If this outreach targets a segment of your audience.
            title: Has Segment
            type: boolean
          report_summary:
            $ref: '#/components/schemas/Report_Summary'
          recipients:
            $ref: '#/components/schemas/Recipients'
          thumbnail:
            description: The URL of the thumbnail for this outreach.
            title: Thumbnail
            type: string
        type: object
      - properties:
          email_source_name:
            title: "Ad: Email Source Name"
            type: string
          paused_at:
            description: The date and time the ad was paused in ISO 8601 format.
            format: date-time
            title: "Ad: Paused At"
            type: string
          end_time:
            description: The date and time the ad was ended in ISO 8601 format.
            format: date-time
            title: "Ad: End Time"
            type: string
          needs_attention:
            description: If the ad has a problem and needs attention.
            title: "Ad: Needs Attention"
            type: boolean
          was_canceled_by_facebook:
            title: "Ad: Was Canceled By Facebook"
            type: boolean
        type: object
      - properties:
          channel:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_channel'
          audience:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience'
          budget:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_budget'
          report_summary:
            $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary'
          audience_activity:
            $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_audience_activity'
        type: object
      - properties:
          _links:
            description: A list of link types and descriptions for the API schema
              documents.
            items:
              $ref: '#/components/schemas/Resource_Link'
            readOnly: true
            title: Links
            type: array
        type: object
      type: object
    Resource_Link:
      description: This object represents a link from the resource where it is found
        to another resource or action that may be performed.
      example:
        schema: schema
        targetSchema: targetSchema
        method: GET
        rel: rel
        href: href
      properties:
        rel:
          description: "As with an HTML 'rel' attribute, this describes the type of\
            \ link."
          readOnly: true
          title: Rel
          type: string
        href:
          description: This property contains a fully-qualified URL that can be called
            to retrieve the linked resource or perform the linked action.
          readOnly: true
          title: Href
          type: string
        method:
          description: The HTTP method that should be used when accessing the URL
            defined in 'href'.
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          - OPTIONS
          - HEAD
          readOnly: true
          title: Method
          type: string
        targetSchema:
          description: "For GETs, this is a URL representing the schema that the response\
            \ should conform to."
          readOnly: true
          title: Target Schema
          type: string
        schema:
          description: "For HTTP methods that can receive bodies (POST and PUT), this\
            \ is a URL representing the schema that the body should conform to."
          readOnly: true
          title: Schema
          type: string
      title: Resource Link
      type: object
    Clicks:
      description: An object describing the click activity for the campaign.
      example:
        clicks_total: 7
        unique_clicks: 1
        click_rate: 1.4894159098541704
        last_click: 2000-01-23T04:56:07.000+00:00
        unique_subscriber_clicks: 1
      properties:
        clicks_total:
          description: The total number of clicks for the campaign.
          title: Total Clicks
          type: integer
        unique_clicks:
          description: The total number of unique clicks for links across a campaign.
          title: Unique Clicks
          type: integer
        unique_subscriber_clicks:
          description: The total number of subscribers who clicked on a campaign.
          title: Unique Subscriber Clicks
          type: integer
        click_rate:
          description: The number of unique clicks divided by the total number of
            successful deliveries.
          title: Click Rate
          type: number
        last_click:
          description: The date and time of the last recorded click for the campaign
            in ISO 8601 format.
          format: date-time
          title: Last Click
          type: string
      title: Clicks
      type: object
    E_commerce_Customer_1:
      description: Information about a specific customer. For existing customers include
        only the `id` parameter in the `customer` object body.
      properties:
        id:
          description: A unique identifier for the customer. Limited to 50 characters.
          maxLength: 50
          title: Customer Foreign ID
          type: string
        email_address:
          description: The customer's email address.
          title: Email Address
          type: string
        opt_in_status:
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
          title: Opt-in Status
          type: boolean
        company:
          description: The customer's company.
          title: Company
          type: string
        first_name:
          description: The customer's first name.
          title: First Name
          type: string
        last_name:
          description: The customer's last name.
          title: Last Name
          type: string
        address:
          $ref: '#/components/schemas/Address'
      required:
      - id
      title: E-commerce Customer
      type: object
    E_commerce_Customer_2:
      description: Information about a specific customer. Orders for existing customers
        should include only the `id` parameter in the `customer` object body.
      properties:
        opt_in_status:
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
          title: Opt-in Status
          type: boolean
        company:
          description: The customer's company.
          title: Company
          type: string
        first_name:
          description: The customer's first name.
          title: First Name
          type: string
        last_name:
          description: The customer's last name.
          title: Last Name
          type: string
        address:
          $ref: '#/components/schemas/Address'
      title: E-commerce Customer
      type: object
    getReportingFacebookAds_200_response_facebook_ads_inner_allOf_audience_activity_clicks_inner:
      properties:
        date:
          type: string
        clicks:
          type: integer
      type: object
    getReportingFacebookAds_200_response:
      description: A collection of Facebook ads.
      example:
        facebook_ads:
        - null
        - null
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
      properties:
        facebook_ads:
          items:
            $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner'
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    Automation_Delay:
      description: The delay settings for an Automation email.
      example:
        amount: 6
        full_description: 1 day after subscribers purchase anything from your store
        action_description: subscribers purchase anything from your store
        action: previous_campaign_sent
        type: now
        direction: before
      properties:
        amount:
          description: The delay amount for an Automation email.
          readOnly: true
          title: Delay Amount
          type: integer
        type:
          description: The type of delay for an Automation email.
          enum:
          - now
          - day
          - hour
          - week
          title: Delay Type
          type: string
        direction:
          description: Whether the delay settings describe before or after the delay
            action of an Automation email.
          enum:
          - before
          - after
          title: Delay Direction
          type: string
        action:
          description: The action that triggers the delay of an Automation email.
          enum:
          - previous_campaign_sent
          - previous_campaign_opened
          - previous_campaign_not_opened
          - previous_campaign_clicked_any
          - previous_campaign_not_clicked_any
          - previous_campaign_specific_clicked
          - ecomm_bought_any
          - ecomm_bought_product
          - ecomm_bought_category
          - ecomm_not_bought_any
          - ecomm_abandoned_cart
          - campaign_sent
          - opened_email
          - not_opened_email
          - clicked_email
          - not_clicked_email
          - campaign_specific_clicked
          - manual
          - signup
          - merge_changed
          - group_add
          - group_remove
          - mandrill_sent
          - mandrill_opened
          - mandrill_clicked
          - mandrill_any
          - api
          - goal
          - annual
          - birthday
          - date
          - date_added
          - tag_add
          title: Delay Action
          type: string
        action_description:
          description: The user-friendly description of the action that triggers an
            Automation email.
          example: subscribers purchase anything from your store
          readOnly: true
          title: Delay Action Description
          type: string
        full_description:
          description: The user-friendly description of the delay and trigger action
            settings for an Automation email.
          example: 1 day after subscribers purchase anything from your store
          readOnly: true
          title: Full Delay Description
          type: string
      title: Automation Delay
      type: object
    Email_Clients:
      description: The top email clients based on user-agent strings.
      example:
        clients:
        - members: 0
          client: client
        - members: 0
          client: client
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
      properties:
        clients:
          description: An array of top email clients.
          items:
            $ref: '#/components/schemas/Email_Client'
          title: Email Clients
          type: array
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Email Clients
      type: object
    Click_Detail_Member:
      description: A subscriber who clicked a specific URL in a specific campaign.
      example:
        email_id: email_id
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: "{}"
        clicks: 0
        contact_status: contact_status
        url_id: url_id
        vip: true
        list_is_active: true
        campaign_id: campaign_id
      properties:
        email_id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        email_address:
          description: Email address for a subscriber.
          readOnly: true
          title: Email Address
          type: string
        merge_fields:
          additionalProperties:
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
            type: object
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
          title: Merge Fields
          type: object
        vip:
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
          title: VIP
          type: boolean
        clicks:
          description: The total number of times the subscriber clicked on the link.
          readOnly: true
          title: Total Clicks
          type: integer
        campaign_id:
          description: The campaign id.
          readOnly: true
          title: Campaign ID
          type: string
        url_id:
          description: The id for the tracked URL in the campaign.
          readOnly: true
          title: URL ID
          type: string
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        list_is_active:
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
          title: List Status
          type: boolean
        contact_status:
          description: "The status of the member, namely if they are subscribed, unsubscribed,\
            \ deleted, non-subscribed, transactional, pending, or need reconfirmation."
          readOnly: true
          title: Member Status
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Click Detail Member
      type: object
    Options_inner:
      example:
        count: 6
        label: label
        id: id
      properties:
        label:
          description: The label for this survey question option.
          title: Option Label
          type: string
        id:
          description: The ID for this survey question option.
          title: Option ID
          type: string
        count:
          description: The count of responses that selected this survey question option.
          title: Response Count
          type: integer
      type: object
    E_commerce_Cart_Line_Item:
      description: Information about a specific cart line item.
      example:
        product_variant_title: product_variant_title
        quantity: 1
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        price: 5.962133916683182
        product_id: product_id
        id: id
        product_variant_id: product_variant_id
        product_title: product_title
      properties:
        id:
          description: A unique identifier for the cart line item.
          readOnly: true
          title: Cart Line Item Foreign ID
          type: string
        product_id:
          description: A unique identifier for the product associated with the cart
            line item.
          title: Cart Line Product Foreign ID
          type: string
        product_title:
          description: The name of the product for the cart line item.
          readOnly: true
          title: Cart Line Product Title
          type: string
        product_variant_id:
          description: A unique identifier for the product variant associated with
            the cart line item.
          title: Cart Line Product Variant Foreign ID
          type: string
        product_variant_title:
          description: The name of the product variant for the cart line item.
          readOnly: true
          title: Cart Line Product Variant Title
          type: string
        quantity:
          description: The quantity of a cart line item.
          title: Quantity
          type: integer
        price:
          description: The price of a cart line item.
          title: Price
          type: number
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Cart Line Item
      type: object
    Signup_Form_1:
      description: List signup form.
      properties:
        header:
          $ref: '#/components/schemas/Signup_form_header_options'
        contents:
          description: The signup form body content.
          items:
            $ref: '#/components/schemas/Collection_of_Content_for_List_Signup_Forms'
          title: Signup form body content
          type: array
        styles:
          description: "An array of objects, each representing an element style for\
            \ the signup form."
          items:
            $ref: '#/components/schemas/Collection_of_Element_style_for_List_Signup_Forms'
          title: Signup Form element style
          type: array
      title: Signup Form
      type: object
    Account_Exports_inner:
      description: An account export.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        size_in_bytes: 6
        download_url: download_url
        started: 2000-01-23T04:56:07.000+00:00
        finished: 2000-01-23T04:56:07.000+00:00
        export_id: 0
      properties:
        export_id:
          description: The ID for the export.
          title: Export ID
          type: integer
        started:
          description: Start time for the export.
          format: date-time
          title: Start Time
          type: string
        finished:
          description: "If finished, the finish time for the export."
          format: date-time
          title: Finish Time
          type: string
        size_in_bytes:
          description: The size of the uncompressed export in bytes.
          title: Export Size
          type: integer
        download_url:
          description: "If the export is finished, the download URL for an export.\
            \ URLs are only valid for 90 days after the export completes."
          title: Download URL
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    List_Members:
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      example:
        email_type: email_type
        list_id: list_id
        timestamp_opt: 2000-01-23T04:56:07.000+00:00
        last_note:
          note_id: 9
          note: note
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by: created_by
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: "{}"
        timestamp_signup: 2000-01-23T04:56:07.000+00:00
        ip_signup: ip_signup
        member_rating: 1
        language: language
        tags:
        - name: name
          id: 2
        - name: name
          id: 2
        unique_email_id: unique_email_id
        email_address: email_address
        email_client: email_client
        stats:
          avg_click_rate: 6.027456183070403
          avg_open_rate: 0.8008281904610115
        tags_count: 3
        ip_opt: ip_opt
        location:
          country_code: country_code
          dstoff: 7
          timezone: timezone
          latitude: 5.962133916683182
          gmtoff: 2
          longitude: 5.637376656633329
        id: id
        interests:
          key: true
        vip: true
        status: subscribed
        last_changed: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email ID
          type: string
        email_address:
          description: Email address for a subscriber.
          title: Email Address
          type: string
        unique_email_id:
          description: An identifier for the address across all of Mailchimp.
          readOnly: true
          title: Unique Email ID
          type: string
        email_type:
          description: Type of email this member asked to get ('html' or 'text').
          title: Email Type
          type: string
        status:
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
          title: Status
          type: string
        merge_fields:
          additionalProperties:
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
            type: object
          description: An individual merge var and value for a member.
          title: Member Merge Var
          type: object
        interests:
          additionalProperties:
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
            title: Interest Value
            type: boolean
          description: The key of this object's properties is the ID of the interest
            in question.
          title: Subscriber Interests
          type: object
        stats:
          $ref: '#/components/schemas/Subscriber_Stats'
        ip_signup:
          description: IP address the subscriber signed up from.
          readOnly: true
          title: Signup IP
          type: string
        timestamp_signup:
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
          readOnly: true
          title: Signup Timestamp
          type: string
        ip_opt:
          description: The IP address the subscriber used to confirm their opt-in
            status.
          readOnly: true
          title: Opt-in IP
          type: string
        timestamp_opt:
          description: The date and time the subscriber confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Opt-in Timestamp
          type: string
        member_rating:
          description: "Star rating for this member, between 1 and 5."
          readOnly: true
          title: Member Rating
          type: integer
        last_changed:
          description: The date and time the member's info was last changed in ISO
            8601 format.
          format: date-time
          readOnly: true
          title: Last Changed Date
          type: string
        language:
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
          title: Language
          type: string
        vip:
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          title: VIP
          type: boolean
        email_client:
          description: The list member's email client.
          readOnly: true
          title: Email Client
          type: string
        location:
          $ref: '#/components/schemas/Location_1'
        last_note:
          $ref: '#/components/schemas/Notes'
        tags_count:
          description: The number of tags applied to this member.
          readOnly: true
          title: Tags Count
          type: integer
        tags:
          description: The tags applied to this member.
          items:
            $ref: '#/components/schemas/Tags_inner'
          title: Tags
          type: array
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: List Members
      type: object
    List:
      description: List settings for the Automation.
      example:
        segment_opts:
          match: any
          saved_segment_id: 6
          conditions:
          - "{}"
          - "{}"
        store_id: 1a2df69xxx
        list_id: list_id
        list_name: list_name
        list_is_active: true
      properties:
        list_id:
          description: The unique list id.
          title: List ID
          type: string
        list_is_active:
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
          title: List Status
          type: boolean
        list_name:
          description: List Name.
          title: List Name
          type: string
        segment_opts:
          $ref: '#/components/schemas/Segment_Options'
        store_id:
          description: The id of the store.
          example: 1a2df69xxx
          title: Store ID
          type: string
      title: List
      type: object
    getAutomationsIdEmailsIdQueue_200_response:
      description: An automation workflow
      example:
        email_id: email_id
        workflow_id: workflow_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
        queue:
        - email_id: email_id
          workflow_id: workflow_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          next_send: 2000-01-23T04:56:07.000+00:00
          id: id
        - email_id: email_id
          workflow_id: workflow_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          next_send: 2000-01-23T04:56:07.000+00:00
          id: id
      properties:
        workflow_id:
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
          title: Workflow ID
          type: string
        email_id:
          description: A string that uniquely identifies an email in an Automation
            workflow.
          readOnly: true
          title: Automation Email ID
          type: string
        queue:
          description: "An array of objects, each representing a subscriber queue\
            \ for an email in an Automation workflow."
          items:
            $ref: '#/components/schemas/Subscriber_in_Automation_Queue'
          readOnly: true
          title: Trigger
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    To_Non_Clickers:
      description: Determines if the campaign qualifies to be resent to non-clickers.
      example:
        reason: reason
        is_eligible: true
      properties:
        is_eligible:
          description: Determines if the campaign qualifies to be resent to this segment.
          readOnly: true
          title: Is Eligible
          type: boolean
        reason:
          description: The reason the campaign is not eligible to be resent to this
            segment.
          readOnly: true
          title: Reason
          type: string
      title: To Non-Clickers
      type: object
    List_Members_2:
      description: "Manage members of a specific Mailchimp list, including currently\
        \ subscribed, unsubscribed, and bounced members."
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        members:
        - null
        - null
        total_items: 0
      properties:
        members:
          description: "An array of objects, each representing a specific list member."
          items:
            $ref: '#/components/schemas/List_Members_2'
          title: Members
          type: array
        list_id:
          description: The list id.
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: List Members
      type: object
    List_Members_1:
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      example:
        email_type: email_type
        list_id: list_id
        timestamp_opt: 2000-01-23T04:56:07.000+00:00
        last_note:
          note_id: 9
          note: note
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by: created_by
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: "{}"
        timestamp_signup: 2000-01-23T04:56:07.000+00:00
        ip_signup: ip_signup
        member_rating: 0
        language: language
        unique_email_id: unique_email_id
        email_address: email_address
        email_client: email_client
        stats:
          avg_click_rate: 6.027456183070403
          avg_open_rate: 0.8008281904610115
        ip_opt: ip_opt
        location:
          country_code: country_code
          dstoff: 7
          timezone: timezone
          latitude: 5.962133916683182
          gmtoff: 2
          longitude: 5.637376656633329
        id: id
        interests:
          key: true
        vip: true
        status: subscribed
        last_changed: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email ID
          type: string
        email_address:
          description: Email address for a subscriber.
          readOnly: true
          title: Email Address
          type: string
        unique_email_id:
          description: An identifier for the address across all of Mailchimp.
          readOnly: true
          title: Unique Email ID
          type: string
        email_type:
          description: Type of email this member asked to get ('html' or 'text').
          title: Email Type
          type: string
        status:
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
          title: Status
          type: string
        merge_fields:
          additionalProperties:
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
            type: object
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
          title: Merge Fields
          type: object
        interests:
          additionalProperties:
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
            title: Interest Value
            type: boolean
          description: The key of this object's properties is the ID of the interest
            in question.
          title: Subscriber Interests
          type: object
        stats:
          $ref: '#/components/schemas/Subscriber_Stats'
        ip_signup:
          description: IP address the subscriber signed up from.
          readOnly: true
          title: Signup IP
          type: string
        timestamp_signup:
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
          readOnly: true
          title: Signup Timestamp
          type: string
        ip_opt:
          description: The IP address the subscriber used to confirm their opt-in
            status.
          readOnly: true
          title: Opt-in IP
          type: string
        timestamp_opt:
          description: The date and time the subscriber confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Opt-in Timestamp
          type: string
        member_rating:
          description: "Star rating for this member, between 1 and 5."
          readOnly: true
          title: Member Rating
          type: integer
        last_changed:
          description: The date and time the member's info was last changed in ISO
            8601 format.
          format: date-time
          readOnly: true
          title: Last Changed Date
          type: string
        language:
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
          title: Language
          type: string
        vip:
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          title: VIP
          type: boolean
        email_client:
          description: The list member's email client.
          readOnly: true
          title: Email Client
          type: string
        location:
          $ref: '#/components/schemas/Location_1'
        last_note:
          $ref: '#/components/schemas/Notes'
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: List Members
      type: object
    Industry_Stats_1:
      description: The average campaign statistics for your industry.
      example:
        unopen_rate: 9.369310271410669
        click_rate: 5.025004791520295
        bounce_rate: 9.965781217890562
        unsub_rate: 6.683562403749608
        type: type
        abuse_rate: 8.762042012749001
        open_rate: 4.965218492984954
      properties:
        type:
          description: "The type of business industry associated with your account.\
            \ For example: retail, education, etc."
          title: Industry Type
          type: string
        open_rate:
          description: The industry open rate.
          title: Open Rate
          type: number
        click_rate:
          description: The industry click rate.
          title: Click Rate
          type: number
        bounce_rate:
          description: The industry bounce rate.
          title: Bounce Rate
          type: number
        unopen_rate:
          description: The industry unopened rate.
          title: Unopened Rate
          type: number
        unsub_rate:
          description: The industry unsubscribe rate.
          title: Unsubscribe Rate
          type: number
        abuse_rate:
          description: The industry abuse rate.
          title: Abuse Rate
          type: number
      title: Industry Stats
      type: object
    Email_Activity:
      description: A list of member's subscriber activity in a specific campaign.
      example:
        emails:
        - null
        - null
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
        campaign_id: campaign_id
      properties:
        emails:
          description: An array of members that were sent the campaign.
          items:
            $ref: '#/components/schemas/Email_Activity'
          title: Sent To
          type: array
        campaign_id:
          description: The unique id for the sent campaign.
          readOnly: true
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Email Activity
      type: object
    Gallery_File_2:
      description: An individual file listed in the File Manager.
      properties:
        folder_id:
          description: The id of the folder. Setting `folder_id` to `0` will remove
            a file from its current folder.
          title: Folder ID
          type: integer
        name:
          description: The name of the file.
          title: File Name
          type: string
      title: Gallery File
      type: object
    Weekly_clicks_and_visits_data:
      description: The clicks and visits data from the last five weeks.
      example:
        unique_visits:
        - date: 2018-04-25
          val: 1
        - date: 2018-04-25
          val: 1
        visits:
        - date: 2018-04-25
          val: 49
        - date: 2018-04-25
          val: 49
        clicks:
        - date: 2018-04-25
          val: 23
        - date: 2018-04-25
          val: 23
      properties:
        clicks:
          description: The total number of clicks in a week.
          items:
            $ref: '#/components/schemas/Clicks_1_inner_1'
          title: Clicks
          type: array
        visits:
          description: The total number of visits in a week.
          items:
            $ref: '#/components/schemas/Visits_inner_1'
          title: Visits
          type: array
        unique_visits:
          items:
            $ref: '#/components/schemas/Unique_Visits_inner'
          title: Unique Visits
          type: array
      readOnly: true
      title: Weekly clicks and visits data
      type: object
    getReportingSurveysIdQuestionsIdAnswers_200_response:
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        answers:
        - submitted_at: 2000-01-23T04:56:07.000+00:00
          response_id: response_id
          contact:
            email_id: email_id
            full_name: full_name
            avatar_url: avatar_url
            phone: phone
            contact_id: contact_id
            email: email
            status: Subscribed
            consents_to_one_to_one_messaging: true
          is_new_contact: true
          id: id
          value: value
        - submitted_at: 2000-01-23T04:56:07.000+00:00
          response_id: response_id
          contact:
            email_id: email_id
            full_name: full_name
            avatar_url: avatar_url
            phone: phone
            contact_id: contact_id
            email: email
            status: Subscribed
            consents_to_one_to_one_messaging: true
          is_new_contact: true
          id: id
          value: value
        total_items: 0
      properties:
        answers:
          description: An array of answers for a question on the survey.
          items:
            $ref: '#/components/schemas/Survey_Question_Answer'
          title: Answers
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    Tags_inner_2:
      example:
        date_added: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 0
      properties:
        id:
          description: The unique id for the tag.
          readOnly: true
          title: Tag ID
          type: integer
        name:
          description: The name of the tag.
          title: Tag Name
          type: string
        date_added:
          description: The date and time the tag was added to the list member in ISO
            8601 format.
          format: date-time
          readOnly: true
          title: Date Added
          type: string
      type: object
    Gallery_File_1:
      description: An individual file listed in the File Manager.
      properties:
        folder_id:
          description: The id of the folder.
          title: Folder ID
          type: integer
        name:
          description: The name of the file.
          title: File Name
          type: string
        file_data:
          description: The base64-encoded contents of the file.
          title: File Data
          type: string
      required:
      - file_data
      - name
      title: Gallery File
      type: object
    Tags_inner_1:
      example:
        name: name
        id: 0
      properties:
        id:
          description: The unique id for the tag.
          readOnly: true
          title: Tag ID
          type: integer
        name:
          description: The name of the tag.
          title: Tag Name
          type: string
      type: object
    Automation_Trigger:
      description: Available triggers for Automation workflows.
      example:
        runtime:
          hours:
            type: send_asap
          days:
          - sunday
          - sunday
        workflow_emails_count: 1
        workflow_type: abandonedBrowse
        workflow_title: workflow_title
      properties:
        workflow_type:
          description: The type of Automation workflow.
          enum:
          - abandonedBrowse
          - abandonedCart
          - api
          - bestCustomers
          - categoryFollowup
          - dateAdded
          - emailFollowup
          - emailSeries
          - groupAdd
          - groupRemove
          - mandrill
          - productFollowup
          - purchaseFollowup
          - recurringEvent
          - specialEvent
          - visitUrl
          - welcomeSeries
          title: Workflow Type
          type: string
        workflow_title:
          description: The title of the workflow type.
          readOnly: true
          title: Workflow Title
          type: string
        runtime:
          $ref: '#/components/schemas/Automation_Workflow_Runtime_Settings'
        workflow_emails_count:
          description: The number of emails in the Automation workflow.
          readOnly: true
          title: Workflow Emails Count
          type: integer
      required:
      - workflow_type
      title: Automation Trigger
      type: object
    Automation_Campaign_Settings:
      description: The settings for the Automation workflow.
      example:
        auto_footer: true
        use_conversation: true
        authenticate: true
        reply_to: reply_to
        to_name: to_name
        inline_css: true
        title: title
        from_name: from_name
      properties:
        title:
          description: The title of the Automation.
          title: Automation Title
          type: string
        from_name:
          description: The 'from' name for the Automation (not an email address).
          title: From Name
          type: string
        reply_to:
          description: The reply-to email address for the Automation.
          title: Reply To Address
          type: string
        use_conversation:
          description: Whether to use Mailchimp Conversation feature to manage replies
          title: Conversations
          type: boolean
        to_name:
          description: "The Automation's custom 'To' name, typically the first name\
            \ [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
          title: To Name
          type: string
        authenticate:
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the Automation. Defaults to `true`."
          title: Authentication
          type: boolean
        auto_footer:
          description: "Whether to automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the Automation."
          title: Auto-Footer
          type: boolean
        inline_css:
          description: Whether to automatically inline the CSS included with the Automation
            content.
          title: Inline CSS
          type: boolean
      title: Automation Campaign Settings
      type: object
    Click_Summary:
      description: A summary of the click-throughs on the campaign's URL.
      example:
        clicks: 1
        last_click: 2000-01-23T04:56:07.000+00:00
        locations:
        - country: country
          region: NY
        - country: country
          region: NY
        first_click: 2000-01-23T04:56:07.000+00:00
      properties:
        clicks:
          description: The total number of clicks to the campaign's URL.
          readOnly: true
          title: Clicks
          type: integer
        first_click:
          description: The timestamp for the first click to the URL.
          format: date-time
          readOnly: true
          title: First Click
          type: string
        last_click:
          description: The timestamp for the last click to the URL.
          format: date-time
          readOnly: true
          title: Last Click
          type: string
        locations:
          description: A summary of the top click locations.
          items:
            $ref: '#/components/schemas/Location_3'
          readOnly: true
          title: Click Locations
          type: array
      readOnly: true
      title: Click Summary
      type: object
    Merge_Field_Options:
      description: Extra options for some merge field types.
      example:
        size: 5
        date_format: date_format
        choices:
        - First Choice
        - Second Choice
        - Third Choice
        default_country: 1
        phone_format: phone_format
      properties:
        default_country:
          description: "In an address field, the default country code if none supplied."
          title: Default Country
          type: integer
        phone_format:
          description: "In a phone field, the phone number type: US or International."
          title: Phone Type
          type: string
        date_format:
          description: "In a date or birthday field, the format of the date."
          title: Date Type
          type: string
        choices:
          description: "In a radio or dropdown non-group field, the available options\
            \ for contacts to pick from."
          example:
          - First Choice
          - Second Choice
          - Third Choice
          items:
            type: string
          title: Choices
          type: array
        size:
          description: "In a text field, the default length of the text field."
          readOnly: true
          title: Text Field Size
          type: integer
      title: Merge Field Options
      type: object
    List_Activity:
      description: Up to the previous 180 days of daily detailed aggregated activity
        stats for a specific list. Does not include AutoResponder or Automation activity.
      example:
        activity:
        - soft_bounce: 5
          hard_bounce: 5
          subs: 2
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          emails_sent: 0
          unsubs: 7
          recipient_clicks: 1
          other_adds: 9
          day: day
          unique_opens: 6
          other_removes: 3
        - soft_bounce: 5
          hard_bounce: 5
          subs: 2
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          emails_sent: 0
          unsubs: 7
          recipient_clicks: 1
          other_adds: 9
          day: day
          unique_opens: 6
          other_removes: 3
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 2
      properties:
        activity:
          description: Recent list activity.
          items:
            $ref: '#/components/schemas/Daily_List_Activity'
          title: List Activity
          type: array
        list_id:
          description: The unique id for the list.
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: List Activity
      type: object
    Automation_Trigger_1:
      description: Trigger settings for the Automation.
      properties:
        workflow_type:
          description: The type of Automation workflow. Currently only supports 'abandonedCart'.
          title: Workflow Type
          type: string
      required:
      - workflow_type
      title: Automation Trigger
      type: object
    getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary_ecommerce:
      properties:
        total_revenue:
          type: number
        currency_code:
          type: string
      type: object
    Campaign_Feedback:
      description: A specific feedback message from a specific campaign.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        parent_id: 6
        feedback_id: 0
        created_at: 2000-01-23T04:56:07.000+00:00
        is_complete: true
        source: api
        message: message
        created_by: created_by
        block_id: 1
        campaign_id: campaign_id
      properties:
        feedback_id:
          description: The individual id for the feedback item.
          readOnly: true
          title: Feedback ID
          type: integer
        parent_id:
          description: "If a reply, the id of the parent feedback item."
          readOnly: true
          title: Parent ID
          type: integer
        block_id:
          description: The block id for the editable block that the feedback addresses.
          title: Block ID
          type: integer
        message:
          description: The content of the feedback.
          title: Message
          type: string
        is_complete:
          description: The status of feedback.
          title: Complete
          type: boolean
        created_by:
          description: The login name of the user who created the feedback.
          readOnly: true
          title: Created By
          type: string
        created_at:
          description: The date and time the feedback item was created in ISO 8601
            format.
          format: date-time
          readOnly: true
          title: Created At
          type: string
        updated_at:
          description: The date and time the feedback was last updated in ISO 8601
            format.
          format: date-time
          readOnly: true
          title: Updated At
          type: string
        source:
          description: The source of the feedback.
          enum:
          - api
          - email
          - sms
          - web
          - ios
          - android
          readOnly: true
          title: Source
          type: string
        campaign_id:
          description: The unique id for the campaign.
          readOnly: true
          title: Campaign ID
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      required:
      - message
      title: Campaign Feedback
      type: object
    Campaign_A:
      description: Stats for Campaign A.
      example:
        forwards: 5
        unsubs: 6
        opens: 3
        bounces: 1
        recipient_clicks: 6
        forwards_opens: 6
        last_open: last_open
        abuse_reports: 2
        unique_opens: 3
      properties:
        bounces:
          description: Bounces for Campaign A.
          title: Bounces
          type: integer
        abuse_reports:
          description: Abuse reports for Campaign A.
          title: Abuse Reports
          type: integer
        unsubs:
          description: Unsubscribes for Campaign A.
          title: Unsubscribes
          type: integer
        recipient_clicks:
          description: Recipient Clicks for Campaign A.
          title: Recipient Clicks
          type: integer
        forwards:
          description: Forwards for Campaign A.
          title: Forwards
          type: integer
        forwards_opens:
          description: Opens from forwards for Campaign A.
          title: Forward Opens
          type: integer
        opens:
          description: Opens for Campaign A.
          title: Opens
          type: integer
        last_open:
          description: The last open for Campaign A.
          title: Last Open
          type: string
        unique_opens:
          description: Unique opens for Campaign A.
          title: Unique Opens
          type: integer
      title: Campaign A
      type: object
    Campaign_B:
      description: Stats for Campaign B.
      example:
        forwards: 0
        unsubs: 7
        opens: 8
        bounces: 7
        recipient_clicks: 6
        forwards_opens: 4
        last_open: last_open
        abuse_reports: 0
        unique_opens: 7
      properties:
        bounces:
          description: Bounces for Campaign B.
          title: Bounces
          type: integer
        abuse_reports:
          description: Abuse reports for Campaign B.
          title: Abuse Reports
          type: integer
        unsubs:
          description: Unsubscribes for Campaign B.
          title: Unsubscribes
          type: integer
        recipient_clicks:
          description: Recipients clicks for Campaign B.
          title: Recipient Clicks
          type: integer
        forwards:
          description: Forwards for Campaign B.
          title: Forwards
          type: integer
        forwards_opens:
          description: Opens for forwards from Campaign B.
          title: Forward Opens
          type: integer
        opens:
          description: Opens for Campaign B.
          title: Opens
          type: integer
        last_open:
          description: The last open for Campaign B.
          title: Last Open
          type: string
        unique_opens:
          description: Unique opens for Campaign B.
          title: Unique Opens
          type: integer
      title: Campaign B
      type: object
    Connected_Site_2:
      description: The Connected Site associated with the store.
      example:
        site_script:
          fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
          url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created via\
          \ API"
      properties:
        site_foreign_id:
          description: The unique identifier for the connected site.
          example: "a180c384d7db88b if created in-app, MC001 if created via API"
          readOnly: true
          title: Connected Site Foreign ID
          type: string
        site_script:
          $ref: '#/components/schemas/Script_1'
      readOnly: true
      title: Connected Site
      type: object
    Combinations_inner:
      example:
        subject_line: 7
        send_time: 9
        reply_to: 2
        recipients: 7
        id: id
        from_name: 3
        content_description: 4
      properties:
        id:
          description: Unique ID for the combination.
          title: ID
          type: string
        subject_line:
          description: The index of `variate_settings.subject_lines` used.
          title: Subject Line
          type: integer
        send_time:
          description: The index of `variate_settings.send_times` used.
          title: Send Time
          type: integer
        from_name:
          description: The index of `variate_settings.from_names` used.
          title: From Name
          type: integer
        reply_to:
          description: The index of `variate_settings.reply_to_addresses` used.
          title: Reply To
          type: integer
        content_description:
          description: The index of `variate_settings.contents` used.
          title: Content Description
          type: integer
        recipients:
          description: The number of recipients for this combination.
          title: Recipients
          type: integer
      type: object
    Connected_Site_1:
      description: Information about a specific connected site.
      properties:
        foreign_id:
          description: The unique identifier for the site.
          example: MC001
          title: Connected Site Foreign ID
          type: string
        domain:
          description: The connected site domain.
          example: example.com
          title: Domain
          type: string
      required:
      - domain
      - foreign_id
      title: Connected Site
      type: object
    Batch:
      description: The status of a batch request
      example:
        finished_operations: 6
        completed_at: 2000-01-23T04:56:07.000+00:00
        submitted_at: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_operations: 0
        errored_operations: 1
        id: id
        response_body_url: response_body_url
        status: pending
      properties:
        id:
          description: A string that uniquely identifies this batch request.
          readOnly: true
          title: Batch ID
          type: string
        status:
          description: "The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation)\
            \ about the batch operation status."
          enum:
          - pending
          - preprocessing
          - started
          - finalizing
          - finished
          readOnly: true
          title: Status
          type: string
        total_operations:
          description: "The total number of operations to complete as part of this\
            \ batch request. For GET requests requiring pagination, each page counts\
            \ as a separate operation."
          readOnly: true
          title: Total Operations
          type: integer
        finished_operations:
          description: The number of completed operations. This includes operations
            that returned an error.
          readOnly: true
          title: Finished Operations
          type: integer
        errored_operations:
          description: The number of completed operations that returned an error.
          readOnly: true
          title: Error Operations
          type: integer
        submitted_at:
          description: The date and time when the server received the batch request
            in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Submitted At
          type: string
        completed_at:
          description: The date and time when all operations in the batch request
            completed in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Completed At
          type: string
        response_body_url:
          description: The URL of the gzipped archive of the results of all the operations.
          readOnly: true
          title: Response Body URL
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Batch
      type: object
    Shipping_Address:
      description: The shipping address for the order.
      example:
        country: United States
        address2: Suite 5000
        city: Atlanta
        address1: 675 Ponce de Leon Ave NE
        latitude: 45.427408
        province_code: GA
        country_code: US
        province: Georgia
        phone: "8675309"
        name: Freddie Chimpenheimer
        company: company
        postal_code: "30308"
        longitude: -75.68903
      properties:
        name:
          description: The name associated with an order's shipping address.
          example: Freddie Chimpenheimer
          title: Name
          type: string
        address1:
          description: The shipping address for the order.
          example: 675 Ponce de Leon Ave NE
          title: Address Field 1
          type: string
        address2:
          description: An additional field for the shipping address.
          example: Suite 5000
          title: Address Field 2
          type: string
        city:
          description: The city in the order's shipping address.
          example: Atlanta
          title: 'City '
          type: string
        province:
          description: The state or normalized province in the order's shipping address.
          example: Georgia
          title: Province
          type: string
        province_code:
          description: The two-letter code for the province or state the order's shipping
            address is located in.
          example: GA
          title: Province Code
          type: string
        postal_code:
          description: The postal or zip code in the order's shipping address.
          example: "30308"
          title: Postal Code
          type: string
        country:
          description: The country in the order's shipping address.
          example: United States
          title: Country Code
          type: string
        country_code:
          description: The two-letter code for the country in the shipping address.
          example: US
          title: Country Code
          type: string
        longitude:
          description: The longitude for the shipping address location.
          example: -75.68903
          title: Longitude
          type: number
        latitude:
          description: The latitude for the shipping address location.
          example: 45.427408
          title: Latitude
          type: number
        phone:
          description: The phone number for the order's shipping address
          example: "8675309"
          title: Phone Number
          type: string
        company:
          description: The company associated with an order's shipping address.
          title: Company
          type: string
      title: Shipping Address
      type: object
    Campaign_Social_Card:
      description: "The preview for the campaign, rendered by social networks like\
        \ Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
      example:
        image_url: image_url
        description: description
        title: title
      properties:
        image_url:
          description: The url for the header image for the card.
          title: Image URL
          type: string
        description:
          description: A short summary of the campaign to display.
          title: Campaign Description
          type: string
        title:
          description: The title for the card. Typically the subject line of the campaign.
          title: Title
          type: string
      title: Campaign Social Card
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner_allOf_channel:
      description: Channel settings
      properties:
        fb_placement_feed:
          description: Is this for facebook feed
          example: true
          type: boolean
        fb_placement_audience:
          description: Is this for facebook audience
          example: false
          type: boolean
        ig_placement_feed:
          description: Is this for instagram feed
          example: false
          type: boolean
      type: object
    Campaign_3:
      description: A summary of an individual campaign's settings and content.
      example:
        archive_url: archive_url
        resendable: true
        settings:
          auto_footer: true
          subject_line: subject_line
          preview_text: preview_text
          use_conversation: true
          authenticate: true
          to_name: to_name
          timewarp: true
          title: title
          from_name: from_name
          auto_tweet: true
          auto_fb_post:
          - auto_fb_post
          - auto_fb_post
          fb_comments: true
          drag_and_drop: true
          reply_to: reply_to
          inline_css: true
          template_id: 5
          folder_id: folder_id
        variate_settings:
          send_times:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          combinations:
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: id
            from_name: 3
            content_description: 4
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: id
            from_name: 3
            content_description: 4
          wait_time: 5
          subject_lines:
          - subject_lines
          - subject_lines
          contents:
          - contents
          - contents
          test_size: 2
          winning_combination_id: winning_combination_id
          reply_to_addresses:
          - reply_to_addresses
          - reply_to_addresses
          winner_criteria: opens
          winning_campaign_id: winning_campaign_id
          from_names:
          - from_names
          - from_names
        ab_split_opts:
          pick_winner: opens
          wait_time: 1
          wait_units: hours
          subject_b: subject_b
          subject_a: subject_a
          split_test: subject
          from_name_a: from_name_a
          from_name_b: from_name_b
          send_time_winner: send_time_winner
          reply_email_b: reply_email_b
          reply_email_a: reply_email_a
          send_time_a: 2000-01-23T04:56:07.000+00:00
          send_time_b: 2000-01-23T04:56:07.000+00:00
          split_size: 34
        create_time: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        web_id: 0
        type: regular
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: clicktale
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: google_analytics
          html_clicks: true
        needs_block_refresh: true
        send_time: 2000-01-23T04:56:07.000+00:00
        rss_opts:
          schedule:
            hour: 16
            weekly_send_day: sunday
            daily_send:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            monthly_send_date: 28.834477156190985
          last_sent: 2000-01-23T04:56:07.000+00:00
          constrain_rss_img: true
          feed_url: https://openapi-generator.tech
          frequency: daily
        parent_campaign_id: parent_campaign_id
        content_type: content_type
        social_card:
          image_url: image_url
          description: description
          title: title
        recipients:
          segment_opts:
            prebuilt_segment_id: subscribers-female
            match: any
            saved_segment_id: 5
            conditions:
            - "{}"
            - "{}"
          list_id: list_id
          segment_text: segment_text
          recipient_count: 1
          list_name: list_name
        emails_sent: 6
        id: id
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: delivering
        long_archive_url: long_archive_url
        status: save
        report_summary:
          subscriber_clicks: 1
          click_rate: 1.0246457001441578
          ecommerce:
            total_spent: 8.762042012749001
            total_revenue: 9.018348186070783
            total_orders: 6
          opens: 3
          clicks: 7
          unique_opens: 2
          open_rate: 4.145608029883936
      properties:
        id:
          description: A string that uniquely identifies this campaign.
          readOnly: true
          title: Campaign ID
          type: string
        web_id:
          description: "The ID used in the Mailchimp web application. View this campaign\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
          readOnly: true
          title: Campaign Web ID
          type: integer
        parent_campaign_id:
          description: "If this campaign is the child of another campaign, this identifies\
            \ the parent campaign. For Example, for RSS or Automation children."
          readOnly: true
          title: Parent Campaign ID
          type: string
        type:
          description: "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/)\
            \ you can create in Mailchimp. A/B Split campaigns have been deprecated\
            \ and variate campaigns should be used instead."
          enum:
          - regular
          - plaintext
          - absplit
          - rss
          - variate
          title: Campaign Type
          type: string
        create_time:
          description: The date and time the campaign was created in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Create Time
          type: string
        archive_url:
          description: The link to the campaign's archive version.
          readOnly: true
          title: Archive URL
          type: string
        long_archive_url:
          description: The original link to the campaign's archive version.
          readOnly: true
          title: Long Archive URL
          type: string
        status:
          description: The current status of the campaign.
          enum:
          - save
          - paused
          - schedule
          - sending
          - sent
          - canceled
          - canceling
          - archived
          readOnly: true
          title: Campaign Status
          type: string
        emails_sent:
          description: The total number of emails sent for this campaign.
          readOnly: true
          title: Emails Sent
          type: integer
        send_time:
          description: The date and time a campaign was sent in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Send Time
          type: string
        content_type:
          description: "How the campaign's content is put together ('template', 'drag_and_drop',\
            \ 'html', 'url')."
          readOnly: true
          title: Content Type
          type: string
        needs_block_refresh:
          description: Determines if the campaign needs its blocks refreshed by opening
            the web-based campaign editor. Deprecated and will always return false.
          readOnly: true
          title: Needs Block Refresh
          type: boolean
        resendable:
          description: Determines if the campaign qualifies to be resent to non-openers.
          readOnly: true
          title: Resendable
          type: boolean
        recipients:
          $ref: '#/components/schemas/List_6'
        settings:
          $ref: '#/components/schemas/Campaign_Settings_5'
        variate_settings:
          $ref: '#/components/schemas/A_B_Test_Options_2'
        tracking:
          $ref: '#/components/schemas/Campaign_Tracking_Options_1'
        rss_opts:
          $ref: '#/components/schemas/RSS_Options_3'
        ab_split_opts:
          $ref: '#/components/schemas/A_B_Testing_Options'
        social_card:
          $ref: '#/components/schemas/Campaign_Social_Card'
        report_summary:
          $ref: '#/components/schemas/Campaign_Report_Summary_3'
        delivery_status:
          $ref: '#/components/schemas/Campaign_Delivery_Status'
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      required:
      - type
      title: Campaign
      type: object
    Campaign_1:
      description: A summary of an individual campaign's settings and content.
      properties:
        type:
          description: "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/)\
            \ you can create in Mailchimp. A/B Split campaigns have been deprecated\
            \ and variate campaigns should be used instead."
          enum:
          - regular
          - plaintext
          - absplit
          - rss
          - variate
          title: Campaign Type
          type: string
        recipients:
          $ref: '#/components/schemas/List_4'
        settings:
          $ref: '#/components/schemas/Campaign_Settings_3'
        variate_settings:
          $ref: '#/components/schemas/A_B_Test_Options_1'
        tracking:
          $ref: '#/components/schemas/Campaign_Tracking_Options_1'
        rss_opts:
          $ref: '#/components/schemas/RSS_Options_1'
        social_card:
          $ref: '#/components/schemas/Campaign_Social_Card'
        content_type:
          description: How the campaign's content is put together. The old drag and
            drop editor uses 'template' while the new editor uses 'multichannel'.
            Defaults to template.
          enum:
          - template
          - multichannel
          example: template
          title: Content Type
          type: string
      required:
      - type
      title: Campaign
      type: object
    getReportingSurveysIdQuestions_200_response:
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        questions:
        - range_low_label: range_low_label
          query: query
          average_rating: 2.5
          subscribe_checkbox_label: subscribe_checkbox_label
          type: pickOne
          range_high_label: range_high_label
          subscribe_checkbox_enabled: true
          survey_id: survey_id
          has_other: true
          placeholder_label: placeholder_label
          other_label: other_label
          contact_counts:
            new: 5
            known: 1
            unknown: 5
          is_required: true
          options:
          - count: 6
            label: label
            id: id
          - count: 6
            label: label
            id: id
          total_responses: 810
          id: id
          merge_field:
            id: 0
            label: label
            type: text
        - range_low_label: range_low_label
          query: query
          average_rating: 2.5
          subscribe_checkbox_label: subscribe_checkbox_label
          type: pickOne
          range_high_label: range_high_label
          subscribe_checkbox_enabled: true
          survey_id: survey_id
          has_other: true
          placeholder_label: placeholder_label
          other_label: other_label
          contact_counts:
            new: 5
            known: 1
            unknown: 5
          is_required: true
          options:
          - count: 6
            label: label
            id: id
          - count: 6
            label: label
            id: id
          total_responses: 810
          id: id
          merge_field:
            id: 0
            label: label
            type: text
        total_items: 2
      properties:
        questions:
          description: An array of reports for each question on the survey.
          items:
            $ref: '#/components/schemas/Survey_Question_Report'
          title: Question Reports
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    Campaign_2:
      description: A summary of an individual campaign's settings and content.
      properties:
        recipients:
          $ref: '#/components/schemas/List_5'
        settings:
          $ref: '#/components/schemas/Campaign_Settings_4'
        variate_settings:
          $ref: '#/components/schemas/A_B_Test_Options_1'
        tracking:
          $ref: '#/components/schemas/Campaign_Tracking_Options_1'
        rss_opts:
          $ref: '#/components/schemas/RSS_Options_2'
        social_card:
          $ref: '#/components/schemas/Campaign_Social_Card'
      required:
      - settings
      title: Campaign
      type: object
    Open_Locations:
      description: Top open locations for a specific campaign.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        locations:
        - country_code: country_code
          opens: 0
          region_name: region_name
          region: region
        - country_code: country_code
          opens: 0
          region_name: region_name
          region: region
        total_items: 6
        campaign_id: campaign_id
      properties:
        locations:
          description: "An array of objects, each representing a top location for\
            \ opens."
          items:
            $ref: '#/components/schemas/Lists_inner'
          title: Lists
          type: array
        campaign_id:
          description: The campaign id.
          readOnly: true
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Open Locations
      type: object
    Campaign_Folder_1:
      description: A folder used to organize campaigns.
      properties:
        name:
          description: Name to associate with the folder.
          title: Folder Name
          type: string
      required:
      - name
      title: Campaign Folder
      type: object
    E_commerce_Promo_Rule:
      description: Information about an Ecommerce Store's specific Promo Rule
      example:
        starts_at: 2000-01-23T04:56:07.000+00:00
        amount: 0.5
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        description: Save BIG during our summer sale!
        id: id
        ends_at: ends_at
        created_at_foreign: 2000-01-23T04:56:07.000+00:00
        title: 50% off Total Order
        type: fixed
        updated_at_foreign: 2000-01-23T04:56:07.000+00:00
        enabled: true
        target: per_item
      properties:
        id:
          description: "A unique identifier for the promo rule. If Ecommerce platform\
            \ does not support promo rule, use promo code id as promo rule id. Restricted\
            \ to UTF-8 characters with max length 50."
          readOnly: true
          title: Promo Rule Foreign ID
          type: string
        title:
          description: The title that will show up in promotion campaign. Restricted
            to UTF-8 characters with max length of 100 bytes.
          example: 50% off Total Order
          title: Title
          type: string
        description:
          description: The description of a promotion restricted to UTF-8 characters
            with max length 255.
          example: Save BIG during our summer sale!
          title: Description
          type: string
        starts_at:
          description: The date and time when the promotion is in effect in ISO 8601
            format.
          format: date-time
          title: Promo Start Time
          type: string
        ends_at:
          description: The date and time when the promotion ends. Must be after starts_at
            and in ISO 8601 format.
          format: Promo date-time
          title: End Time
          type: string
        amount:
          description: "The amount of the promo code discount. If 'type' is 'fixed',\
            \ the amount is treated as a monetary value. If 'type' is 'percentage',\
            \ amount must be a decimal value between 0.0 and 1.0, inclusive."
          example: 0.5
          format: float
          title: Amount
          type: number
        type:
          description: Type of discount. For free shipping set type to fixed.
          enum:
          - fixed
          - percentage
          title: Type
          type: string
        target:
          description: The target that the discount applies to.
          enum:
          - per_item
          - total
          - shipping
          title: Target
          type: string
        enabled:
          description: Whether the promo rule is currently enabled.
          example: true
          title: Enabled
          type: boolean
        created_at_foreign:
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
          title: Foreign Create Time
          type: string
        updated_at_foreign:
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
          title: Foreign Update Time
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Promo Rule
      type: object
    E_commerce_Product_Variant_2:
      description: Information about a specific product variant.
      properties:
        title:
          description: The title of a product variant.
          example: Cat Hat
          title: Title
          type: string
        url:
          description: The URL for a product variant.
          title: URL
          type: string
        sku:
          description: The stock keeping unit (SKU) of a product variant.
          title: SKU
          type: string
        price:
          description: The price of a product variant.
          title: Price
          type: number
        inventory_quantity:
          description: The inventory quantity of a product variant.
          title: Inventory Quantity
          type: integer
        image_url:
          description: The image URL for a product variant.
          title: Image URL
          type: string
        backorders:
          description: The backorders of a product variant.
          title: Backorders
          type: string
        visibility:
          description: The visibility of a product variant.
          title: Visibility
          type: string
      title: E-commerce Product Variant
      type: object
    E_commerce_Product_Variant_1:
      description: Information about a specific product variant.
      properties:
        id:
          description: A unique identifier for the product variant.
          title: Product Variant Foreign ID
          type: string
        title:
          description: The title of a product variant.
          example: Cat Hat
          title: Title
          type: string
        url:
          description: The URL for a product variant.
          title: URL
          type: string
        sku:
          description: The stock keeping unit (SKU) of a product variant.
          title: SKU
          type: string
        price:
          description: The price of a product variant.
          title: Price
          type: number
        inventory_quantity:
          description: The inventory quantity of a product variant.
          title: Inventory Quantity
          type: integer
        image_url:
          description: The image URL for a product variant.
          title: Image URL
          type: string
        backorders:
          description: The backorders of a product variant.
          title: Backorders
          type: string
        visibility:
          description: The visibility of a product variant.
          title: Visibility
          type: string
      required:
      - id
      - title
      title: E-commerce Product Variant
      type: object
    Partial_Matches:
      description: Partial matches of the provided search query.
      example:
        members:
        - list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          members:
          - null
          - null
          total_items: 0
        - list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          members:
          - null
          - null
          total_items: 0
        total_items: 6
      properties:
        members:
          description: "An array of objects, each representing a specific list member."
          items:
            $ref: '#/components/schemas/List_Members_2'
          title: Members
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
      title: Partial Matches
      type: object
    Variate_Contents_inner:
      example:
        content_label: Green header
        plain_text: plain_text
        html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
          \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
          \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0\
          \ marginwidth=0 topmargin=0 marginheight=0 offset=0>"
      properties:
        content_label:
          description: Label used to identify the content option.
          example: Green header
          title: Content Label
          type: string
        plain_text:
          description: "The plain-text portion of the campaign. If left unspecified,\
            \ we'll generate this automatically."
          title: Plain Text
          type: string
        html:
          description: The raw HTML for the campaign.
          example: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
            \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
            \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0\
            \ marginwidth=0 topmargin=0 marginheight=0 offset=0>"
          title: Campaign HTML
          type: string
      type: object
    getReportingSurveysIdResponses_200_response:
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        responses:
        - submitted_at: 2000-01-23T04:56:07.000+00:00
          response_id: response_id
          contact:
            email_id: email_id
            full_name: full_name
            avatar_url: avatar_url
            phone: phone
            contact_id: contact_id
            email: email
            status: Subscribed
            consents_to_one_to_one_messaging: true
          is_new_contact: true
        - submitted_at: 2000-01-23T04:56:07.000+00:00
          response_id: response_id
          contact:
            email_id: email_id
            full_name: full_name
            avatar_url: avatar_url
            phone: phone
            contact_id: contact_id
            email: email
            status: Subscribed
            consents_to_one_to_one_messaging: true
          is_new_contact: true
        total_items: 0
      properties:
        responses:
          description: An array of responses to a survey.
          items:
            $ref: '#/components/schemas/Survey_Respondents'
          title: Responses
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    E_commerce_Product:
      description: Information about a specific product.
      example:
        images:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          variant_ids:
          - variant_ids
          - variant_ids
          id: id
          url: url
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          variant_ids:
          - variant_ids
          - variant_ids
          id: id
          url: url
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        image_url: image_url
        description: This is a cat hat.
        handle: cat-hat
        variants:
        - inventory_quantity: 6
          visibility: visibility
          updated_at: 2015-07-15T19:28:00Z
          backorders: backorders
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 0.8008281904610115
          image_url: image_url
          created_at: 2015-07-15T19:28:00Z
          id: id
          title: Cat Hat
          sku: sku
          url: url
        - inventory_quantity: 6
          visibility: visibility
          updated_at: 2015-07-15T19:28:00Z
          backorders: backorders
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 0.8008281904610115
          image_url: image_url
          created_at: 2015-07-15T19:28:00Z
          id: id
          title: Cat Hat
          sku: sku
          url: url
        title: Cat Hat
        type: Accessories
        currency_code: currency_code
        url: url
        vendor: vendor
        published_at_foreign: 2015-07-15T19:28:00Z
        id: id
      properties:
        id:
          description: A unique identifier for the product.
          readOnly: true
          title: Product Foreign ID
          type: string
        currency_code:
          description: The currency code
          readOnly: true
          title: Currency Code
          type: string
        title:
          description: The title of a product.
          example: Cat Hat
          title: Title
          type: string
        handle:
          description: The handle of a product.
          example: cat-hat
          title: Handle
          type: string
        url:
          description: The URL for a product.
          title: Product URL
          type: string
        description:
          description: The description of a product.
          example: This is a cat hat.
          title: Description
          type: string
        type:
          description: The type of product.
          example: Accessories
          title: Type
          type: string
        vendor:
          description: The vendor for a product.
          title: Vendor
          type: string
        image_url:
          description: The image URL for a product.
          title: Product Image URL
          type: string
        variants:
          description: "Returns up to 50 of the product's variants. To retrieve all\
            \ variants use [Product Variants](https://mailchimp.com/developer/marketing/api/ecommerce-product-variants/)."
          items:
            $ref: '#/components/schemas/E_commerce_Product_Variant'
          title: Product Variants
          type: array
        images:
          description: An array of the product's images.
          items:
            $ref: '#/components/schemas/E_commerce_Product_Image'
          title: Product Images
          type: array
        published_at_foreign:
          description: The date and time the product was published in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Publish Time
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Product
      type: object
    Location_2:
      description: Subscriber location information.
      properties:
        latitude:
          description: The location latitude.
          title: Latitude
          type: number
        longitude:
          description: The location longitude.
          title: Longitude
          type: number
        gmtoff:
          description: The time difference in hours from GMT.
          readOnly: true
          title: GMT Offset
          type: integer
        dstoff:
          description: The offset for timezones where daylight saving time is observed.
          readOnly: true
          title: DST Offset
          type: integer
        country_code:
          description: The unique code for the location country.
          readOnly: true
          title: Country Code
          type: string
        timezone:
          description: The timezone for the location.
          readOnly: true
          title: Timezone
          type: string
        region:
          description: The region for the location.
          readOnly: true
          title: Region
          type: string
      title: Location
      type: object
    Marketing_Permission_1:
      description: A single marketing permission a subscriber has either opted-in
        to or opted-out of.
      properties:
        marketing_permission_id:
          description: The id for the marketing permission on the list
          title: Marketing Permission ID
          type: string
        enabled:
          description: If the subscriber has opted-in to the marketing permission.
          title: Enabled
          type: boolean
      title: Marketing Permission
      type: object
    Location_3:
      description: An individual click location.
      example:
        country: country
        region: NY
      properties:
        country:
          description: The two-digit country code for a recorded click.
          title: Country
          type: string
        region:
          description: "If available, a specific region where the click was recorded."
          example: NY
          title: Region
          type: string
      title: Location
      type: object
    Automation_Delay_1:
      description: The delay settings for an automation email.
      properties:
        amount:
          description: The delay amount for an automation email.
          example: 1
          title: Delay Amount
          type: integer
        type:
          description: The type of delay for an automation email.
          enum:
          - now
          - day
          - hour
          - week
          example: day
          title: Delay Type
          type: string
        direction:
          description: Whether the delay settings describe before or after the delay
            action of an automation email.
          enum:
          - after
          example: after
          title: Delay Direction
          type: string
        action:
          description: The action that triggers the delay of an automation emails.
          enum:
          - signup
          - ecomm_abandoned_browse
          - ecomm_abandoned_cart
          example: signup
          title: Delay Action
          type: string
      required:
      - action
      title: Automation Delay
      type: object
    Subscriber_Lists:
      description: A collection of subscriber lists for this account. Lists contain
        subscribers who have opted-in to receive correspondence from you or your organization.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        lists:
        - notify_on_subscribe: "false"
          subscribe_url_long: subscribe_url_long
          marketing_permissions: false
          permission_reminder: permission_reminder
          use_archive_bar: false
          notify_on_unsubscribe: "false"
          visibility: pub
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          date_created: 2000-01-23T04:56:07.000+00:00
          campaign_defaults:
            from_email: from_email
            subject: subject
            language: language
            from_name: from_name
          web_id: 0
          modules:
          - modules
          - modules
          email_type_option: true
          beamer_address: beamer_address
          has_welcome: false
          stats:
            cleaned_count: 2
            unsubscribe_count_since_send: 9
            member_count_since_send: 7
            click_rate: 6.84685269835264
            cleaned_count_since_send: 3
            total_contacts: 5
            campaign_count: 2
            avg_unsub_rate: 1.2315135367772556
            last_sub_date: 2000-01-23T04:56:07.000+00:00
            unsubscribe_count: 5
            target_sub_rate: 1.0246457001441578
            campaign_last_sent: 2000-01-23T04:56:07.000+00:00
            avg_sub_rate: 7.386281948385884
            member_count: 1
            merge_field_count: 4
            open_rate: 1.4894159098541704
            last_unsub_date: 2000-01-23T04:56:07.000+00:00
          contact:
            zip: zip
            country: country
            address2: address2
            city: city
            phone: phone
            address1: address1
            company: company
            state: state
          name: name
          list_rating: 6
          double_optin: false
          id: id
          subscribe_url_short: subscribe_url_short
        - notify_on_subscribe: "false"
          subscribe_url_long: subscribe_url_long
          marketing_permissions: false
          permission_reminder: permission_reminder
          use_archive_bar: false
          notify_on_unsubscribe: "false"
          visibility: pub
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          date_created: 2000-01-23T04:56:07.000+00:00
          campaign_defaults:
            from_email: from_email
            subject: subject
            language: language
            from_name: from_name
          web_id: 0
          modules:
          - modules
          - modules
          email_type_option: true
          beamer_address: beamer_address
          has_welcome: false
          stats:
            cleaned_count: 2
            unsubscribe_count_since_send: 9
            member_count_since_send: 7
            click_rate: 6.84685269835264
            cleaned_count_since_send: 3
            total_contacts: 5
            campaign_count: 2
            avg_unsub_rate: 1.2315135367772556
            last_sub_date: 2000-01-23T04:56:07.000+00:00
            unsubscribe_count: 5
            target_sub_rate: 1.0246457001441578
            campaign_last_sent: 2000-01-23T04:56:07.000+00:00
            avg_sub_rate: 7.386281948385884
            member_count: 1
            merge_field_count: 4
            open_rate: 1.4894159098541704
            last_unsub_date: 2000-01-23T04:56:07.000+00:00
          contact:
            zip: zip
            country: country
            address2: address2
            city: city
            phone: phone
            address1: address1
            company: company
            state: state
          name: name
          list_rating: 6
          double_optin: false
          id: id
          subscribe_url_short: subscribe_url_short
        total_items: 7
        constraints:
          may_create: true
          current_total_instances: 4
          max_instances: 1
      properties:
        lists:
          description: "An array of objects, each representing a list."
          items:
            $ref: '#/components/schemas/Subscriber_List'
          title: Lists
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        constraints:
          $ref: '#/components/schemas/Collection_Authorization'
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      required:
      - lists
      title: Subscriber Lists
      type: object
    Billing_Address:
      description: The billing address for the order.
      example:
        country: United States
        address2: Suite 5000
        city: Atlanta
        address1: 675 Ponce de Leon Ave NE
        latitude: 45.427408
        province_code: GA
        country_code: US
        province: Georgia
        phone: "8675309"
        name: Freddie Chimpenheimer
        company: company
        postal_code: "30308"
        longitude: -75.68903
      properties:
        name:
          description: The name associated with an order's billing address.
          example: Freddie Chimpenheimer
          title: Name
          type: string
        address1:
          description: The billing address for the order.
          example: 675 Ponce de Leon Ave NE
          title: Address Field 1
          type: string
        address2:
          description: An additional field for the billing address.
          example: Suite 5000
          title: Address Field 2
          type: string
        city:
          description: The city in the billing address.
          example: Atlanta
          title: 'City '
          type: string
        province:
          description: The state or normalized province in the billing address.
          example: Georgia
          title: Province
          type: string
        province_code:
          description: The two-letter code for the province or state in the billing
            address.
          example: GA
          title: Province Code
          type: string
        postal_code:
          description: The postal or zip code in the billing address.
          example: "30308"
          title: Postal Code
          type: string
        country:
          description: The country in the billing address.
          example: United States
          title: Country Code
          type: string
        country_code:
          description: The two-letter code for the country in the billing address.
          example: US
          title: Country Code
          type: string
        longitude:
          description: The longitude for the billing address location.
          example: -75.68903
          title: Longitude
          type: number
        latitude:
          description: The latitude for the billing address location.
          example: 45.427408
          title: Latitude
          type: number
        phone:
          description: The phone number for the billing address.
          example: "8675309"
          title: Phone Number
          type: string
        company:
          description: The company associated with the billing address.
          title: Company
          type: string
      title: Billing Address
      type: object
    Referrer:
      description: A single instance of a campaign referral.
      example:
        referrer: referrer
        clicks: 5
        last_click: 2000-01-23T04:56:07.000+00:00
        first_click: 2000-01-23T04:56:07.000+00:00
      properties:
        referrer:
          description: A referrer (truncated to 100 bytes).
          title: Referrer
          type: string
        clicks:
          description: The number of clicks a single referrer generated.
          title: Clicks
          type: integer
        first_click:
          description: The timestamp for the first click from this referrer.
          format: date-time
          title: First Click
          type: string
        last_click:
          description: The timestamp for the last click from this referrer.
          format: date-time
          title: Last Click
          type: string
      title: Referrer
      type: object
    E_commerce_Stores:
      description: A collection of stores in the account.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        stores:
        - is_syncing: true
          automations:
            abandoned_browse:
              is_supported: false
              id: 355a72bfc3
              status: sending
            abandoned_cart:
              is_supported: false
              id: 355a72bfc3
              status: sending
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            postal_code: "30308"
            longitude: -75.68903
          list_id: 1a2df69511
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          timezone: Eastern
          primary_locale: fr
          created_at: 2015-07-15T19:28:00Z
          list_is_active: true
          platform: platform
          currency_code: USD
          money_format: $
          connected_site:
            site_script:
              fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
                script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
                );</script>"
              url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
            site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created\
              \ via API"
          email_address: freddie@mailchimp.com
          updated_at: 2015-07-15T19:28:00Z
          phone: 404-444-4444
          domain: example.com
          name: Freddie's Cat Hat Emporium
          id: example_store
        - is_syncing: true
          automations:
            abandoned_browse:
              is_supported: false
              id: 355a72bfc3
              status: sending
            abandoned_cart:
              is_supported: false
              id: 355a72bfc3
              status: sending
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            postal_code: "30308"
            longitude: -75.68903
          list_id: 1a2df69511
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          timezone: Eastern
          primary_locale: fr
          created_at: 2015-07-15T19:28:00Z
          list_is_active: true
          platform: platform
          currency_code: USD
          money_format: $
          connected_site:
            site_script:
              fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
                script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
                );</script>"
              url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
            site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created\
              \ via API"
          email_address: freddie@mailchimp.com
          updated_at: 2015-07-15T19:28:00Z
          phone: 404-444-4444
          domain: example.com
          name: Freddie's Cat Hat Emporium
          id: example_store
        total_items: 0
      properties:
        stores:
          description: "An array of objects, each representing a store."
          items:
            $ref: '#/components/schemas/E_commerce_Store'
          title: Stores
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Stores
      type: object
    Location_1:
      description: Subscriber location information.
      example:
        country_code: country_code
        dstoff: 7
        timezone: timezone
        latitude: 5.962133916683182
        gmtoff: 2
        longitude: 5.637376656633329
      properties:
        latitude:
          description: The location latitude.
          title: Latitude
          type: number
        longitude:
          description: The location longitude.
          title: Longitude
          type: number
        gmtoff:
          description: The time difference in hours from GMT.
          readOnly: true
          title: GMT Offset
          type: integer
        dstoff:
          description: The offset for timezones where daylight saving time is observed.
          readOnly: true
          title: DST Offset
          type: integer
        country_code:
          description: The unique code for the location country.
          readOnly: true
          title: Country Code
          type: string
        timezone:
          description: The timezone for the location.
          readOnly: true
          title: Timezone
          type: string
      title: Location
      type: object
    Template_Instance:
      description: Information about a specific template.
      example:
        thumbnail: thumbnail
        date_edited: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        date_created: 2000-01-23T04:56:07.000+00:00
        active: true
        type: type
        created_by: created_by
        drag_and_drop: true
        content_type: template
        share_url: share_url
        responsive: true
        name: name
        id: 0
        category: category
        folder_id: folder_id
        edited_by: edited_by
      properties:
        id:
          description: The individual id for the template.
          readOnly: true
          title: Template ID
          type: integer
        type:
          description: "The type of template (user, base, or gallery)."
          readOnly: true
          title: Template Type
          type: string
        name:
          description: The name of the template.
          title: Template Name
          type: string
        drag_and_drop:
          description: Whether the template uses the drag and drop editor.
          readOnly: true
          title: Drag and Drop
          type: boolean
        responsive:
          description: Whether the template contains media queries to make it responsive.
          readOnly: true
          title: Responsive
          type: boolean
        category:
          description: "If available, the category the template is listed in."
          readOnly: true
          title: Template Category
          type: string
        date_created:
          description: The date and time the template was created in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Date Created
          type: string
        date_edited:
          description: The date and time the template was edited in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Date Edited
          type: string
        created_by:
          description: The login name for template's creator.
          readOnly: true
          title: Created By
          type: string
        edited_by:
          description: The login name who last edited the template.
          readOnly: true
          title: Edited By
          type: string
        active:
          description: "User templates are not 'deleted,' but rather marked as 'inactive.'\
            \ Returns whether the template is still active."
          readOnly: true
          title: Active
          type: boolean
        folder_id:
          description: The id of the folder the template is currently in.
          title: Folder ID
          type: string
        thumbnail:
          description: "If available, the URL for a thumbnail of the template."
          readOnly: true
          title: Template Thumbnail
          type: string
        share_url:
          description: "The URL used for [template sharing](https://mailchimp.com/help/share-a-template/)."
          readOnly: true
          title: Share URL
          type: string
        content_type:
          description: How the template's content is put together.
          enum:
          - template
          - multichannel
          - html
          readOnly: true
          title: Content Type
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Template Instance
      type: object
    Address:
      description: The customer's address.
      example:
        country: United States
        country_code: US
        province: Georgia
        address2: Suite 5000
        city: Atlanta
        address1: 675 Ponce de Leon Ave NE
        province_code: GA
        postal_code: "30308"
      properties:
        address1:
          description: The mailing address of the customer.
          example: 675 Ponce de Leon Ave NE
          title: Address Field 1
          type: string
        address2:
          description: An additional field for the customer's mailing address.
          example: Suite 5000
          title: Address Field 2
          type: string
        city:
          description: The city the customer is located in.
          example: Atlanta
          title: 'City '
          type: string
        province:
          description: The customer's state name or normalized province.
          example: Georgia
          title: Province
          type: string
        province_code:
          description: The two-letter code for the customer's province or state.
          example: GA
          title: Province Code
          type: string
        postal_code:
          description: The customer's postal or zip code.
          example: "30308"
          title: Postal Code
          type: string
        country:
          description: The customer's country.
          example: United States
          title: Country Code
          type: string
        country_code:
          description: The two-letter code for the customer's country.
          example: US
          title: Country Code
          type: string
      title: Address
      type: object
    Abuse_Complaints_1:
      description: A list of abuse complaints for a specific list.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
        abuse_reports:
        - email_id: email_id
          date: 2000-01-23T04:56:07.000+00:00
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          id: 0
          list_is_active: true
          vip: true
          campaign_id: campaign_id
        - email_id: email_id
          date: 2000-01-23T04:56:07.000+00:00
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          id: 0
          list_is_active: true
          vip: true
          campaign_id: campaign_id
        campaign_id: campaign_id
      properties:
        abuse_reports:
          description: "An array of objects, each representing an abuse report resource."
          items:
            $ref: '#/components/schemas/Abuse_Complaint_1'
          title: Abuse Reports
          type: array
        campaign_id:
          description: The campaign id.
          readOnly: true
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Abuse Complaints
      type: object
    getFacebookAdsId_200_response:
      allOf:
      - properties:
          id:
            description: Unique ID of an Outreach.
            title: ID
            type: string
          web_id:
            description: "The ID used in the Mailchimp web application. For example,\
              \ for a `regular` outreach, you can view this campaign in your Mailchimp\
              \ account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
            title: Web ID
            type: integer
          name:
            description: Title or name of an Outreach.
            title: Name
            type: string
          type:
            description: The type of outreach this object is.
            enum:
            - regular
            - email-touchpoint
            - plaintext
            - rss
            - reconfirm
            - variate
            - absplit
            - automation
            - facebook
            - google
            - autoresponder
            - transactional
            - page
            - website
            - social_post
            - survey
            - customer_journey
            title: Outreach Type
            type: string
          status:
            description: The status of this outreach.
            enum:
            - save
            - paused
            - schedule
            - scheduled
            - sending
            - sent
            - canceled
            - canceling
            - active
            - disconnected
            - somepaused
            - draft
            - completed
            - partialRejected
            - pending
            - rejected
            - published
            - unpublished
            title: Outreach Status
            type: string
          show_report:
            description: "Outreach report availability. Note: This property is hotly\
              \ debated in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371)\
              \ for more context."
            title: Show Report
            type: boolean
          create_time:
            description: The date and time the outreach was created in ISO 8601 format.
            format: date-time
            title: Create Time
            type: string
          start_time:
            description: The date and time the outreach was started in ISO 8601 format.
            format: date-time
            title: Start Time
            type: string
          updated_at:
            description: The date and time the outreach was last updated in ISO 8601
              format.
            format: date-time
            title: Updated At
            type: string
          canceled_at:
            description: The date and time the outreach was canceled in ISO 8601 format.
            format: date-time
            title: Canceled At
            type: string
          published_time:
            description: The date and time the outreach was (or will be) published
              in ISO 8601 format.
            format: date-time
            title: Publish Time
            type: string
          has_segment:
            description: If this outreach targets a segment of your audience.
            title: Has Segment
            type: boolean
          report_summary:
            $ref: '#/components/schemas/Report_Summary'
          recipients:
            $ref: '#/components/schemas/Recipients'
          thumbnail:
            description: The URL of the thumbnail for this outreach.
            title: Thumbnail
            type: string
        type: object
      - properties:
          email_source_name:
            title: "Ad: Email Source Name"
            type: string
          paused_at:
            description: The date and time the ad was paused in ISO 8601 format.
            format: date-time
            title: "Ad: Paused At"
            type: string
          end_time:
            description: The date and time the ad was ended in ISO 8601 format.
            format: date-time
            title: "Ad: End Time"
            type: string
          needs_attention:
            description: If the ad has a problem and needs attention.
            title: "Ad: Needs Attention"
            type: boolean
          was_canceled_by_facebook:
            title: "Ad: Was Canceled By Facebook"
            type: boolean
        type: object
      - description: A facebook ad.
        properties:
          is_connected:
            description: Check if this ad is connected to a facebook page
            type: boolean
          has_audience:
            description: Check if this ad has audience setup
            type: boolean
          has_content:
            description: Check if this ad has content
            type: boolean
          channel:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_channel'
          feedback:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_feedback'
          site:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_site'
          audience:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience'
          budget:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_budget'
          content:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_content'
        type: object
      - properties:
          _links:
            description: A list of link types and descriptions for the API schema
              documents.
            items:
              $ref: '#/components/schemas/Resource_Link'
            readOnly: true
            title: Links
            type: array
        type: object
    Resend_Shortcut_Eligibility:
      description: Determines if the campaign qualifies for the Campaign Resend Shortcuts.
        Only included when query parameter `include_resend_shortcuts` is `true`.
      example:
        to_non_openers:
          reason: reason
          is_eligible: true
        to_new_subscribers:
          reason: reason
          is_eligible: true
        to_non_clickers:
          reason: reason
          is_eligible: true
      properties:
        to_non_openers:
          $ref: '#/components/schemas/To_Non_Openers'
        to_new_subscribers:
          $ref: '#/components/schemas/To_New_Subscribers'
        to_non_clickers:
          $ref: '#/components/schemas/To_Non_Clickers'
      title: Resend Shortcut Eligibility
      type: object
    Share_Report:
      description: "The url and password for the [VIP report](https://mailchimp.com/help/share-a-campaign-report/)."
      example:
        share_url: share_url
        share_password: share_password
      properties:
        share_url:
          description: The URL for the VIP report.
          readOnly: true
          title: Report URL
          type: string
        share_password:
          description: "If password protected, the password for the VIP report."
          readOnly: true
          title: Report Password
          type: string
      title: Share Report
      type: object
    Landing_Page_Report:
      description: A summary of an individual landing page's settings and content.
      example:
        unique_visits: 6
        subscribes: 1
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        web_id: 33345484
        list_name: Test List
        title: title
        url: url
        signup_tags:
        - tag_name: tag_name
          tag_id: 3
        - tag_name: tag_name
          tag_id: 3
        visits: 0
        timeseries:
          daily_stats:
            unique_visits:
            - date: 2018-04-25
              val: 1
            - date: 2018-04-25
              val: 1
            visits:
            - date: 2018-04-25
              val: 11
            - date: 2018-04-25
              val: 11
            clicks:
            - date: 2018-04-25
              val: 13
            - date: 2018-04-25
              val: 13
          weekly_stats:
            unique_visits:
            - date: 2018-04-25
              val: 1
            - date: 2018-04-25
              val: 1
            visits:
            - date: 2018-04-25
              val: 49
            - date: 2018-04-25
              val: 49
            clicks:
            - date: 2018-04-25
              val: 23
            - date: 2018-04-25
              val: 23
        ecommerce:
          average_order_revenue: 9.301444243932576
          total_revenue: 2.3021358869347655
          total_orders: 7
          currency_code: currency_code
        name: name
        clicks: 5
        id: 00dfc2e1f0
        published_at: 2000-01-23T04:56:07.000+00:00
        conversion_rate: 5.637376656633329
        unpublished_at: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        id:
          description: A string that uniquely identifies this landing page.
          example: 00dfc2e1f0
          readOnly: true
          title: Landing Page ID
          type: string
        name:
          description: The name of this landing page the user will see.
          readOnly: true
          title: Name
          type: string
        title:
          description: The name of the landing page the user's customers will see.
          readOnly: true
          title: Title
          type: string
        url:
          description: The landing page url.
          readOnly: true
          title: Url
          type: string
        published_at:
          description: The time this landing page was published.
          format: date-time
          readOnly: true
          title: Published At
          type: string
        unpublished_at:
          description: The time this landing page was unpublished.
          format: date-time
          readOnly: true
          title: Unpublished At
          type: string
        status:
          description: The status of the landing page.
          readOnly: true
          title: Status
          type: string
        list_id:
          description: The list id connected to this landing page.
          readOnly: true
          title: List Id
          type: string
        visits:
          description: The number of visits to this landing pages.
          readOnly: true
          title: Visits
          type: integer
        unique_visits:
          description: The number of unique visits to this landing pages.
          readOnly: true
          title: Unique Visits
          type: integer
        subscribes:
          description: The number of subscribes to this landing pages.
          readOnly: true
          title: Subscribes
          type: integer
        clicks:
          description: The number of clicks to this landing pages.
          readOnly: true
          title: Clicks
          type: integer
        conversion_rate:
          description: The percentage of people who visited your landing page and
            were added to your list.
          readOnly: true
          title: Conversion rate
          type: number
        timeseries:
          $ref: '#/components/schemas/Landing_Page_Report_timeseries'
        ecommerce:
          $ref: '#/components/schemas/Landing_Page_Report_ecommerce'
        web_id:
          description: The ID used in the Mailchimp web application.
          example: 33345484
          readOnly: true
          title: Landing Page Web ID
          type: integer
        list_name:
          description: List Name
          example: Test List
          readOnly: true
          title: List Name
          type: string
        signup_tags:
          description: A list of tags associated to the landing page.
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
          title: Signup Tags
          type: array
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Landing Page Report
      type: object
    Address_1:
      description: The store address.
      example:
        country: United States
        country_code: US
        province: Georgia
        address2: Suite 5000
        city: Atlanta
        address1: 675 Ponce de Leon Ave NE
        latitude: 45.427408
        province_code: GA
        postal_code: "30308"
        longitude: -75.68903
      properties:
        address1:
          description: The store's mailing address.
          example: 675 Ponce de Leon Ave NE
          title: Address Field 1
          type: string
        address2:
          description: An additional field for the store's mailing address.
          example: Suite 5000
          title: Address Field 2
          type: string
        city:
          description: The city the store is located in.
          example: Atlanta
          title: 'City '
          type: string
        province:
          description: The store's state name or normalized province.
          example: Georgia
          title: Province
          type: string
        province_code:
          description: The two-letter code for the store's province or state.
          example: GA
          title: Province Code
          type: string
        postal_code:
          description: The store's postal or zip code.
          example: "30308"
          title: Postal Code
          type: string
        country:
          description: The store's country.
          example: United States
          title: Country Code
          type: string
        country_code:
          description: The two-letter code for to the store's country.
          example: US
          title: Country Code
          type: string
        longitude:
          description: The longitude of the store location.
          example: -75.68903
          title: Longitude
          type: number
        latitude:
          description: The latitude of the store location.
          example: 45.427408
          title: Latitude
          type: number
      title: Address
      type: object
    Open_Activity:
      description: A list of a member's opens activity in a specific campaign.
      example:
        email_id: email_id
        email_address: email_address
        list_id: list_id
        opens_count: 0
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: "{}"
        opens:
        - timestamp: 2000-01-23T04:56:07.000+00:00
        - timestamp: 2000-01-23T04:56:07.000+00:00
        contact_status: contact_status
        list_is_active: true
        vip: true
        campaign_id: campaign_id
      properties:
        campaign_id:
          description: The unique id for the campaign.
          readOnly: true
          title: Campaign ID
          type: string
        list_id:
          description: The unique id for the list.
          readOnly: true
          title: List ID
          type: string
        list_is_active:
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
          title: List Status
          type: boolean
        contact_status:
          description: "The status of the member, namely if they are subscribed, unsubscribed,\
            \ deleted, non-subscribed, transactional, pending, or need reconfirmation."
          readOnly: true
          title: Member Status
          type: string
        email_id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        email_address:
          description: Email address for a subscriber.
          readOnly: true
          title: Email Address
          type: string
        merge_fields:
          additionalProperties:
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
            type: object
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
          title: Merge Fields
          type: object
        vip:
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
          title: VIP
          type: boolean
        opens_count:
          description: The total number of times the this campaign was opened by the
            list member.
          readOnly: true
          title: Opens count
          type: integer
        opens:
          description: "An array of timestamps for each time a list member opened\
            \ the campaign. If a list member opens an email multiple times, this will\
            \ return a separate timestamp for each open event."
          items:
            $ref: '#/components/schemas/Member_Activity_1'
          title: Time series data of opens activity
          type: array
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Open Activity
      type: object
    Campaign_Advice:
      description: Campaign feedback details.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        type: negative
        message: message
      properties:
        type:
          description: The sentiment type for a feedback message.
          enum:
          - negative
          - positive
          - neutral
          readOnly: true
          title: Advice Type
          type: string
        message:
          description: The advice message.
          readOnly: true
          title: Advice Message
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaign Advice
      type: object
    Capsule_CRM_Tracking:
      description: Deprecated
      example:
        notes: true
      properties:
        notes:
          description: Update contact notes for a campaign based on a subscriber's
            email addresses.
          title: Capsule Note
          type: boolean
      title: Capsule CRM Tracking
      type: object
    Abuse_Complaint_1:
      description: Details of abuse complaints for a specific list. An abuse complaint
        occurs when your recipient clicks to 'report spam' in their email program.
      example:
        email_id: email_id
        date: 2000-01-23T04:56:07.000+00:00
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: "{}"
        id: 0
        list_is_active: true
        vip: true
        campaign_id: campaign_id
      properties:
        id:
          description: The id for the abuse report
          readOnly: true
          title: Abuse Report ID
          type: integer
        campaign_id:
          description: The campaign id for the abuse report
          readOnly: true
          title: Campaign ID
          type: string
        list_id:
          description: The unique id of the list for the abuse report.
          readOnly: true
          title: List ID
          type: string
        list_is_active:
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
          title: List Status
          type: boolean
        email_id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        email_address:
          description: Email address for a subscriber.
          readOnly: true
          title: Email Address
          type: string
        merge_fields:
          additionalProperties:
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
            type: object
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
          title: Merge Fields
          type: object
        vip:
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
          title: VIP
          type: boolean
        date:
          description: Date for the abuse report
          format: date-time
          readOnly: true
          title: Date
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Abuse Complaint
      type: object
    Merge_Field:
      description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for an audience."
      example:
        public: true
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        display_order: 6
        options:
          size: 5
          date_format: date_format
          choices:
          - First Choice
          - Second Choice
          - Third Choice
          default_country: 1
          phone_format: phone_format
        merge_id: 0
        default_value: default_value
        tag: tag
        type: text
        required: true
        help_text: help_text
      properties:
        merge_id:
          description: An unchanging id for the merge field.
          readOnly: true
          title: Merge Field ID
          type: integer
        tag:
          description: "The merge tag used for Mailchimp campaigns and [adding contact\
            \ information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts)."
          title: Merge Tag
          type: string
        name:
          description: The name of the merge field (audience field).
          title: Merge Field Name
          type: string
        type:
          description: "The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for the merge field."
          enum:
          - text
          - number
          - address
          - phone
          - date
          - url
          - imageurl
          - radio
          - dropdown
          - birthday
          - zip
          readOnly: true
          title: Merge Field Type
          type: string
        required:
          description: The boolean value if the merge field is required.
          title: Required
          type: boolean
        default_value:
          description: The default value for the merge field if `null`.
          title: Default Value
          type: string
        public:
          description: Whether the merge field is displayed on the signup form.
          title: Merge Field Public Status
          type: boolean
        display_order:
          description: The order that the merge field displays on the list signup
            form.
          title: Display Order
          type: integer
        options:
          $ref: '#/components/schemas/Merge_Field_Options'
        help_text:
          description: Extra text to help the subscriber fill out the form.
          title: Merge Field Help Text
          type: string
        list_id:
          description: The ID that identifies this merge field's audience'.
          readOnly: true
          title: List ID
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Merge Field
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner_allOf_content:
      properties:
        title:
          type: string
        link_url:
          type: string
        message:
          type: string
        description:
          type: string
        image_url:
          type: string
        call_to_action:
          type: string
        attachments:
          items:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_content_attachments_inner'
          type: array
      type: object
    Outreach_1:
      description: "The outreach associated with this order. For example, an email\
        \ campaign or Facebook ad."
      properties:
        id:
          description: A unique identifier for the outreach. Can be an email campaign
            ID.
          example: 839488a60b
          title: Outreach ID
          type: string
      title: Outreach
      type: object
    Sources:
      description: The possible sources of any events that can trigger the webhook
        and whether they are enabled.
      properties:
        user:
          description: Whether the webhook is triggered by subscriber-initiated actions.
          example: true
          title: User
          type: boolean
        admin:
          description: Whether the webhook is triggered by admin-initiated actions
            in the web interface.
          example: true
          title: Admin
          type: boolean
        api:
          description: Whether the webhook is triggered by actions initiated via the
            API.
          example: true
          title: API
          type: boolean
      readOnly: true
      title: Sources
      type: object
    Capsule_CRM_Tracking_2:
      description: Deprecated
      example:
        notes: true
      properties:
        notes:
          description: Update contact notes for a campaign based on subscriber email
            addresses.
          title: Capsule Note
          type: boolean
      title: Capsule CRM Tracking
      type: object
    Capsule_CRM_Tracking_1:
      description: Deprecated
      example:
        notes: true
      properties:
        notes:
          description: Update contact notes for a campaign based on a subscriber's
            email address.
          title: Capsule Note
          type: boolean
      title: Capsule CRM Tracking
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner_allOf_content_attachments_inner:
      properties:
        name:
          type: string
        link_url:
          type: string
        description:
          type: string
        image_url:
          type: string
        call_to_action:
          type: string
      type: object
    getAllLandingPages_200_response:
      description: A collection of landing pages.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        landing_pages:
        - store_id: store_id
          created_by_source: created_by_source
          list_id: fde02ad86b
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          web_id: 6
          title: title
          tracking:
            track_with_mailchimp: true
            enable_restricted_data_processing: true
          url: url
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          template_id: 0
          id: 030092c2e1f0
          published_at: 2000-01-23T04:56:07.000+00:00
          status: published
          unpublished_at: 2000-01-23T04:56:07.000+00:00
        - store_id: store_id
          created_by_source: created_by_source
          list_id: fde02ad86b
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          web_id: 6
          title: title
          tracking:
            track_with_mailchimp: true
            enable_restricted_data_processing: true
          url: url
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          template_id: 0
          id: 030092c2e1f0
          published_at: 2000-01-23T04:56:07.000+00:00
          status: published
          unpublished_at: 2000-01-23T04:56:07.000+00:00
        total_items: 1
      properties:
        landing_pages:
          description: The landing pages on the account
          items:
            $ref: '#/components/schemas/Landing_Page'
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    List_Contact_1:
      description: "[Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/)\
        \ to comply with international spam laws."
      properties:
        company:
          description: The company name for the list.
          title: Company Name
          type: string
        address1:
          description: The street address for the list contact.
          title: Address
          type: string
        address2:
          description: The street address for the list contact.
          title: Address
          type: string
        city:
          description: The city for the list contact.
          title: City
          type: string
        state:
          description: The state for the list contact.
          title: State
          type: string
        zip:
          description: The postal or zip code for the list contact.
          title: Postal Code
          type: string
        country:
          description: A two-character ISO3166 country code. Defaults to US if invalid.
          title: Country Code
          type: string
        phone:
          description: The phone number for the list contact.
          title: Phone Number
          type: string
      required:
      - address1
      - city
      - company
      - country
      title: List Contact
      type: object
    Subscriber_Removed_from_Automation_Workflow:
      description: A summary of a subscriber removed from an Automation workflow.
      example:
        workflow_id: workflow_id
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        id: id
      properties:
        id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        workflow_id:
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
          title: Workflow ID
          type: string
        list_id:
          description: A string that uniquely identifies a list.
          readOnly: true
          title: List ID
          type: string
        email_address:
          description: The list member's email address.
          title: Email Address
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Subscriber Removed from Automation Workflow
      type: object
    Campaign_Folder:
      description: A folder used to organize campaigns.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        count: 0
        id: id
      properties:
        name:
          description: The name of the folder.
          title: Folder Name
          type: string
        id:
          description: A string that uniquely identifies this campaign folder.
          readOnly: true
          title: Folder Id
          type: string
        count:
          description: The number of campaigns in the folder.
          readOnly: true
          title: Campaign Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaign Folder
      type: object
    List_Contact_2:
      description: "[Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/)\
        \ to comply with international spam laws."
      properties:
        company:
          description: The company name for the list.
          title: Company Name
          type: string
        address1:
          description: The street address for the list contact.
          title: Address
          type: string
        address2:
          description: The street address for the list contact.
          title: Address
          type: string
        city:
          description: The city for the list contact.
          title: City
          type: string
        state:
          description: The state for the list contact.
          title: State
          type: string
        zip:
          description: The postal or zip code for the list contact.
          title: Postal Code
          type: string
        country:
          description: A two-character ISO3166 country code. Defaults to US if invalid.
          title: Country Code
          type: string
        phone:
          description: The phone number for the list contact.
          title: Phone Number
          type: string
      required:
      - address1
      - city
      - company
      - country
      - state
      - zip
      title: List Contact
      type: object
    Conversation:
      description: Details about an individual conversation. Conversation tracking
        is a feature available to paid accounts that lets you view replies to your
        campaigns in your Mailchimp account.
      example:
        from_email: from_email
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        subject: subject
        unread_messages: 6
        last_message:
          from_email: from_email
          read: true
          subject: subject
          message: message
          from_label: from_label
          timestamp: 2000-01-23T04:56:07.000+00:00
        id: id
        message_count: 0
        from_label: from_label
        campaign_id: campaign_id
      properties:
        id:
          description: A string that uniquely identifies this conversation.
          readOnly: true
          title: ID
          type: string
        message_count:
          description: The total number of messages in this conversation.
          readOnly: true
          title: Message Count
          type: integer
        campaign_id:
          description: The unique identifier of the campaign for this conversation.
          readOnly: true
          title: Campaign ID
          type: string
        list_id:
          description: The unique identifier of the list for this conversation.
          readOnly: true
          title: List ID
          type: string
        unread_messages:
          description: The number of unread messages in this conversation.
          readOnly: true
          title: Unread Messages
          type: integer
        from_label:
          description: A label representing the sender of this message.
          readOnly: true
          title: From Label
          type: string
        from_email:
          description: A label representing the email of the sender of this message.
          readOnly: true
          title: From Email
          type: string
        subject:
          description: The subject of the message.
          readOnly: true
          title: Subject
          type: string
        last_message:
          $ref: '#/components/schemas/Last_Message'
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Conversation
      type: object
    Merge_Field_Options_2:
      description: Extra options for some merge field types.
      properties:
        default_country:
          description: "In an address field, the default country code if none supplied."
          title: Default Country
          type: integer
        phone_format:
          description: "In a phone field, the phone number type: US or International."
          title: Phone Type
          type: string
        date_format:
          description: "In a date or birthday field, the format of the date."
          title: Date Type
          type: string
        choices:
          description: "In a radio or dropdown non-group field, the available options\
            \ for members to pick from."
          example:
          - First Choice
          - Second Choice
          - Third Choice
          items:
            type: string
          title: Choices
          type: array
      title: Merge Field Options
      type: object
    Merge_Field_Options_1:
      description: Extra options for some merge field types.
      properties:
        default_country:
          description: "In an address field, the default country code if none supplied."
          title: Default Country
          type: integer
        phone_format:
          description: "In a phone field, the phone number type: US or International."
          title: Phone Type
          type: string
        date_format:
          description: "In a date or birthday field, the format of the date."
          title: Date Type
          type: string
        choices:
          description: "In a radio or dropdown non-group field, the available options\
            \ for contacts to pick from."
          example:
          - First Choice
          - Second Choice
          - Third Choice
          items:
            type: string
          title: Choices
          type: array
        size:
          description: "In a text field, the default length of the text field."
          title: Text Field Size
          type: integer
      title: Merge Field Options
      type: object
    Growth_History:
      description: A month-by-month summary of a specific list's growth activity.
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        history:
        - null
        - null
        total_items: 0
      properties:
        history:
          description: "An array of objects, each representing a monthly growth report\
            \ for a list."
          items:
            $ref: '#/components/schemas/Growth_History'
          title: Members
          type: array
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Growth History
      type: object
    Events:
      description: A new event for a specific list member
      example:
        occurred_at: 2000-01-23T04:56:07.000+00:00
        is_syncing: true
        name: name
        properties:
          key: properties
      properties:
        name:
          description: "The name for this type of event ('purchased', 'visited', etc).\
            \ Must be 2-30 characters in length"
          title: Event Name
          type: string
        properties:
          additionalProperties:
            type: string
          description: An optional list of properties
          title: Properties
          type: object
        is_syncing:
          description: Events created with the is_syncing value set to `true` will
            not trigger automations.
          title: Is Syncing
          type: boolean
        occurred_at:
          description: The date and time the event occurred in ISO 8601 format.
          format: date-time
          title: Occurred Time
          type: string
      required:
      - name
      title: Events
      type: object
    Campaign_Tracking_Options_1:
      description: The tracking options for a campaign.
      example:
        salesforce:
          notes: true
          campaign: true
        goal_tracking: true
        capsule:
          notes: true
        clicktale: clicktale
        text_clicks: true
        ecomm360: true
        opens: true
        google_analytics: google_analytics
        html_clicks: true
      properties:
        opens:
          description: "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/).\
            \ Defaults to `true`. Cannot be set to false for variate campaigns."
          title: Opens
          type: boolean
        html_clicks:
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the HTML version of the campaign. Defaults to `true`. Cannot be set\
            \ to false for variate campaigns."
          title: HTML Click Tracking
          type: boolean
        text_clicks:
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the plain-text version of the campaign. Defaults to `true`. Cannot\
            \ be set to false for variate campaigns."
          title: Plain-Text Click Tracking
          type: boolean
        goal_tracking:
          description: Deprecated
          title: Mailchimp Goal Tracking
          type: boolean
        ecomm360:
          description: Whether to enable e-commerce tracking.
          title: E-commerce Tracking
          type: boolean
        google_analytics:
          description: "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/)\
            \ tracking (max of 50 bytes)."
          title: Google Analytics Tracking
          type: string
        clicktale:
          description: "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/)\
            \ tracking (max of 50 bytes)."
          title: ClickTale Analytics Tracking
          type: string
        salesforce:
          $ref: '#/components/schemas/Salesforce_CRM_Tracking_1'
        capsule:
          $ref: '#/components/schemas/Capsule_CRM_Tracking_2'
      title: Campaign Tracking Options
      type: object
    E_commerce_Order:
      description: Information about a specific order.
      example:
        discount_total: 6.027456183070403
        fulfillment_status: fulfillment_status
        tax_total: 1.4658129805029452
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        processed_at_foreign: 2015-07-15T19:28:00Z
        billing_address:
          country: United States
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          latitude: 45.427408
          province_code: GA
          country_code: US
          province: Georgia
          phone: "8675309"
          name: Freddie Chimpenheimer
          company: company
          postal_code: "30308"
          longitude: -75.68903
        currency_code: currency_code
        landing_site: http://www.example.com?source=abc
        order_url: order_url
        tracking_number: tracking_number
        id: id
        shipping_address:
          country: United States
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          latitude: 45.427408
          province_code: GA
          country_code: US
          province: Georgia
          phone: "8675309"
          name: Freddie Chimpenheimer
          company: company
          postal_code: "30308"
          longitude: -75.68903
        updated_at_foreign: 2015-07-15T19:28:00Z
        lines:
        - product_variant_title: product_variant_title
          quantity: 2
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          image_url: image_url
          price: 7.061401241503109
          product_id: product_id
          discount: 9.301444243932576
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        - product_variant_title: product_variant_title
          quantity: 2
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          image_url: image_url
          price: 7.061401241503109
          product_id: product_id
          discount: 9.301444243932576
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        promos:
        - code: code
          amount_discounted: 5.637376656633329
          type: fixed
        - code: code
          amount_discounted: 5.637376656633329
          type: fixed
        tracking_url: tracking_url
        campaign_id: 839488a60b
        cancelled_at_foreign: 2015-07-15T19:28:00Z
        store_id: store_id
        shipping_total: 5.962133916683182
        outreach:
          published_time: 2017-06-06T13:56:12Z
          name: Freddie's Jokes
          id: 839488a60b
          type: regular
        tracking_code: prec
        tracking_carrier: tracking_carrier
        financial_status: financial_status
        order_total: 0.8008281904610115
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: email_address
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            province_code: GA
            postal_code: "30308"
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          last_name: last_name
          created_at: 2015-07-15T19:28:00Z
          opt_in_status: true
          company: company
          id: id
          first_name: first_name
      properties:
        id:
          description: A unique identifier for the order.
          readOnly: true
          title: Order Foreign ID
          type: string
        customer:
          $ref: '#/components/schemas/E_commerce_Customer'
        store_id:
          description: The unique identifier for the store.
          readOnly: true
          title: Store Foreign ID
          type: string
        campaign_id:
          description: A string that uniquely identifies the campaign associated with
            an order.
          example: 839488a60b
          title: Campaign ID
          type: string
        landing_site:
          description: The URL for the page where the buyer landed when entering the
            shop.
          example: http://www.example.com?source=abc
          title: Landing Site
          type: string
        financial_status:
          description: "The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
          title: Financial Status
          type: string
        fulfillment_status:
          description: "The fulfillment status for the order. Use this parameter to\
            \ trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
          title: Fulfillment Status
          type: string
        currency_code:
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          title: Currency Code
          type: string
        order_total:
          description: The order total associated with an order.
          title: Order Total
          type: number
        order_url:
          description: The URL for the order.
          title: Order URL
          type: string
        discount_total:
          description: The total amount of the discounts to be applied to the price
            of the order.
          title: Discount Total
          type: number
        tax_total:
          description: The tax total associated with an order.
          title: Tax Total
          type: number
        shipping_total:
          description: The shipping total for the order.
          title: Shipping Total
          type: number
        tracking_code:
          description: The Mailchimp tracking code for the order. Uses the 'mc_tc'
            parameter in E-Commerce tracking URLs.
          enum:
          - prec
          title: Tracking Code
          type: string
        processed_at_foreign:
          description: The date and time the order was processed in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Processed Time
          type: string
        cancelled_at_foreign:
          description: The date and time the order was cancelled in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Cancel Time
          type: string
        updated_at_foreign:
          description: The date and time the order was updated in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Update Time
          type: string
        shipping_address:
          $ref: '#/components/schemas/Shipping_Address'
        billing_address:
          $ref: '#/components/schemas/Billing_Address'
        promos:
          description: The promo codes applied on the order
          items:
            $ref: '#/components/schemas/Promos_inner'
          title: Promos
          type: array
        lines:
          description: An array of the order's line items.
          items:
            $ref: '#/components/schemas/E_commerce_Order_Line_Item'
          title: Order Line Items
          type: array
        outreach:
          $ref: '#/components/schemas/Outreach'
        tracking_number:
          description: The tracking number associated with the order.
          title: Tracking number
          type: string
        tracking_carrier:
          description: The tracking carrier associated with the order.
          title: Tracking carrier
          type: string
        tracking_url:
          description: The tracking URL associated with the order.
          title: Tracking URL
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Order
      type: object
    Ecommerce_Stats:
      description: Ecommerce stats for the list member if the list is attached to
        a store.
      properties:
        total_revenue:
          description: The total revenue the list member has brought in.
          readOnly: true
          title: Total Revenue
          type: number
        number_of_orders:
          description: The total number of orders placed by the list member.
          readOnly: true
          title: Total Number of Orders
          type: number
        currency_code:
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          example: USD
          readOnly: true
          title: Currency
          type: string
      readOnly: true
      title: Ecommerce Stats
      type: object
    postCampaignsIdActionsCreateResend_request:
      properties:
        shortcut_type:
          description: Which campaign resend shortcut to use. Default is `to_non_openers`.
          enum:
          - to_non_openers
          - to_new_subscribers
          - to_non_clickers
          title: Resend Shortcut Type
          type: string
      type: object
    Campaign_Delivery_Status:
      description: Updates on campaigns in the process of sending.
      example:
        emails_sent: 6
        can_cancel: true
        emails_canceled: 3
        enabled: true
        status: delivering
      properties:
        enabled:
          description: Whether Campaign Delivery Status is enabled for this account
            and campaign.
          readOnly: true
          title: Delivery Status Enabled
          type: boolean
        can_cancel:
          description: Whether a campaign send can be canceled.
          readOnly: true
          title: Campaign Cancelable
          type: boolean
        status:
          description: The current state of a campaign delivery.
          enum:
          - delivering
          - delivered
          - canceling
          - canceled
          readOnly: true
          title: Campaign Delivery Status
          type: string
        emails_sent:
          description: The total number of emails confirmed sent for this campaign
            so far.
          readOnly: true
          title: Emails Sent
          type: integer
        emails_canceled:
          description: The total number of emails canceled for this campaign.
          readOnly: true
          title: Emails Canceled
          type: integer
      title: Campaign Delivery Status
      type: object
    E_commerce_Store_1:
      description: An individual store in an account.
      properties:
        id:
          description: The unique identifier for the store.
          example: example_store
          title: Store Foreign ID
          type: string
        list_id:
          description: The unique identifier for the list associated with the store.
            The `list_id` for a specific store cannot change.
          example: 1a2df69511
          title: List ID
          type: string
        name:
          description: The name of the store.
          example: Freddie's Cat Hat Emporium
          title: Store Name
          type: string
        platform:
          description: The e-commerce platform of the store.
          title: Platform
          type: string
        domain:
          description: The store domain. This parameter is required for Connected
            Sites and Google Ads.
          example: example.com
          title: Domain
          type: string
        is_syncing:
          description: "Whether to disable automations because the store is currently\
            \ [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations)."
          title: Is Syncing
          type: boolean
        email_address:
          description: The email address for the store.
          example: freddie@mailchimp.com
          title: Email Address
          type: string
        currency_code:
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          example: USD
          title: Currency
          type: string
        money_format:
          description: "The currency format for the store. For example: `$`, `£`,\
            \ etc."
          example: $
          title: Money Format
          type: string
        primary_locale:
          description: "The primary locale for the store. For example: `en`, `de`,\
            \ etc."
          example: fr
          title: Primary Locale
          type: string
        timezone:
          description: The timezone for the store.
          example: Eastern
          title: Timezone
          type: string
        phone:
          description: The store phone number.
          example: 404-444-4444
          title: Phone
          type: string
        address:
          $ref: '#/components/schemas/Address_1'
      required:
      - currency_code
      - id
      - list_id
      - name
      title: E-commerce Store
      type: object
    E_commerce_Store_2:
      description: An individual store in an account.
      properties:
        name:
          description: The name of the store.
          example: Freddie's Cat Hat Emporium
          title: Store Name
          type: string
        platform:
          description: The e-commerce platform of the store.
          title: Platform
          type: string
        domain:
          description: The store domain.
          example: example.com
          title: Domain
          type: string
        is_syncing:
          description: "Whether to disable automations because the store is currently\
            \ [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations)."
          title: Is Syncing
          type: boolean
        email_address:
          description: The email address for the store.
          example: freddie@mailchimp.com
          title: Email Address
          type: string
        currency_code:
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          example: USD
          title: Currency
          type: string
        money_format:
          description: "The currency format for the store. For example: `$`, `£`,\
            \ etc."
          example: $
          title: Money Format
          type: string
        primary_locale:
          description: "The primary locale for the store. For example: `en`, `de`,\
            \ etc."
          example: fr
          title: Primary Locale
          type: string
        timezone:
          description: The timezone for the store.
          example: Eastern
          title: Timezone
          type: string
        phone:
          description: The store phone number.
          example: 404-444-4444
          title: Phone
          type: string
        address:
          $ref: '#/components/schemas/Address_1'
      title: E-commerce Store
      type: object
    Results_inner:
      example:
        snippet: snippet
        campaign:
          archive_url: archive_url
          resendable: true
          settings:
            auto_footer: true
            subject_line: subject_line
            preview_text: preview_text
            use_conversation: true
            authenticate: true
            to_name: to_name
            timewarp: true
            title: title
            from_name: from_name
            auto_tweet: true
            auto_fb_post:
            - auto_fb_post
            - auto_fb_post
            fb_comments: true
            drag_and_drop: true
            reply_to: reply_to
            inline_css: true
            template_id: 5
            folder_id: folder_id
          variate_settings:
            send_times:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            combinations:
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            wait_time: 5
            subject_lines:
            - subject_lines
            - subject_lines
            contents:
            - contents
            - contents
            test_size: 2
            winning_combination_id: winning_combination_id
            reply_to_addresses:
            - reply_to_addresses
            - reply_to_addresses
            winner_criteria: opens
            winning_campaign_id: winning_campaign_id
            from_names:
            - from_names
            - from_names
          ab_split_opts:
            pick_winner: opens
            wait_time: 1
            wait_units: hours
            subject_b: subject_b
            subject_a: subject_a
            split_test: subject
            from_name_a: from_name_a
            from_name_b: from_name_b
            send_time_winner: send_time_winner
            reply_email_b: reply_email_b
            reply_email_a: reply_email_a
            send_time_a: 2000-01-23T04:56:07.000+00:00
            send_time_b: 2000-01-23T04:56:07.000+00:00
            split_size: 34
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          web_id: 0
          type: regular
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          needs_block_refresh: true
          send_time: 2000-01-23T04:56:07.000+00:00
          rss_opts:
            schedule:
              hour: 2
              weekly_send_day: sunday
              daily_send:
                sunday: true
                saturday: true
                tuesday: true
                wednesday: true
                thursday: true
                friday: true
                monday: true
              monthly_send_date: 3.1764016704468894
            last_sent: 2000-01-23T04:56:07.000+00:00
            constrain_rss_img: true
            feed_url: https://openapi-generator.tech
            frequency: daily
          parent_campaign_id: parent_campaign_id
          content_type: template
          social_card:
            image_url: image_url
            description: description
            title: title
          recipients:
            segment_opts:
              prebuilt_segment_id: subscribers-female
              match: any
              saved_segment_id: 5
              conditions:
              - "{}"
              - "{}"
            list_id: list_id
            segment_text: segment_text
            recipient_count: 1
            list_name: list_name
            list_is_active: true
          emails_sent: 6
          id: id
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
          long_archive_url: long_archive_url
          status: save
          report_summary:
            subscriber_clicks: 9
            click_rate: 9.369310271410669
            ecommerce:
              total_spent: 8.762042012749001
              total_revenue: 9.018348186070783
              total_orders: 6
            opens: 7
            clicks: 5
            unique_opens: 1
            open_rate: 4.965218492984954
          resend_shortcut_eligibility:
            to_non_openers:
              reason: reason
              is_eligible: true
            to_new_subscribers:
              reason: reason
              is_eligible: true
            to_non_clickers:
              reason: reason
              is_eligible: true
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
        snippet:
          title: Matching snippet
          type: string
      type: object
    E_commerce_Promo_Rule_2:
      description: Information about an Ecommerce Store's specific Promo Rule.
      properties:
        title:
          description: The title that will show up in promotion campaign. Restricted
            to UTF-8 characters with max length of 100 bytes.
          example: 50% off Total Order
          title: Title
          type: string
        description:
          description: The description of a promotion restricted to UTF-8 characters
            with max length 255.
          example: Save BIG during our summer sale!
          title: Description
          type: string
        starts_at:
          description: The date and time when the promotion is in effect in ISO 8601
            format.
          format: date-time
          title: Promo Start Time
          type: string
        ends_at:
          description: The date and time when the promotion ends. Must be after starts_at
            and in ISO 8601 format.
          format: Promo date-time
          title: End Time
          type: string
        amount:
          description: "The amount of the promo code discount. If 'type' is 'fixed',\
            \ the amount is treated as a monetary value. If 'type' is 'percentage',\
            \ amount must be a decimal value between 0.0 and 1.0, inclusive."
          example: 0.5
          format: float
          title: Amount
          type: number
        type:
          description: Type of discount. For free shipping set type to fixed.
          enum:
          - fixed
          - percentage
          title: Type
          type: string
        target:
          description: The target that the discount applies to.
          enum:
          - per_item
          - total
          - shipping
          title: Target
          type: string
        enabled:
          description: Whether the promo rule is currently enabled.
          example: true
          title: Enabled
          type: boolean
        created_at_foreign:
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
          title: Foreign Create Time
          type: string
        updated_at_foreign:
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
          title: Foreign Update Time
          type: string
      title: E-commerce Promo Rule
      type: object
    E_commerce_Promo_Rule_1:
      description: Information about an Ecommerce Store's specific Promo Rule.
      properties:
        id:
          description: "A unique identifier for the promo rule. If Ecommerce platform\
            \ does not support promo rule, use promo code id as promo rule id. Restricted\
            \ to UTF-8 characters with max length 50."
          title: Promo Rule Foreign ID
          type: string
        title:
          description: The title that will show up in promotion campaign. Restricted
            to UTF-8 characters with max length of 100 bytes.
          example: 50% off Total Order
          title: Title
          type: string
        description:
          description: The description of a promotion restricted to UTF-8 characters
            with max length 255.
          example: Save BIG during our summer sale!
          title: Description
          type: string
        starts_at:
          description: The date and time when the promotion is in effect in ISO 8601
            format.
          format: date-time
          title: Promo Start Time
          type: string
        ends_at:
          description: The date and time when the promotion ends. Must be after starts_at
            and in ISO 8601 format.
          format: Promo date-time
          title: End Time
          type: string
        amount:
          description: "The amount of the promo code discount. If 'type' is 'fixed',\
            \ the amount is treated as a monetary value. If 'type' is 'percentage',\
            \ amount must be a decimal value between 0.0 and 1.0, inclusive."
          example: 0.5
          format: float
          title: Amount
          type: number
        type:
          description: Type of discount. For free shipping set type to fixed.
          enum:
          - fixed
          - percentage
          title: Type
          type: string
        target:
          description: The target that the discount applies to.
          enum:
          - per_item
          - total
          - shipping
          title: Target
          type: string
        enabled:
          description: Whether the promo rule is currently enabled.
          example: true
          title: Enabled
          type: boolean
        created_at_foreign:
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
          title: Foreign Create Time
          type: string
        updated_at_foreign:
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
          title: Foreign Update Time
          type: string
      required:
      - amount
      - description
      - id
      - target
      - type
      title: E-commerce Promo Rule
      type: object
    getAutomations_200_response:
      description: "An array of objects, each representing an Automation workflow."
      example:
        automations:
        - start_time: 2000-01-23T04:56:07.000+00:00
          settings:
            auto_footer: true
            use_conversation: true
            authenticate: true
            reply_to: reply_to
            to_name: to_name
            inline_css: true
            title: title
            from_name: from_name
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          recipients:
            segment_opts:
              match: any
              saved_segment_id: 6
              conditions:
              - "{}"
              - "{}"
            store_id: 1a2df69xxx
            list_id: list_id
            list_name: list_name
            list_is_active: true
          emails_sent: 0
          trigger_settings:
            runtime:
              hours:
                type: send_asap
              days:
              - sunday
              - sunday
            workflow_emails_count: 1
            workflow_type: abandonedBrowse
            workflow_title: workflow_title
          id: id
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          status: save
          report_summary:
            subscriber_clicks: 9
            click_rate: 3.616076749251911
            opens: 5
            clicks: 7
            unique_opens: 5
            open_rate: 2.3021358869347655
        - start_time: 2000-01-23T04:56:07.000+00:00
          settings:
            auto_footer: true
            use_conversation: true
            authenticate: true
            reply_to: reply_to
            to_name: to_name
            inline_css: true
            title: title
            from_name: from_name
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          recipients:
            segment_opts:
              match: any
              saved_segment_id: 6
              conditions:
              - "{}"
              - "{}"
            store_id: 1a2df69xxx
            list_id: list_id
            list_name: list_name
            list_is_active: true
          emails_sent: 0
          trigger_settings:
            runtime:
              hours:
                type: send_asap
              days:
              - sunday
              - sunday
            workflow_emails_count: 1
            workflow_type: abandonedBrowse
            workflow_title: workflow_title
          id: id
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          status: save
          report_summary:
            subscriber_clicks: 9
            click_rate: 3.616076749251911
            opens: 5
            clicks: 7
            unique_opens: 5
            open_rate: 2.3021358869347655
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 2
      properties:
        automations:
          description: "An array of objects, each representing an Automation workflow."
          items:
            $ref: '#/components/schemas/Automation_Workflow'
          title: Automation Workflows
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    Automations:
      description: Details for the automations attached to this store.
      example:
        abandoned_browse:
          is_supported: false
          id: 355a72bfc3
          status: sending
        abandoned_cart:
          is_supported: false
          id: 355a72bfc3
          status: sending
      properties:
        abandoned_cart:
          $ref: '#/components/schemas/Abandoned_Cart_Automation'
        abandoned_browse:
          $ref: '#/components/schemas/Abandoned_Browse_Automation'
      readOnly: true
      title: Automations
      type: object
    Marketing_Permission:
      description: A single marketing permission a subscriber has either opted-in
        to or opted-out of.
      properties:
        marketing_permission_id:
          description: The id for the marketing permission on the list
          title: Marketing Permission ID
          type: string
        text:
          description: The text of the marketing permission.
          title: Marketing Permission Text
          type: string
        enabled:
          description: If the subscriber has opted-in to the marketing permission.
          title: Enabled
          type: boolean
      title: Marketing Permission
      type: object
    Automation_Emails:
      description: A summary of the emails in an Automation workflow.
      example:
        emails:
        - archive_url: archive_url
          settings:
            auto_footer: true
            subject_line: subject_line
            preview_text: preview_text
            authenticate: true
            title: title
            from_name: from_name
            auto_tweet: true
            auto_fb_post:
            - auto_fb_post
            - auto_fb_post
            fb_comments: true
            drag_and_drop: true
            reply_to: reply_to
            inline_css: true
            template_id: 2
          workflow_id: workflow_id
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          trigger_settings:
            runtime:
              hours:
                type: send_asap
              days:
              - sunday
              - sunday
            workflow_emails_count: 1
            workflow_type: abandonedBrowse
            workflow_title: workflow_title
          web_id: 33345484
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          needs_block_refresh: true
          start_time: 2000-01-23T04:56:07.000+00:00
          delay:
            amount: 6
            full_description: 1 day after subscribers purchase anything from your
              store
            action_description: subscribers purchase anything from your store
            action: previous_campaign_sent
            type: now
            direction: before
          send_time: 2000-01-23T04:56:07.000+00:00
          content_type: content_type
          social_card:
            image_url: image_url
            description: description
            title: title
          recipients:
            segment_opts:
              prebuilt_segment_id: subscribers-female
              match: any
              saved_segment_id: 5
              conditions:
              - "{}"
              - "{}"
            list_id: list_id
            segment_text: segment_text
            recipient_count: 5
            list_name: list_name
            list_is_active: true
          emails_sent: 1
          id: id
          position: 0
          has_logo_merge_tag: true
          status: save
          report_summary:
            subscriber_clicks: 4
            click_rate: 7.386281948385884
            opens: 7
            clicks: 2
            unique_opens: 9
            open_rate: 3.616076749251911
        - archive_url: archive_url
          settings:
            auto_footer: true
            subject_line: subject_line
            preview_text: preview_text
            authenticate: true
            title: title
            from_name: from_name
            auto_tweet: true
            auto_fb_post:
            - auto_fb_post
            - auto_fb_post
            fb_comments: true
            drag_and_drop: true
            reply_to: reply_to
            inline_css: true
            template_id: 2
          workflow_id: workflow_id
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          trigger_settings:
            runtime:
              hours:
                type: send_asap
              days:
              - sunday
              - sunday
            workflow_emails_count: 1
            workflow_type: abandonedBrowse
            workflow_title: workflow_title
          web_id: 33345484
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          needs_block_refresh: true
          start_time: 2000-01-23T04:56:07.000+00:00
          delay:
            amount: 6
            full_description: 1 day after subscribers purchase anything from your
              store
            action_description: subscribers purchase anything from your store
            action: previous_campaign_sent
            type: now
            direction: before
          send_time: 2000-01-23T04:56:07.000+00:00
          content_type: content_type
          social_card:
            image_url: image_url
            description: description
            title: title
          recipients:
            segment_opts:
              prebuilt_segment_id: subscribers-female
              match: any
              saved_segment_id: 5
              conditions:
              - "{}"
              - "{}"
            list_id: list_id
            segment_text: segment_text
            recipient_count: 5
            list_name: list_name
            list_is_active: true
          emails_sent: 1
          id: id
          position: 0
          has_logo_merge_tag: true
          status: save
          report_summary:
            subscriber_clicks: 4
            click_rate: 7.386281948385884
            opens: 7
            clicks: 2
            unique_opens: 9
            open_rate: 3.616076749251911
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 1
      properties:
        emails:
          description: "An array of objects, each representing an email in an Automation\
            \ workflow."
          items:
            $ref: '#/components/schemas/Automation_Workflow_Email'
          title: Emails
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Automation Emails
      type: object
    Products:
      description: A collection of a store's products.
      example:
        store_id: store_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 1
        products:
        - images:
          - _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            variant_ids:
            - variant_ids
            - variant_ids
            id: id
            url: url
          - _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            variant_ids:
            - variant_ids
            - variant_ids
            id: id
            url: url
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          image_url: image_url
          description: This is a cat hat.
          handle: cat-hat
          variants:
          - inventory_quantity: 6
            visibility: visibility
            updated_at: 2015-07-15T19:28:00Z
            backorders: backorders
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 0.8008281904610115
            image_url: image_url
            created_at: 2015-07-15T19:28:00Z
            id: id
            title: Cat Hat
            sku: sku
            url: url
          - inventory_quantity: 6
            visibility: visibility
            updated_at: 2015-07-15T19:28:00Z
            backorders: backorders
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 0.8008281904610115
            image_url: image_url
            created_at: 2015-07-15T19:28:00Z
            id: id
            title: Cat Hat
            sku: sku
            url: url
          title: Cat Hat
          type: Accessories
          currency_code: currency_code
          url: url
          vendor: vendor
          published_at_foreign: 2015-07-15T19:28:00Z
          id: id
        - images:
          - _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            variant_ids:
            - variant_ids
            - variant_ids
            id: id
            url: url
          - _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            variant_ids:
            - variant_ids
            - variant_ids
            id: id
            url: url
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          image_url: image_url
          description: This is a cat hat.
          handle: cat-hat
          variants:
          - inventory_quantity: 6
            visibility: visibility
            updated_at: 2015-07-15T19:28:00Z
            backorders: backorders
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 0.8008281904610115
            image_url: image_url
            created_at: 2015-07-15T19:28:00Z
            id: id
            title: Cat Hat
            sku: sku
            url: url
          - inventory_quantity: 6
            visibility: visibility
            updated_at: 2015-07-15T19:28:00Z
            backorders: backorders
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 0.8008281904610115
            image_url: image_url
            created_at: 2015-07-15T19:28:00Z
            id: id
            title: Cat Hat
            sku: sku
            url: url
          title: Cat Hat
          type: Accessories
          currency_code: currency_code
          url: url
          vendor: vendor
          published_at_foreign: 2015-07-15T19:28:00Z
          id: id
      properties:
        store_id:
          description: The store id.
          title: Store ID
          type: string
        products:
          description: "An array of objects, each representing a store product."
          items:
            $ref: '#/components/schemas/E_commerce_Product'
          title: Products
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Products
      type: object
    Interest_Groupings:
      description: Information about this list's interest categories.
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        categories:
        - list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          display_order: 0
          id: id
          title: title
          type: checkboxes
        - list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          display_order: 0
          id: id
          title: title
          type: checkboxes
        total_items: 6
      properties:
        list_id:
          description: The ID for the list that this category belongs to.
          readOnly: true
          title: List ID
          type: string
        categories:
          description: This array contains individual interest categories.
          items:
            $ref: '#/components/schemas/Interest_Category'
          title: Interest Categories
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Interest Groupings
      type: object
    Survey_Question_Report:
      description: The details of a survey question's report.
      example:
        range_low_label: range_low_label
        query: query
        average_rating: 2.5
        subscribe_checkbox_label: subscribe_checkbox_label
        type: pickOne
        range_high_label: range_high_label
        subscribe_checkbox_enabled: true
        survey_id: survey_id
        has_other: true
        placeholder_label: placeholder_label
        other_label: other_label
        contact_counts:
          new: 5
          known: 1
          unknown: 5
        is_required: true
        options:
        - count: 6
          label: label
          id: id
        - count: 6
          label: label
          id: id
        total_responses: 810
        id: id
        merge_field:
          id: 0
          label: label
          type: text
      properties:
        id:
          description: The ID of the survey question.
          readOnly: true
          title: Survey Question ID
          type: string
        survey_id:
          description: The unique ID of the survey.
          readOnly: true
          title: Survey ID
          type: string
        query:
          description: The query of the survey question.
          readOnly: true
          title: Query Text
          type: string
        type:
          description: The response type of the survey question.
          enum:
          - pickOne
          - pickMany
          - range
          - text
          - email
          readOnly: true
          title: Response Type
          type: string
        total_responses:
          description: The total number of responses to this question.
          example: 810
          readOnly: true
          title: Total Responses
          type: integer
        is_required:
          description: Whether this survey question is required to answer.
          readOnly: true
          title: Is Required
          type: boolean
        has_other:
          description: Whether this survey question has an 'other' option.
          readOnly: true
          title: Has Other Option
          type: boolean
        other_label:
          description: Label used for the 'other' option of this survey question.
          readOnly: true
          title: Other Option Label
          type: string
        average_rating:
          description: The average rating for this range question.
          example: 2.5
          format: float
          readOnly: true
          title: Average Rating for a Range Question
          type: number
        range_low_label:
          description: Label for the low end of the range.
          readOnly: true
          title: Range Low Label
          type: string
        range_high_label:
          description: Label for the high end of the range.
          readOnly: true
          title: Range High Label
          type: string
        placeholder_label:
          description: Placeholder text for this survey question's answer box.
          readOnly: true
          title: Placeholder Label
          type: string
        subscribe_checkbox_enabled:
          description: Whether the subscribe checkbox is shown for this email question.
          readOnly: true
          title: Is Subscribe Checkbox Enabled
          type: boolean
        subscribe_checkbox_label:
          description: Label used for the subscribe checkbox for this email question.
          readOnly: true
          title: Subscribe Checkbox Label
          type: string
        merge_field:
          $ref: '#/components/schemas/Merge_Field_3'
        options:
          description: The answer choices for this question.
          items:
            $ref: '#/components/schemas/Options_inner'
          readOnly: true
          title: Options
          type: array
        contact_counts:
          $ref: '#/components/schemas/Contact_Counts'
      title: Survey Question Report
      type: object
    Template_Folder:
      description: A folder used to organize templates.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        count: 0
        id: id
      properties:
        name:
          description: The name of the folder.
          title: Folder Name
          type: string
        id:
          description: A string that uniquely identifies this template folder.
          readOnly: true
          title: Folder Id
          type: string
        count:
          description: The number of templates in the folder.
          readOnly: true
          title: Template Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Template Folder
      type: object
    Subscriber_List:
      description: Information about a specific list.
      example:
        notify_on_subscribe: "false"
        subscribe_url_long: subscribe_url_long
        marketing_permissions: false
        permission_reminder: permission_reminder
        use_archive_bar: false
        notify_on_unsubscribe: "false"
        visibility: pub
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        date_created: 2000-01-23T04:56:07.000+00:00
        campaign_defaults:
          from_email: from_email
          subject: subject
          language: language
          from_name: from_name
        web_id: 0
        modules:
        - modules
        - modules
        email_type_option: true
        beamer_address: beamer_address
        has_welcome: false
        stats:
          cleaned_count: 2
          unsubscribe_count_since_send: 9
          member_count_since_send: 7
          click_rate: 6.84685269835264
          cleaned_count_since_send: 3
          total_contacts: 5
          campaign_count: 2
          avg_unsub_rate: 1.2315135367772556
          last_sub_date: 2000-01-23T04:56:07.000+00:00
          unsubscribe_count: 5
          target_sub_rate: 1.0246457001441578
          campaign_last_sent: 2000-01-23T04:56:07.000+00:00
          avg_sub_rate: 7.386281948385884
          member_count: 1
          merge_field_count: 4
          open_rate: 1.4894159098541704
          last_unsub_date: 2000-01-23T04:56:07.000+00:00
        contact:
          zip: zip
          country: country
          address2: address2
          city: city
          phone: phone
          address1: address1
          company: company
          state: state
        name: name
        list_rating: 6
        double_optin: false
        id: id
        subscribe_url_short: subscribe_url_short
      properties:
        id:
          description: A string that uniquely identifies this list.
          readOnly: true
          title: List ID
          type: string
        web_id:
          description: "The ID used in the Mailchimp web application. View this list\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`."
          readOnly: true
          title: List Web ID
          type: integer
        name:
          description: The name of the list.
          title: List Name
          type: string
        contact:
          $ref: '#/components/schemas/List_Contact'
        permission_reminder:
          description: "The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/)\
            \ for the list."
          title: Permission Reminder
          type: string
        use_archive_bar:
          default: false
          description: "Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ in archives by default."
          title: Use Archive Bar
          type: boolean
        campaign_defaults:
          $ref: '#/components/schemas/Campaign_Defaults'
        notify_on_subscribe:
          default: "false"
          description: "The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          title: Notify on Subscribe
          type: string
        notify_on_unsubscribe:
          default: "false"
          description: "The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          title: Notify on Unsubscribe
          type: string
        date_created:
          description: The date and time that this list was created in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Creation Date
          type: string
        list_rating:
          description: An auto-generated activity score for the list (0-5).
          readOnly: true
          title: List Rating
          type: integer
        email_type_option:
          description: "Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/).\
            \ When set to `true`, subscribers can choose whether they want to receive\
            \ HTML or plain-text emails. When set to `false`, subscribers will receive\
            \ HTML emails, with a plain-text alternative backup."
          title: Email Type Option
          type: boolean
        subscribe_url_short:
          description: "Our [url shortened](https://mailchimp.com/help/share-your-signup-form/)\
            \ version of this list's subscribe form."
          readOnly: true
          title: Subscribe URL Short
          type: string
        subscribe_url_long:
          description: The full version of this list's subscribe form (host will vary).
          readOnly: true
          title: Subscribe URL Long
          type: string
        beamer_address:
          description: "The list's [Email Beamer](https://mailchimp.com/help/use-email-beamer-to-create-a-campaign/)\
            \ address."
          readOnly: true
          title: Beamer Address
          type: string
        visibility:
          description: Legacy - visibility settings are no longer used
          enum:
          - pub
          - prv
          title: Visibility
          type: string
        double_optin:
          default: false
          description: Whether or not to require the subscriber to confirm subscription
            via email.
          title: Double Opt In
          type: boolean
        has_welcome:
          default: false
          description: "Whether or not this list has a welcome automation connected.\
            \ Welcome Automations: welcomeSeries, singleWelcome, emailFollowup."
          example: false
          title: Has Welcome
          type: boolean
        marketing_permissions:
          default: false
          description: Whether or not the list has marketing permissions (eg. GDPR)
            enabled.
          title: Marketing Permissions
          type: boolean
        modules:
          description: Any list-specific modules installed for this list.
          items:
            type: string
          readOnly: true
          title: Modules
          type: array
        stats:
          $ref: '#/components/schemas/Statistics'
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Subscriber List
      type: object
    Conditions:
      description: The conditions of the segment. Static segments (tags) and fuzzy
        segments don't have conditions.
      example:
        match: any
        conditions:
        - "{}"
        - "{}"
      properties:
        match:
          description: Match type.
          enum:
          - any
          - all
          title: Match
          type: string
        conditions:
          description: "Segment match conditions. There are multiple possible types,\
            \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
          items:
            type: object
            x-oneOf:
            - type: object
              title: Aim Segment
              description: Segment by interaction with a specific campaign.
              properties:
                condition_type:
                  type: string
                  x-value: Aim
                  enum:
                  - Aim
                field:
                  type: string
                  enum:
                  - aim
                  title: Segment Field
                  description: Segment by interaction with a specific campaign.
                  example: aim
                op:
                  type: string
                  enum:
                  - open
                  - click
                  - sent
                  - noopen
                  - noclick
                  - nosent
                  title: Segment Operator
                  description: "The status of the member with regard to their campaign\
                    \ interaction. One of the following: opened, clicked, was sent,\
                    \ didn't open, didn't click, or was not sent."
                  example: open
                value:
                  type: string
                  title: Segment Data
                  description: Either the web id value for a specific campaign or
                    'any' to account for subscribers who have/have not interacted
                    with any campaigns.
                  example: any
            - type: object
              title: Automation Segment
              description: Segment by interaction with an Automation workflow.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Automation
                  enum:
                  - Automation
                field:
                  type: string
                  enum:
                  - automation
                  title: Segment Field
                  description: Segment by interaction with an Automation workflow.
                  example: automation
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the automation\
                    \ workflow. One of the following: has started the workflow, has\
                    \ completed the workflow, has not started the workflow, or has\
                    \ not completed the workflow."
                  example: started
                value:
                  type: string
                  title: Segment Data
                  description: The web id for the automation workflow to segment against.
                  example: "2135217"
            - type: object
              title: Poll Activity Segment
              description: Segment by poll activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: CampaignPoll
                  enum:
                  - CampaignPoll
                field:
                  type: string
                  enum:
                  - poll
                  title: Segment Field
                  description: Segment by poll activity.
                  example: poll
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members have/have not interacted with a specific poll
                    in a Mailchimp email.
                  example: member
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the poll.
                  example: 409
            - type: object
              title: Conversation Segment
              description: Segment by interaction with a campaign via Conversations.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Conversation
                  enum:
                  - Conversation
                field:
                  type: string
                  enum:
                  - conversation
                  title: Segment Field
                  description: Segment by interaction with a campaign via Conversations.
                  example: conversation
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: "The status of a member's interaction with a conversation.\
                    \ One of the following: has replied or has not replied."
                  example: member
                value:
                  type: string
                  title: Segment Data
                  description: The web id value for a specific campaign or 'any' to
                    account for subscribers who have/have not interacted with any
                    campaigns.
                  example: any
            - type: object
              title: Date Segment
              description: Segment by a specific date field.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Date
                  enum:
                  - Date
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  - info_changed
                  - ecomm_date
                  title: Segment Field
                  description: "The type of date field to segment on: The opt-in time\
                    \ for a signup, the date the subscriber was last updated, or the\
                    \ date of their last ecomm purchase."
                  example: timestamp_opt
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  - not
                  - blank
                  - blank_not
                  - within
                  - notwithin
                  title: Segment Operator
                  description: "When the event took place:  Before, after, is a specific\
                    \ date, is not a specific date, is blank, or is not blank."
                  example: greater
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
                  example: date
                extra:
                  type: string
                  title: Segment Extra Value
                  description: "When segmenting on 'date' or 'campaign', the date\
                    \ for the segment formatted as YYYY-MM-DD or the web id for the\
                    \ campaign."
                  example: 2015-01-30
            - type: object
              title: Email Client Segment
              description: Segment by use of a particular email client.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EmailClient
                  enum:
                  - EmailClient
                field:
                  type: string
                  enum:
                  - email_client
                  title: Segment Field
                  description: Segment by use of a particular email client.
                  example: email_client
                op:
                  type: string
                  enum:
                  - client_is
                  - client_not
                  title: Segment Operator
                  description: "The operation to determine whether we select clients\
                    \ that match the value, or clients that do not match the value."
                  example: client_is
                value:
                  type: string
                  title: Segment Data
                  description: The name of the email client.
                  example: Gmail
            - type: object
              title: Language Segment
              description: Segment by language.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Language
                  enum:
                  - Language
                field:
                  type: string
                  enum:
                  - language
                  title: Segment Field
                  description: Segmenting based off of a subscriber's language.
                  example: language
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Whether the member's language is or is not set to a
                    specific language.
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: A two-letter language identifier.
                  example: en
            - type: object
              title: Member Rating Segment
              description: Segment by member rating.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: MemberRating
                  enum:
                  - MemberRating
                field:
                  type: string
                  enum:
                  - rating
                  title: Segment Field
                  description: Segment by member rating.
                  example: rating
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have have a rating that is/not exactly
                    a given number or members who have a rating greater/less than
                    a given number.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The star rating number to segment against.
                  example: 4
            - type: object
              title: Signup Source Segment
              description: Segment by signup source.
              required:
              - field
              - condition_type
              - op
              properties:
                condition_type:
                  type: string
                  enum:
                  - SignupSource
                  x-value: SignupSource
                  title: Type
                field:
                  type: string
                  enum:
                  - source
                  title: Segment Field
                  example: source
                op:
                  type: string
                  enum:
                  - source_is
                  - source_not
                  title: Segment Operator
                  description: Whether the member's signup source was/was not a particular
                    value.
                  example: source_is
                value:
                  type: string
                  title: Segment Data
                  description: The signup source.
                  example: List Import
            - type: object
              title: Survey Monkey Segment
              description: Segment by interaction with a SurveyMonkey survey.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SurveyMonkey
                  enum:
                  - SurveyMonkey
                field:
                  type: string
                  enum:
                  - survey_monkey
                  title: Segment Field
                  description: Segment by interaction with a SurveyMonkey survey.
                  example: survey_monkey
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the survey.One\
                    \ of the following: has started the survey, has completed the\
                    \ survey, has not started the survey, or has not completed the\
                    \ survey."
                  example: started
                value:
                  type: string
                  title: Survey ID
                  description: The unique ID of the survey monkey survey.
                  example: "32179586"
            - type: object
              title: VIP Segment
              description: Segment by VIP status.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: VIP
                  enum:
                  - VIP
                field:
                  type: string
                  enum:
                  - gmonkey
                  title: Segment Field
                  description: Segment by VIP status.
                  example: gmonkey
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Whether the member is or is not marked as VIP.
                  example: member
            - type: object
              title: Interests Segment
              description: Segment by an interest group merge field.
              properties:
                condition_type:
                  type: string
                  x-value: Interests
                  enum:
                  - Interests
                field:
                  type: string
                  title: Segment Field
                  description: Segmenting based on interest group information. This
                    should start with 'interests-' followed by the grouping id. Ex.
                    'interests-123'.
                  example: interests-123
                op:
                  type: string
                  enum:
                  - interestcontains
                  - interestcontainsall
                  - interestnotcontains
                  title: Segment Operator
                  description: "Whether the member is a part of one, all, or none\
                    \ of the groups."
                  example: interestcontains
                value:
                  type: array
                  title: Segment Value
                  description: "An array containing strings, each representing a group\
                    \ id."
                  items:
                    type: string
                    example:
                    - "44401"
                    - "44405"
                    - "44409"
            - type: object
              title: Ecommerce Category Segment
              description: Segment by purchases in specific items or categories.
              properties:
                condition_type:
                  type: string
                  x-value: EcommCategory
                  enum:
                  - EcommCategory
                field:
                  type: string
                  enum:
                  - ecomm_cat
                  - ecomm_prod
                  title: Segment Field
                  description: Segment by purchases in specific items or categories.
                  example: ecomm_cat
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "A member who has purchased from a category/specific\
                    \ item that is/is not a specific name, where the category/item\
                    \ name contains/doesn't contain a specific phrase or string, or\
                    \ a category/item name that starts/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: The ecommerce category/item information.
                  example: Product
            - type: object
              title: Ecommerce Number Segment
              description: "Segment by average spent total, number of orders, total\
                \ number of products purchased, or average number of products per\
                \ order."
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EcommNumber
                  enum:
                  - EcommNumber
                field:
                  type: string
                  enum:
                  - ecomm_spent_avg
                  - ecomm_orders
                  - ecomm_prod_all
                  - ecomm_avg_ord
                  title: Segment Field
                  description: "Segment by average spent total, number of orders,\
                    \ total number of products purchased, or average number of products\
                    \ per order."
                  example: ecomm_orders
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than the segment value."
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than this amount."
                  example: 42
            - type: object
              title: Ecommerce Purchased Segment
              description: Segment by whether someone has purchased anything.
              properties:
                condition_type:
                  type: string
                  x-value: EcommPurchased
                  enum:
                  - EcommPurchased
                field:
                  type: string
                  enum:
                  - ecomm_purchased
                  title: Segment Field
                  description: Segment by whether someone has purchased anything.
                  example: ecomm_purchased
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who have have ('member') or have not ('notmember')
                    purchased.
                  example: member
            - type: object
              title: Ecommerce Spent Segment
              description: Segment by amount spent on a single order or across all
                orders.
              properties:
                condition_type:
                  type: string
                  x-value: EcommSpent
                  enum:
                  - EcommSpent
                field:
                  type: string
                  enum:
                  - ecomm_spent_one
                  - ecomm_spent_all
                  title: Segment Field
                  description: Segment by amount spent on a single order or across
                    all orders.
                  example: ecomm_spent_one
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have spent 'more' or 'less' than then specified
                    value.
                  example: greater
                value:
                  type: integer
                  title: Segment Data
                  description: The total amount a member spent.
                  example: 42
            - type: object
              title: Ecommerce Purchased Store Segment
              description: Segment by purchases from a specific store.
              properties:
                condition_type:
                  type: string
                  x-value: EcommStore
                  enum:
                  - EcommStore
                field:
                  type: string
                  enum:
                  - ecomm_store
                  title: Segment Field
                  description: Segment by purchases from a specific store.
                  example: ecomm_store
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who have or have not purchased from a specific
                    store.
                  example: is
                value:
                  type: string
                  title: Segment Operator
                  description: The store id to segment against.
                  example: "289"
            - type: object
              title: Goal Activity Segment
              description: Segment by Goal activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalActivity
                  enum:
                  - GoalActivity
                field:
                  type: string
                  enum:
                  - goal
                  title: Segment Field
                  description: Segment by Goal activity.
                  example: goal
                op:
                  type: string
                  enum:
                  - is
                  - goal_not
                  - contains
                  - goal_notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "Whether the website URL is/not exactly, contains/doesn't\
                    \ contain, starts with/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The URL to check Goal activity against.
            - type: object
              title: Goal Timestamp Segment
              description: Segment by most recent interaction with a website.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalTimestamp
                  enum:
                  - GoalTimestamp
                field:
                  type: string
                  enum:
                  - goal_last_visited
                  title: Segment Field
                  description: Segment by most recent interaction with a website.
                  example: goal_last_visited
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  title: Segment Operator
                  description: "Whether the website activity happened after, before,\
                    \ or at a given timestamp."
                  example: greater
                value:
                  type: string
                  title: Segment Value
                  description: The date to check Goal activity against.
                  example: 2015-07-20 19:45:21
            - type: object
              title: Similar Subscribers Segment Member Segment
              description: Segment by similar subscribers.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: FuzzySegment
                  enum:
                  - FuzzySegment
                field:
                  type: string
                  enum:
                  - fuzzy_segment
                  title: Segment Field
                  description: Segment by similar subscribers.
                  example: fuzzy_segment
                op:
                  type: string
                  enum:
                  - fuzzy_is
                  - fuzzy_not
                  title: Segment Operator
                  description: Members who are/are not apart of a 'similar subscribers'
                    segment.
                  example: fuzzy_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the 'similar subscribers' segment.
                  example: 48433
            - type: object
              title: Static Segment Member Segment
              description: Segment by a given static segment.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: StaticSegment
                  enum:
                  - StaticSegment
                field:
                  type: string
                  enum:
                  - static_segment
                  title: Segment Field
                  description: Segment by a given static segment.
                  example: static_segment
                op:
                  type: string
                  enum:
                  - static_is
                  - static_not
                  title: Segment Operator
                  description: Members who are/are not apart of a static segment.
                  example: static_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the static segment.
                  example: 48433
            - type: object
              title: Location-Based Segment
              description: Segment by a specific country or US state.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoCountryState
                  enum:
                  - IPGeoCountryState
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeocountry
                  - ipgeonotcountry
                  - ipgeostate
                  - ipgeonotstate
                  title: Segment Operator
                  description: Segment members who are within a specific country or
                    US state.
                  example: ipgeocountry
                value:
                  type: string
                  title: Segment Data
                  description: The two-letter country code or US state abbreviation.
                  example: US
            - type: object
              title: Geolocation Segment
              description: Segment by a specific geographic region.
              required:
              - field
              - op
              - value
              - addr
              - lat
              - lng
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoIn
                  enum:
                  - IPGeoIn
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoin
                  - ipgeonotin
                  title: Segment Operator
                  description: Segment members who are within a specific geographic
                    region.
                  example: ipgeoin
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 42
                addr:
                  type: string
                  title: Segment Location Address
                  description: The address of the target location.
                  example: "Atlanta, GA, USA"
                lat:
                  type: string
                  title: Segment Location Latitude
                  description: The latitude of the target location.
                  example: "33.7489954"
                lng:
                  type: string
                  title: Segment Location Longitude
                  description: The longitude of the target location.
                  example: "-84.3879824"
            - type: object
              title: US Zip Code Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoInZip
                  enum:
                  - IPGeoInZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoinzip
                  title: Segment Operator
                  description: Segment members who are within a specific US zip code.
                  example: ipgeoinzip
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 25
                extra:
                  type: integer
                  title: Extra Data
                  description: The zip code to segment against.
                  example: 30318
            - type: object
              title: Unknown Location-Based Segment
              description: Segment members whose location information is unknown.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoUnknown
                  enum:
                  - IPGeoUnknown
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeounknown
                  title: Segment Operator
                  description: Segment members for which location information is unknown.
                  example: ipgeounknown
            - type: object
              title: Zip Code Location-Based Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoZip
                  enum:
                  - IPGeoZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoiszip
                  - ipgeonotzip
                  title: Segment Operator
                  description: Segment members who are/are not within a specific US
                    zip code.
                  example: ipgeonotzip
                value:
                  type: integer
                  title: Segment Data
                  description: The 5-digit zip code.
                  example: 30318
            - type: object
              title: Social Profiles Age Segment
              description: Segment by age ranges in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialAge
                  enum:
                  - SocialAge
                field:
                  type: string
                  enum:
                  - social_age
                  title: Segment Field
                  description: Segment by age ranges in Social Profiles data.
                  example: social_age
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-54
                  - 55+
                  title: Segment Operator
                  description: The age range to segment.
                  example: 35-54
            - type: object
              title: Social Profiles Gender Segment
              description: Segment by listed gender in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialGender
                  enum:
                  - SocialGender
                field:
                  type: string
                  enum:
                  - social_gender
                  title: Segment Field
                  description: Segment by listed gender in Social Profiles data.
                  example: social_gender
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The Social Profiles gender to segment.
                  example: female
            - type: object
              title: Social Profiles Influence Segment
              description: Segment by influence rating in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialInfluence
                  enum:
                  - SocialInfluence
                field:
                  type: string
                  enum:
                  - social_influence
                  title: Segment Field
                  description: Segment by influence rating in Social Profiles data.
                  example: social_influence
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have a rating that is/not or greater/less
                    than the rating provided.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The Social Profiles influence rating to segment.
                  example: 2
            - type: object
              title: Social Profiles Social Network Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkMember
                  enum:
                  - SocialNetworkMember
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who are/not on a given social network.
                  example: member
                value:
                  type: string
                  enum:
                  - twitter
                  - facebook
                  - linkedin
                  - flickr
                  - foursquare
                  - lastfm
                  - myspace
                  - quora
                  - vimeo
                  - yelp
                  - youtube
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter
            - type: object
              title: Social Profiles Social Network Follow Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkFollow
                  enum:
                  - SocialNetworkFollow
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - follow
                  - notfollow
                  title: Segment Operator
                  description: Members who are/not following a linked account on a
                    given social network.
                  example: follow
                value:
                  type: string
                  enum:
                  - twitter_follow
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter_follow
            - type: object
              title: Address Merge Field Segment
              description: Segment by an address-type merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: AddressMerge
                  enum:
                  - AddressMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address-type merge field to segment.
                  example: MMERGE3
                op:
                  type: string
                  enum:
                  - contains
                  - notcontain
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's address merge field contains/does
                    not contain a value or is/is not blank.
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Atlanta
            - type: object
              title: Address/Zip Merge Field Segment
              description: Segment by an address-type merge field within a given distance.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: ZipMerge
                  enum:
                  - ZipMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address or zip-type merge field to segment.
                  example: MMERGE2
                op:
                  type: string
                  enum:
                  - geoin
                  title: Segment Operator
                  description: Whether the member's address merge field is within
                    a given distance from a city or zip.
                  example: geoin
                value:
                  type: string
                  title: Segment Value
                  description: The distance from the city/zip.
                  example: "25"
                extra:
                  type: string
                  title: Segment Extra
                  description: The city or the zip being used to segment against.
                  example: "30318"
            - type: object
              title: Birthday Merge Field Segment
              description: Segment by a contact's birthday.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: BirthdayMerge
                  enum:
                  - BirthdayMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE4
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's birthday merge information is/is
                    not a certain date or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against (mm/dd).
                  example: 01/30
            - type: object
              title: Date Merge Field Segment
              description: Segment by a given date merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: DateMerge
                  enum:
                  - DateMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE5
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - less
                  - blank
                  - blank_not
                  - greater
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ is greater/less than a value or is/is not blank."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against.
                  example: 01/30/2015
            - type: object
              title: Dropdown/Radio Merge Field Segment
              description: An individual segment condition
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: SelectMerge
                  enum:
                  - SelectMerge
                field:
                  type: string
                  title: Segment Field
                  description: A merge field to segment.
                  example: MMERGE6
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  - notcontain
                  - contains
                  title: Segment Operator
                  description: Whether the member's merge information is/is not a
                    value or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Second Choice
            - type: object
              title: Text or Number Merge Field Segment
              description: Segment by a given text or number merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: TextMerge
                  enum:
                  - TextMerge
                field:
                  type: string
                  title: Segment Field
                  description: A text or number merge field to segment.
                  example: MMERGE7
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ contains/does not contain, starts/ends with, or is greater/less\
                    \ than a value"
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text or number merge field with.
                  example: Freddie's Jokes
            - type: object
              title: Email Segment
              description: Segment by email address.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: EmailAddress
                  enum:
                  - EmailAddress
                field:
                  type: string
                  enum:
                  - merge0
                  - EMAIL
                  title: Segment Field
                  description: Segmenting based off of a subscriber's email address.
                  example: EMAIL
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  title: Segment Operator
                  description: "Whether the email address is/not exactly, contains/doesn't\
                    \ contain, starts/ends with a string."
                value:
                  type: string
                  title: Segment Value
                  description: The value to compare the email against.
                  example: urist.mcvankab@freddiesjokes.com
            - type: object
              title: Predicted Gender Segment
              description: Segment by predicted gender.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedGender
                  enum:
                  - PredictedGender
                field:
                  type: string
                  enum:
                  - predicted_gender
                  title: Segment Field
                  description: Segment by predicted gender.
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The predicted gender to segment.
                  example: female
            - type: object
              title: Predicted Age Segment
              description: Segment by predicted age.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedAge
                  enum:
                  - PredictedAge
                field:
                  type: string
                  enum:
                  - predicted_age_range
                  title: Segment Field
                  description: Segment by predicted age.
                op:
                  type: string
                  enum:
                  - is
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-44
                  - 45-54
                  - 55-64
                  - 65+
                  title: Segment Operator
                  description: The predicted age to segment.
                  example: female
            - type: object
              title: New Subscribers Prebuilt Segment
              description: Segment by when people subscribed.
              properties:
                condition_type:
                  type: string
                  x-value: NewSubscribers
                  enum:
                  - NewSubscribers
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  title: Segment Field
                  description: Segment by when people subscribed.
                op:
                  type: string
                  enum:
                  - date_within
                  title: Segment Operator
                  description: "Whe the event took place, namely within a time frame."
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
            x-discriminator:
              type: string
              propertyName: condition_type
          title: Segment Type
          type: array
      title: Conditions
      type: object
    Click_Detail_Report:
      description: A list of URLs and unique IDs included in HTML and plain-text versions
        of a campaign.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        urls_clicked:
        - null
        - null
        total_items: 0
        campaign_id: campaign_id
      properties:
        urls_clicked:
          description: "An array of objects, each representing a specific URL contained\
            \ in the campaign."
          items:
            $ref: '#/components/schemas/Click_Detail_Report'
          title: URLs Clicked
          type: array
        campaign_id:
          description: The campaign id.
          readOnly: true
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Click Detail Report
      type: object
    Gallery_Folder:
      description: An individual folder listed in the File Manager.
      example:
        file_count: 6
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        created_by: created_by
      properties:
        id:
          description: The unique id for the folder.
          readOnly: true
          title: Folder ID
          type: integer
        name:
          description: The name of the folder.
          title: Folder Name
          type: string
        file_count:
          description: The number of files in the folder.
          readOnly: true
          title: File Count
          type: integer
        created_at:
          description: The date and time a file was added to the File Manager in ISO
            8601 format.
          format: date-time
          readOnly: true
          title: Created Date
          type: string
        created_by:
          description: The username of the profile that created the folder.
          readOnly: true
          title: Created By
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Gallery Folder
      type: object
    Connected_Sites:
      description: A collection of connected sites in the account.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        sites:
        - foreign_id: "a180c384d7db88b if created in-app, MC001 if created via API"
          store_id: MC001
          updated_at: 2015-07-15T19:35:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          domain: example.myshopify.com
          site_script:
            fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
              script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
              );</script>"
            url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
          created_at: 2015-07-15T19:28:00Z
          platform: "shopify, magento, bigcommerce, woocommerce"
        - foreign_id: "a180c384d7db88b if created in-app, MC001 if created via API"
          store_id: MC001
          updated_at: 2015-07-15T19:35:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          domain: example.myshopify.com
          site_script:
            fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
              script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
              );</script>"
            url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
          created_at: 2015-07-15T19:28:00Z
          platform: "shopify, magento, bigcommerce, woocommerce"
        total_items: 0
      properties:
        sites:
          description: "An array of objects, each representing a connected site."
          items:
            $ref: '#/components/schemas/Connected_Site'
          title: Connected Sites
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Connected Sites
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner_allOf_feedback:
      description: Check if this ad is connected to a facebook page
      properties:
        content:
          description: Feedback regarding the content of this Ad.
          type: string
        audience:
          description: Feedback regarding the audience of this Ad.
          type: string
        budget:
          description: Feedback regarding the budget of this Ad.
          type: string
        compliance:
          description: Feedback regarding the compliance of this Ad.
          type: string
      type: object
    Daily_Sending_Days:
      description: The days of the week to send a daily RSS Campaign.
      example:
        sunday: true
        saturday: true
        tuesday: true
        wednesday: true
        thursday: true
        friday: true
        monday: true
      properties:
        sunday:
          description: Sends the daily RSS Campaign on Sundays.
          title: Sunday
          type: boolean
        monday:
          description: Sends the daily RSS Campaign on Mondays.
          title: Monday
          type: boolean
        tuesday:
          description: Sends the daily RSS Campaign on Tuesdays.
          title: tuesday
          type: boolean
        wednesday:
          description: Sends the daily RSS Campaign on Wednesdays.
          title: Monday
          type: boolean
        thursday:
          description: Sends the daily RSS Campaign on Thursdays.
          title: Thursday
          type: boolean
        friday:
          description: Sends the daily RSS Campaign on Fridays.
          title: Friday
          type: boolean
        saturday:
          description: Sends the daily RSS Campaign on Saturdays.
          title: Saturday
          type: boolean
      title: Daily Sending Days
      type: object
    Problem_Detail_Document:
      description: An error generated by the Mailchimp API. Conforms to IETF draft
        'draft-nottingham-http-problem-06'.
      properties:
        type:
          description: "An absolute URI that identifies the problem type. When dereferenced,\
            \ it should provide human-readable documentation for the problem type."
          example: https://mailchimp.com/developer/marketing/docs/errors/
          title: Problem Type
          type: string
        title:
          description: "A short, human-readable summary of the problem type. It shouldn't\
            \ change based on the occurrence of the problem, except for purposes of\
            \ localization."
          example: Resource Not Found
          title: Error Title
          type: string
        status:
          description: "The HTTP status code (RFC2616, Section 6) generated by the\
            \ origin server for this occurrence of the problem."
          example: 404
          title: HTTP Status Code
          type: integer
        detail:
          description: "A human-readable explanation specific to this occurrence of\
            \ the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors)."
          example: The requested resource could not be found.
          title: Error Message
          type: string
        instance:
          description: A string that identifies this specific occurrence of the problem.
            Please provide this ID when contacting support.
          example: 995c5cb0-3280-4a6e-808b-3b096d0bb219
          title: Instance ID
          type: string
      required:
      - detail
      - instance
      - status
      - title
      - type
      title: Problem Detail Document
      type: object
    Bounces:
      description: An object describing the bounce summary for the campaign.
      example:
        hard_bounces: 5
        syntax_errors: 2
        soft_bounces: 5
      properties:
        hard_bounces:
          description: The total number of hard bounced email addresses.
          title: Hard Bounces
          type: integer
        soft_bounces:
          description: The total number of soft bounced email addresses.
          title: Soft Bounces
          type: integer
        syntax_errors:
          description: The total number of addresses that were syntax-related bounces.
          title: Syntax Errors
          type: integer
      title: Bounces
      type: object
    E_commerce_Product_2:
      description: Information about a specific product.
      properties:
        title:
          description: The title of a product.
          example: Cat Hat
          title: Title
          type: string
        handle:
          description: The handle of a product.
          example: cat-hat
          title: Handle
          type: string
        url:
          description: The URL for a product.
          title: Product URL
          type: string
        description:
          description: The description of a product.
          example: This is a cat hat.
          title: Description
          type: string
        type:
          description: The type of product.
          example: Accessories
          title: Type
          type: string
        vendor:
          description: The vendor for a product.
          title: Vendor
          type: string
        image_url:
          description: The image URL for a product.
          title: Product Image URL
          type: string
        variants:
          description: An array of the product's variants. At least one variant is
            required for each product. A variant can use the same `id` and `title`
            as the parent product.
          items:
            $ref: '#/components/schemas/E_commerce_Product_Variant_2'
          title: Product Variants
          type: array
        images:
          description: An array of the product's images.
          items:
            $ref: '#/components/schemas/E_commerce_Product_Image_2'
          title: Product Images
          type: array
        published_at_foreign:
          description: The date and time the product was published in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Publish Time
          type: string
      title: E-commerce Product
      type: object
    Batch_add_remove_List_members_to_from_static_segment:
      description: Batch add/remove List members to/from static segment
      example:
        members_removed:
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        total_added: 42
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        members_added:
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        total_removed: 42
        error_count: 42
        errors:
        - email_addresses:
          - email_addresses
          - email_addresses
          error: error
        - email_addresses:
          - email_addresses
          - email_addresses
          error: error
      properties:
        members_added:
          description: "An array of objects, each representing a new member that was\
            \ added to the static segment."
          items:
            $ref: '#/components/schemas/List_Members'
          title: Members Added
          type: array
        members_removed:
          description: "An array of objects, each representing an existing list member\
            \ that got deleted from the static segment."
          items:
            $ref: '#/components/schemas/List_Members'
          title: Members Removed
          type: array
        errors:
          description: "An array of objects, each representing an array of email addresses\
            \ that could not be added to the segment or removed and an error message\
            \ providing more details."
          items:
            $ref: '#/components/schemas/Errors_inner_1'
          title: Errors
          type: array
        total_added:
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
          title: Item Count
          type: integer
        total_removed:
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
          title: Item Count
          type: integer
        error_count:
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Batch add/remove List members to/from static segment
      type: object
    Collection_Authorization:
      description: Do particular authorization constraints around this collection
        limit creation of new instances?
      example:
        may_create: true
        current_total_instances: 4
        max_instances: 1
      properties:
        may_create:
          description: May the user create additional instances of this resource?
          title: Resource creation authorization
          type: boolean
        max_instances:
          description: "How many total instances of this resource are allowed? This\
            \ is independent of any filter conditions applied to the query. As a special\
            \ case, -1 indicates unlimited."
          title: Max instances
          type: integer
        current_total_instances:
          description: "How many total instances of this resource are already in use?\
            \ This is independent of any filter conditions applied to the query. Value\
            \ may be larger than max_instances. As a special case, -1 is returned\
            \ when access is unlimited."
          title: Current total instances
          type: integer
      required:
      - max_instances
      - may_create
      title: Collection Authorization
      type: object
    List_Locations:
      description: A summary of List's locations.
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        locations:
        - cc: cc
          country: country
          total: 6
          percent: 0.8008281904610115
        - cc: cc
          country: country
          total: 6
          percent: 0.8008281904610115
        total_items: 1
      properties:
        locations:
          description: "An array of objects, each representing a list's top subscriber\
            \ locations."
          items:
            $ref: '#/components/schemas/List_Location'
          title: Locations
          type: array
        list_id:
          description: The unique id for the list.
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: List Locations
      type: object
    Campaign_Folders:
      description: A list of campaign folders
      example:
        folders:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          count: 0
          id: id
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          count: 0
          id: id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
      properties:
        folders:
          description: An array of objects representing campaign folders.
          items:
            $ref: '#/components/schemas/Campaign_Folder'
          title: Campaign Folders
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaign Folders
      type: object
    Campaigns:
      description: Campaigns and Snippets found for given search term.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        results:
        - snippet: snippet
          campaign:
            archive_url: archive_url
            resendable: true
            settings:
              auto_footer: true
              subject_line: subject_line
              preview_text: preview_text
              use_conversation: true
              authenticate: true
              to_name: to_name
              timewarp: true
              title: title
              from_name: from_name
              auto_tweet: true
              auto_fb_post:
              - auto_fb_post
              - auto_fb_post
              fb_comments: true
              drag_and_drop: true
              reply_to: reply_to
              inline_css: true
              template_id: 5
              folder_id: folder_id
            variate_settings:
              send_times:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
              combinations:
              - subject_line: 7
                send_time: 9
                reply_to: 2
                recipients: 7
                id: id
                from_name: 3
                content_description: 4
              - subject_line: 7
                send_time: 9
                reply_to: 2
                recipients: 7
                id: id
                from_name: 3
                content_description: 4
              wait_time: 5
              subject_lines:
              - subject_lines
              - subject_lines
              contents:
              - contents
              - contents
              test_size: 2
              winning_combination_id: winning_combination_id
              reply_to_addresses:
              - reply_to_addresses
              - reply_to_addresses
              winner_criteria: opens
              winning_campaign_id: winning_campaign_id
              from_names:
              - from_names
              - from_names
            ab_split_opts:
              pick_winner: opens
              wait_time: 1
              wait_units: hours
              subject_b: subject_b
              subject_a: subject_a
              split_test: subject
              from_name_a: from_name_a
              from_name_b: from_name_b
              send_time_winner: send_time_winner
              reply_email_b: reply_email_b
              reply_email_a: reply_email_a
              send_time_a: 2000-01-23T04:56:07.000+00:00
              send_time_b: 2000-01-23T04:56:07.000+00:00
              split_size: 34
            create_time: 2000-01-23T04:56:07.000+00:00
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            web_id: 0
            type: regular
            tracking:
              salesforce:
                notes: true
                campaign: true
              goal_tracking: true
              capsule:
                notes: true
              clicktale: clicktale
              text_clicks: true
              ecomm360: true
              opens: true
              google_analytics: google_analytics
              html_clicks: true
            needs_block_refresh: true
            send_time: 2000-01-23T04:56:07.000+00:00
            rss_opts:
              schedule:
                hour: 2
                weekly_send_day: sunday
                daily_send:
                  sunday: true
                  saturday: true
                  tuesday: true
                  wednesday: true
                  thursday: true
                  friday: true
                  monday: true
                monthly_send_date: 3.1764016704468894
              last_sent: 2000-01-23T04:56:07.000+00:00
              constrain_rss_img: true
              feed_url: https://openapi-generator.tech
              frequency: daily
            parent_campaign_id: parent_campaign_id
            content_type: template
            social_card:
              image_url: image_url
              description: description
              title: title
            recipients:
              segment_opts:
                prebuilt_segment_id: subscribers-female
                match: any
                saved_segment_id: 5
                conditions:
                - "{}"
                - "{}"
              list_id: list_id
              segment_text: segment_text
              recipient_count: 1
              list_name: list_name
              list_is_active: true
            emails_sent: 6
            id: id
            delivery_status:
              emails_sent: 6
              can_cancel: true
              emails_canceled: 3
              enabled: true
              status: delivering
            long_archive_url: long_archive_url
            status: save
            report_summary:
              subscriber_clicks: 9
              click_rate: 9.369310271410669
              ecommerce:
                total_spent: 8.762042012749001
                total_revenue: 9.018348186070783
                total_orders: 6
              opens: 7
              clicks: 5
              unique_opens: 1
              open_rate: 4.965218492984954
            resend_shortcut_eligibility:
              to_non_openers:
                reason: reason
                is_eligible: true
              to_new_subscribers:
                reason: reason
                is_eligible: true
              to_non_clickers:
                reason: reason
                is_eligible: true
        - snippet: snippet
          campaign:
            archive_url: archive_url
            resendable: true
            settings:
              auto_footer: true
              subject_line: subject_line
              preview_text: preview_text
              use_conversation: true
              authenticate: true
              to_name: to_name
              timewarp: true
              title: title
              from_name: from_name
              auto_tweet: true
              auto_fb_post:
              - auto_fb_post
              - auto_fb_post
              fb_comments: true
              drag_and_drop: true
              reply_to: reply_to
              inline_css: true
              template_id: 5
              folder_id: folder_id
            variate_settings:
              send_times:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
              combinations:
              - subject_line: 7
                send_time: 9
                reply_to: 2
                recipients: 7
                id: id
                from_name: 3
                content_description: 4
              - subject_line: 7
                send_time: 9
                reply_to: 2
                recipients: 7
                id: id
                from_name: 3
                content_description: 4
              wait_time: 5
              subject_lines:
              - subject_lines
              - subject_lines
              contents:
              - contents
              - contents
              test_size: 2
              winning_combination_id: winning_combination_id
              reply_to_addresses:
              - reply_to_addresses
              - reply_to_addresses
              winner_criteria: opens
              winning_campaign_id: winning_campaign_id
              from_names:
              - from_names
              - from_names
            ab_split_opts:
              pick_winner: opens
              wait_time: 1
              wait_units: hours
              subject_b: subject_b
              subject_a: subject_a
              split_test: subject
              from_name_a: from_name_a
              from_name_b: from_name_b
              send_time_winner: send_time_winner
              reply_email_b: reply_email_b
              reply_email_a: reply_email_a
              send_time_a: 2000-01-23T04:56:07.000+00:00
              send_time_b: 2000-01-23T04:56:07.000+00:00
              split_size: 34
            create_time: 2000-01-23T04:56:07.000+00:00
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            web_id: 0
            type: regular
            tracking:
              salesforce:
                notes: true
                campaign: true
              goal_tracking: true
              capsule:
                notes: true
              clicktale: clicktale
              text_clicks: true
              ecomm360: true
              opens: true
              google_analytics: google_analytics
              html_clicks: true
            needs_block_refresh: true
            send_time: 2000-01-23T04:56:07.000+00:00
            rss_opts:
              schedule:
                hour: 2
                weekly_send_day: sunday
                daily_send:
                  sunday: true
                  saturday: true
                  tuesday: true
                  wednesday: true
                  thursday: true
                  friday: true
                  monday: true
                monthly_send_date: 3.1764016704468894
              last_sent: 2000-01-23T04:56:07.000+00:00
              constrain_rss_img: true
              feed_url: https://openapi-generator.tech
              frequency: daily
            parent_campaign_id: parent_campaign_id
            content_type: template
            social_card:
              image_url: image_url
              description: description
              title: title
            recipients:
              segment_opts:
                prebuilt_segment_id: subscribers-female
                match: any
                saved_segment_id: 5
                conditions:
                - "{}"
                - "{}"
              list_id: list_id
              segment_text: segment_text
              recipient_count: 1
              list_name: list_name
              list_is_active: true
            emails_sent: 6
            id: id
            delivery_status:
              emails_sent: 6
              can_cancel: true
              emails_canceled: 3
              enabled: true
              status: delivering
            long_archive_url: long_archive_url
            status: save
            report_summary:
              subscriber_clicks: 9
              click_rate: 9.369310271410669
              ecommerce:
                total_spent: 8.762042012749001
                total_revenue: 9.018348186070783
                total_orders: 6
              opens: 7
              clicks: 5
              unique_opens: 1
              open_rate: 4.965218492984954
            resend_shortcut_eligibility:
              to_non_openers:
                reason: reason
                is_eligible: true
              to_new_subscribers:
                reason: reason
                is_eligible: true
              to_non_clickers:
                reason: reason
                is_eligible: true
        total_items: 0
      properties:
        results:
          description: An array of matching campaigns and snippets.
          items:
            $ref: '#/components/schemas/Results_inner'
          title: Results
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaigns
      type: object
    E_commerce_Product_1:
      description: Information about a specific product.
      properties:
        id:
          description: A unique identifier for the product.
          title: Product Foreign ID
          type: string
        title:
          description: The title of a product.
          example: Cat Hat
          title: Title
          type: string
        handle:
          description: The handle of a product.
          example: cat-hat
          title: Handle
          type: string
        url:
          description: The URL for a product.
          title: Product URL
          type: string
        description:
          description: The description of a product.
          example: This is a cat hat.
          title: Description
          type: string
        type:
          description: The type of product.
          example: Accessories
          title: Type
          type: string
        vendor:
          description: The vendor for a product.
          title: Vendor
          type: string
        image_url:
          description: The image URL for a product.
          title: Product Image URL
          type: string
        variants:
          description: An array of the product's variants. At least one variant is
            required for each product. A variant can use the same `id` and `title`
            as the parent product.
          items:
            $ref: '#/components/schemas/E_commerce_Product_Variant_1'
          title: Product Variants
          type: array
        images:
          description: An array of the product's images.
          items:
            $ref: '#/components/schemas/E_commerce_Product_Image_1'
          title: Product Images
          type: array
        published_at_foreign:
          description: The date and time the product was published.
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Publish Time
          type: string
      required:
      - id
      - title
      - variants
      title: E-commerce Product
      type: object
    File_Manager_Folders:
      description: A list of all folders in the File Manager.
      example:
        folders:
        - file_count: 6
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          created_by: created_by
        - file_count: 6
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          created_by: created_by
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 1
      properties:
        folders:
          description: A list of all folders in the File Manager.
          items:
            $ref: '#/components/schemas/Gallery_Folder'
          title: File Manager Folders
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: File Manager Folders
      type: object
    Merge_Field_1:
      description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for an audience."
      properties:
        tag:
          description: "The merge tag used for Mailchimp campaigns and [adding contact\
            \ information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts)."
          title: Merge Tag
          type: string
        name:
          description: The name of the merge field (audience field).
          title: Merge Field Name
          type: string
        type:
          description: "The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for the merge field."
          enum:
          - text
          - number
          - address
          - phone
          - date
          - url
          - imageurl
          - radio
          - dropdown
          - birthday
          - zip
          title: Merge Field Type
          type: string
        required:
          description: Whether the merge field is required to import a contact.
          title: Required
          type: boolean
        default_value:
          description: The default value for the merge field if `null`.
          title: Default Value
          type: string
        public:
          description: Whether the merge field is displayed on the signup form.
          title: Merge Field Public Status
          type: boolean
        display_order:
          description: The order that the merge field displays on the list signup
            form.
          title: Display Order
          type: integer
        options:
          $ref: '#/components/schemas/Merge_Field_Options_1'
        help_text:
          description: Extra text to help the subscriber fill out the form.
          title: Merge Field Help Text
          type: string
      required:
      - name
      - type
      title: Merge Field
      type: object
    Merge_Field_3:
      description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for an audience."
      example:
        id: 0
        label: label
        type: text
      properties:
        id:
          description: An unchanging id for the merge field.
          readOnly: true
          title: Merge Field ID
          type: integer
        label:
          description: "The [label](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for the merge field."
          readOnly: true
          title: Merge Field Label
          type: string
        type:
          description: "The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for the merge field."
          enum:
          - text
          - number
          - address
          - phone
          - date
          - url
          - imageurl
          - radio
          - dropdown
          - birthday
          - zip
          readOnly: true
          title: Merge Field Type
          type: string
      readOnly: true
      title: Merge Field
      type: object
    Tracked_Conversations:
      description: A collection of this account's tracked conversations.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        conversations:
        - from_email: from_email
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          subject: subject
          unread_messages: 6
          last_message:
            from_email: from_email
            read: true
            subject: subject
            message: message
            from_label: from_label
            timestamp: 2000-01-23T04:56:07.000+00:00
          id: id
          message_count: 0
          from_label: from_label
          campaign_id: campaign_id
        - from_email: from_email
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          subject: subject
          unread_messages: 6
          last_message:
            from_email: from_email
            read: true
            subject: subject
            message: message
            from_label: from_label
            timestamp: 2000-01-23T04:56:07.000+00:00
          id: id
          message_count: 0
          from_label: from_label
          campaign_id: campaign_id
        total_items: 1
      properties:
        conversations:
          description: A list of conversations.
          items:
            $ref: '#/components/schemas/Conversation'
          title: Conversations
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Tracked Conversations
      type: object
    Merge_Field_2:
      description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for an audience."
      properties:
        tag:
          description: "The merge tag used for Mailchimp campaigns and [adding contact\
            \ information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts)."
          title: Merge Tag
          type: string
        name:
          description: The name of the merge field (audience field).
          title: Merge Field Name
          type: string
        required:
          description: Whether the merge field is required to import a contact.
          title: Required
          type: boolean
        default_value:
          description: The default value for the merge field if `null`.
          title: Default Value
          type: string
        public:
          description: Whether the merge field is displayed on the signup form.
          title: Merge Field Public Status
          type: boolean
        display_order:
          description: The order that the merge field displays on the list signup
            form.
          title: Display Order
          type: integer
        options:
          $ref: '#/components/schemas/Merge_Field_Options_2'
        help_text:
          description: Extra text to help the subscriber fill out the form.
          title: Merge Field Help Text
          type: string
      required:
      - name
      title: Merge Field
      type: object
    Conversation_Message:
      description: An individual message in a conversation. Conversation tracking
        is a feature available to paid accounts that lets you view replies to your
        campaigns in your Mailchimp account.
      example:
        from_email: from_email
        read: true
        list_id: 0
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        conversation_id: conversation_id
        subject: subject
        id: id
        message: message
        from_label: from_label
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: A string that uniquely identifies this message
          readOnly: true
          title: ID
          type: string
        conversation_id:
          description: A string that identifies this message's conversation
          readOnly: true
          title: Conversation ID
          type: string
        list_id:
          description: The list's web ID
          readOnly: true
          title: List ID
          type: integer
        from_label:
          description: A label representing the sender of this message
          readOnly: true
          title: From Label
          type: string
        from_email:
          description: A label representing the email of the sender of this message
          title: From Email
          type: string
        subject:
          description: The subject of this message
          title: Subject
          type: string
        message:
          description: The plain-text content of the message
          title: Message
          type: string
        read:
          description: Whether this message has been marked as read
          title: Read
          type: boolean
        timestamp:
          description: The date and time the message was either sent or received in
            ISO 8601 format.
          format: date-time
          readOnly: true
          title: Timestamp
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Conversation Message
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner_allOf_site:
      description: Connected Site
      properties:
        id:
          description: The ID of this connected site.
          example: 43
          type: integer
        name:
          description: The name of the connected site
          example: My Connected Site
          type: string
        url:
          description: The URL for this connected site.
          example: www.example.com
          type: string
      type: object
    Collection_of_Element_style_for_List_Signup_Forms:
      description: Collection of Element style for List Signup Forms.
      example:
        options:
        - property: background-color
          value: '#111111'
        - property: background-color
          value: '#111111'
        selector: page_background
      properties:
        selector:
          description: A string that identifies the element selector.
          enum:
          - page_background
          - page_header
          - page_outer_wrapper
          - body_background
          - body_link_style
          - forms_buttons
          - forms_buttons_hovered
          - forms_field_label
          - forms_field_text
          - forms_required
          - forms_required_legend
          - forms_help_text
          - forms_errors
          - monkey_rewards_badge
          example: page_background
          title: Selector
          type: string
        options:
          description: A collection of options for a selector.
          items:
            $ref: '#/components/schemas/An_option_for_Signup_Form_Styles'
          title: Options
          type: array
      title: Collection of Element style for List Signup Forms
      type: object
    Ecommerce_Product_Images:
      description: A collection of a product's images.
      example:
        store_id: store_id
        images:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          variant_ids:
          - variant_ids
          - variant_ids
          id: id
          url: url
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          variant_ids:
          - variant_ids
          - variant_ids
          id: id
          url: url
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        product_id: product_id
        total_items: 0
      properties:
        store_id:
          description: The store id.
          title: Store ID
          type: string
        product_id:
          description: The product id.
          title: Product ID
          type: string
        images:
          description: "An array of objects, each representing a product image resource."
          items:
            $ref: '#/components/schemas/E_commerce_Product_Image'
          title: Ecommerce Product Images
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Ecommerce Product Images
      type: object
    Sent_To:
      description: A list of subscribers who were sent a specific campaign.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        sent_to:
        - null
        - null
        total_items: 0
        campaign_id: campaign_id
      properties:
        sent_to:
          description: "An array of objects, each representing a campaign recipient."
          items:
            $ref: '#/components/schemas/Sent_To'
          title: Sent To
          type: array
        campaign_id:
          description: The campaign id.
          readOnly: true
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Sent-To
      type: object
    Abandoned_Cart_Automation:
      description: abandonedCart automation details.
      example:
        is_supported: false
        id: 355a72bfc3
        status: sending
      properties:
        is_supported:
          description: Whether this store supports the abandonedCart automation.
          example: false
          readOnly: true
          title: Is Supported
          type: boolean
        id:
          description: Unique ID of automation parent campaign.
          example: 355a72bfc3
          readOnly: true
          title: ID
          type: string
        status:
          description: Status of the abandonedCart automation.
          enum:
          - save
          - sending
          - paused
          example: sending
          readOnly: true
          title: Status
          type: string
      readOnly: true
      title: Abandoned Cart Automation
      type: object
    Landing_Page_Content:
      description: The HTML content for a landing page.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        json: json
        html: html
      properties:
        html:
          description: The raw HTML for the landing page.
          title: Landing Page HTML
          type: string
        json:
          description: The JSON Structure for the landing page
          title: Landing Page JSON
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Landing Page Content
      type: object
    Member_Notes:
      description: A specific note for a specific member.
      example:
        email_id: email_id
        note: note
        updated_at: 2000-01-23T04:56:07.000+00:00
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        contact_id: contact_id
        created_by: created_by
      properties:
        id:
          description: The note id.
          readOnly: true
          title: Note ID
          type: integer
        created_at:
          description: The date and time the note was created in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Created Time
          type: string
        created_by:
          description: The author of the note.
          readOnly: true
          title: Author
          type: string
        updated_at:
          description: The date and time the note was last updated in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Updated Time
          type: string
        note:
          description: The content of the note.
          title: Note
          type: string
        list_id:
          description: The unique id for the list.
          readOnly: true
          title: List ID
          type: string
        email_id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        contact_id:
          description: "As Mailchimp evolves beyond email, you may eventually have\
            \ contacts without email addresses. While the `email_id` is the MD5 hash\
            \ of their email address, this `contact_id` is agnostic of contact’s inclusion\
            \ of an email address."
          readOnly: true
          title: Contact ID
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Member Notes
      type: object
    Salesforce_CRM_Tracking:
      description: Deprecated
      example:
        notes: true
        campaign: true
      properties:
        campaign:
          description: Create a campaign in a connected Salesforce account.
          title: Salesforce Campaign
          type: boolean
        notes:
          description: Update contact notes for a campaign based on a subscriber's
            email address.
          title: Salesforce Note
          type: boolean
      title: Salesforce CRM Tracking
      type: object
    Automation_Workflow_Runtime_Settings:
      description: A workflow's runtime settings for an Automation.
      example:
        hours:
          type: send_asap
        days:
        - sunday
        - sunday
      properties:
        days:
          description: The days an Automation workflow can send.
          items:
            enum:
            - sunday
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            type: string
          title: Days
          type: array
        hours:
          $ref: '#/components/schemas/Hours'
      title: Automation Workflow Runtime Settings
      type: object
    Variate_Contents_inner_1:
      properties:
        content_label:
          description: The label used to identify the content option.
          title: Content Label
          type: string
        plain_text:
          description: "The plain-text portion of the campaign. If left unspecified,\
            \ we'll generate this automatically."
          title: Plain Text
          type: string
        html:
          description: The raw HTML for the campaign.
          title: Campaign HTML
          type: string
        url:
          description: "When importing a campaign, the URL for the HTML."
          title: Campaign URL
          type: string
        template:
          $ref: '#/components/schemas/Template_Content_1'
        archive:
          $ref: '#/components/schemas/Upload_Archive'
      required:
      - content_label
      type: object
    Signup_form_header_options:
      description: Options for customizing your signup form header.
      example:
        image_height: "200"
        image_link: gotothisimage.com
        image_align: center
        image_border_color: '#896d6d'
        image_url: http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png
        image_border_style: solid
        image_alt: This is an image
        text: Header Text goes here
        image_width: "800"
        image_target: _blank
        image_border_width: "2"
      properties:
        image_url:
          description: Header image URL.
          example: http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png
          title: Header Image URL
          type: string
        text:
          description: Header text.
          example: Header Text goes here
          title: Header Text
          type: string
        image_width:
          description: "Image width, in pixels."
          example: "800"
          title: Image width
          type: string
        image_height:
          description: "Image height, in pixels."
          example: "200"
          title: Image height
          type: string
        image_alt:
          description: Alt text for the image.
          example: This is an image
          title: Image Alt
          type: string
        image_link:
          description: The URL that the header image will link to.
          example: gotothisimage.com
          title: Image Link
          type: string
        image_align:
          description: Image alignment.
          enum:
          - none
          - left
          - center
          - right
          example: center
          title: Image align
          type: string
        image_border_width:
          description: Image border width.
          example: "2"
          title: Image border width
          type: string
        image_border_style:
          description: Image border style.
          enum:
          - none
          - solid
          - dotted
          - dashed
          - double
          - groove
          - outset
          - inset
          - ridge
          example: solid
          title: Image border style
          type: string
        image_border_color:
          description: Image border color.
          example: '#896d6d'
          title: Image border color
          type: string
        image_target:
          description: Image link target.
          enum:
          - _blank
          - "null"
          example: _blank
          title: Image target
          type: string
      title: Signup form header options
      type: object
    Automation_Campaign_Settings_1:
      description: The settings for the Automation workflow.
      properties:
        from_name:
          description: The 'from' name for the Automation (not an email address).
          title: From Name
          type: string
        reply_to:
          description: The reply-to email address for the Automation.
          title: Reply To Address
          type: string
      title: Automation Campaign Settings
      type: object
    Campaign_Content:
      description: The HTML and plain-text content for a campaign.
      example:
        archive_html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
          \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My\
          \ Subject</title><style type=text/css>body{background-color:#d0e4fe}</style><body\
          \ leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
        plain_text: plain_text
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        variate_contents:
        - content_label: Green header
          plain_text: plain_text
          html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
            \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
            \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0\
            \ marginwidth=0 topmargin=0 marginheight=0 offset=0>"
        - content_label: Green header
          plain_text: plain_text
          html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
            \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
            \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0\
            \ marginwidth=0 topmargin=0 marginheight=0 offset=0>"
        html: html
      properties:
        variate_contents:
          description: Content options for multivariate campaigns.
          items:
            $ref: '#/components/schemas/Variate_Contents_inner'
          title: Variate Contents
          type: array
        plain_text:
          description: "The plain-text portion of the campaign. If left unspecified,\
            \ we'll generate this automatically."
          title: Plain Text
          type: string
        html:
          description: The raw HTML for the campaign.
          title: Campaign HTML
          type: string
        archive_html:
          description: The Archive HTML for the campaign.
          example: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
            \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My\
            \ Subject</title><style type=text/css>body{background-color:#d0e4fe}</style><body\
            \ leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
          title: Campaign Archive HTML
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaign Content
      type: object
    Email_Domain:
      description: A single email domain's performance
      example:
        opens_pct: 3.616076749251911
        emails_pct: 7.061401241503109
        domain: domain
        emails_sent: 0
        unsubs: 5
        opens: 1
        clicks: 5
        delivered: 2
        unsubs_pct: 4.145608029883936
        bounces: 6
        clicks_pct: 2.027123023002322
        bounces_pct: 9.301444243932576
      properties:
        domain:
          description: "The name of the domain (gmail.com, hotmail.com, yahoo.com)."
          readOnly: true
          title: Domain
          type: string
        emails_sent:
          description: The number of emails sent to that specific domain.
          readOnly: true
          title: Total Sent
          type: integer
        bounces:
          description: The number of bounces at a domain.
          readOnly: true
          title: Bounces
          type: integer
        opens:
          description: The number of opens for a domain.
          readOnly: true
          title: Opens
          type: integer
        clicks:
          description: The number of clicks for a domain.
          readOnly: true
          title: Clicks
          type: integer
        unsubs:
          description: The total number of unsubscribes for a domain.
          readOnly: true
          title: Unsubscribes
          type: integer
        delivered:
          description: The number of successful deliveries for a domain.
          readOnly: true
          title: Successful Deliveries
          type: integer
        emails_pct:
          description: The percentage of total emails that went to this domain.
          readOnly: true
          title: Email Percent
          type: number
        bounces_pct:
          description: The percentage of total bounces from this domain.
          readOnly: true
          title: Bounces Percent
          type: number
        opens_pct:
          description: The percentage of total opens from this domain.
          readOnly: true
          title: Opens Percent
          type: number
        clicks_pct:
          description: The percentage of total clicks from this domain.
          readOnly: true
          title: Clicks Percent
          type: number
        unsubs_pct:
          description: The percentage of total unsubscribes from this domain.
          readOnly: true
          title: Unsubscribes Percent
          type: number
      title: Email Domain
      type: object
    Visits_inner:
      example:
        date: 2018-04-25
        val: 11
      properties:
        date:
          example: 2018-04-25
          readOnly: true
          title: Date
          type: string
        val:
          example: 11
          readOnly: true
          title: Value
          type: integer
      type: object
    E_commerce_Promo_Code:
      description: Information about an Ecommerce Store's specific Promo Code
      example:
        usage_count: 0
        code: summersale
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        id: id
        created_at_foreign: 2000-01-23T04:56:07.000+00:00
        updated_at_foreign: 2000-01-23T04:56:07.000+00:00
        redemption_url: A url that applies promo code directly at checkout or a url
          that points to sale page or store url
        enabled: true
      properties:
        id:
          description: A unique identifier for the promo Code.
          readOnly: true
          title: Promo Code Foreign ID
          type: string
        code:
          description: The discount code. Restricted to UTF-8 characters with max
            length 50.
          example: summersale
          title: Promo Code
          type: string
        redemption_url:
          description: The url that should be used in the promotion campaign restricted
            to UTF-8 characters with max length 2000.
          example: A url that applies promo code directly at checkout or a url that
            points to sale page or store url
          title: Redemption Url
          type: string
        usage_count:
          description: Number of times promo code has been used.
          title: Promo Code Usage Count
          type: integer
        enabled:
          description: Whether the promo code is currently enabled.
          example: true
          title: Enabled
          type: boolean
        created_at_foreign:
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
          title: Foreign Create Time
          type: string
        updated_at_foreign:
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
          title: Foreign Update Time
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Promo Code
      type: object
    Subscriber_List_1:
      description: Information about a specific list.
      properties:
        name:
          description: The name of the list.
          title: List Name
          type: string
        contact:
          $ref: '#/components/schemas/List_Contact_1'
        permission_reminder:
          description: "The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/)\
            \ for the list."
          title: Permission Reminder
          type: string
        use_archive_bar:
          default: false
          description: "Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ in archives by default."
          title: Use Archive Bar
          type: boolean
        campaign_defaults:
          $ref: '#/components/schemas/Campaign_Defaults_1'
        notify_on_subscribe:
          default: "false"
          description: "The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          title: Notify on Subscribe
          type: string
        notify_on_unsubscribe:
          default: "false"
          description: "The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          title: Notify on Unsubscribe
          type: string
        email_type_option:
          description: "Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/).\
            \ When set to `true`, subscribers can choose whether they want to receive\
            \ HTML or plain-text emails. When set to `false`, subscribers will receive\
            \ HTML emails, with a plain-text alternative backup."
          title: Email Type Option
          type: boolean
        double_optin:
          default: false
          description: Whether or not to require the subscriber to confirm subscription
            via email.
          title: Double Opt In
          type: boolean
        marketing_permissions:
          default: false
          description: Whether or not the list has marketing permissions (eg. GDPR)
            enabled.
          title: Marketing Permissions
          type: boolean
      required:
      - campaign_defaults
      - contact
      - email_type_option
      - name
      - permission_reminder
      title: Subscriber List
      type: object
    API_health_status:
      description: API health status.
      example:
        health_status: '"Everything''s Chimpy!"'
      properties:
        health_status:
          description: This will return a constant string value if the request is
            successful. Ex. "Everything's Chimpy!"
          example: '"Everything''s Chimpy!"'
          readOnly: true
          title: API health status
          type: string
      title: API health status
      type: object
    Subscriber_List_2:
      description: Information about a specific list.
      properties:
        name:
          description: The name of the list.
          title: List Name
          type: string
        contact:
          $ref: '#/components/schemas/List_Contact_2'
        permission_reminder:
          description: "The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/)\
            \ for the list."
          title: Permission Reminder
          type: string
        use_archive_bar:
          default: false
          description: "Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ in archives by default."
          title: Use Archive Bar
          type: boolean
        campaign_defaults:
          $ref: '#/components/schemas/Campaign_Defaults_1'
        notify_on_subscribe:
          default: "false"
          description: "The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          title: Notify on Subscribe
          type: string
        notify_on_unsubscribe:
          default: "false"
          description: "The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          title: Notify on Unsubscribe
          type: string
        email_type_option:
          description: "Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/).\
            \ When set to `true`, subscribers can choose whether they want to receive\
            \ HTML or plain-text emails. When set to `false`, subscribers will receive\
            \ HTML emails, with a plain-text alternative backup."
          title: Email Type Option
          type: boolean
        double_optin:
          default: false
          description: Whether or not to require the subscriber to confirm subscription
            via email.
          title: Double Opt In
          type: boolean
        marketing_permissions:
          default: false
          description: Whether or not the list has marketing permissions (eg. GDPR)
            enabled.
          title: Marketing Permissions
          type: boolean
      required:
      - campaign_defaults
      - contact
      - email_type_option
      - name
      - permission_reminder
      title: Subscriber List
      type: object
    RSS_Options:
      description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
        \ options for a campaign."
      example:
        schedule:
          hour: 2
          weekly_send_day: sunday
          daily_send:
            sunday: true
            saturday: true
            tuesday: true
            wednesday: true
            thursday: true
            friday: true
            monday: true
          monthly_send_date: 3.1764016704468894
        last_sent: 2000-01-23T04:56:07.000+00:00
        constrain_rss_img: true
        feed_url: https://openapi-generator.tech
        frequency: daily
      properties:
        feed_url:
          description: The URL for the RSS feed.
          format: uri
          title: Feed URL
          type: string
        frequency:
          description: The frequency of the RSS Campaign.
          enum:
          - daily
          - weekly
          - monthly
          title: Frequency
          type: string
        schedule:
          $ref: '#/components/schemas/Sending_Schedule'
        last_sent:
          description: The date the campaign was last sent.
          format: date-time
          readOnly: true
          title: Last Sent
          type: string
        constrain_rss_img:
          description: Whether to add CSS to images in the RSS feed to constrain their
            width in campaigns.
          title: Constrain RSS Images
          type: boolean
      title: RSS Options
      type: object
    E_commerce_Order_2:
      description: Information about a specific order.
      properties:
        customer:
          $ref: '#/components/schemas/E_commerce_Customer_2'
        campaign_id:
          description: A string that uniquely identifies the campaign associated with
            an order.
          example: 839488a60b
          title: Campaign ID
          type: string
        landing_site:
          description: The URL for the page where the buyer landed when entering the
            shop.
          example: http://www.example.com?source=abc
          title: Landing Site
          type: string
        financial_status:
          description: "The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
          title: Financial Status
          type: string
        fulfillment_status:
          description: "The fulfillment status for the order. Use this parameter to\
            \ trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
          title: Fulfillment Status
          type: string
        currency_code:
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          title: Currency Code
          type: string
        order_total:
          description: The order total associated with an order.
          title: Order Total
          type: number
        order_url:
          description: The URL for the order.
          title: Order URL
          type: string
        discount_total:
          description: The total amount of the discounts to be applied to the price
            of the order.
          title: Discount Total
          type: number
        tax_total:
          description: The tax total associated with an order.
          title: Tax Total
          type: number
        shipping_total:
          description: The shipping total for the order.
          title: Shipping Total
          type: number
        tracking_code:
          description: The Mailchimp tracking code for the order. Uses the 'mc_tc'
            parameter in E-Commerce tracking URLs.
          enum:
          - prec
          title: Tracking Code
          type: string
        processed_at_foreign:
          description: The date and time the order was processed in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Processed Time
          type: string
        cancelled_at_foreign:
          description: "The date and time the order was cancelled in ISO 8601 format.\
            \ Note: passing a value for this parameter will cancel the order being\
            \ edited."
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Cancel Time
          type: string
        updated_at_foreign:
          description: The date and time the order was updated in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Update Time
          type: string
        shipping_address:
          $ref: '#/components/schemas/Shipping_Address'
        billing_address:
          $ref: '#/components/schemas/Billing_Address'
        promos:
          description: "The promo codes applied on the order. Note: Patch will completely\
            \ replace the value of promos with the new one provided."
          items:
            $ref: '#/components/schemas/Promos_inner_1'
          title: Promos
          type: array
        lines:
          description: An array of the order's line items.
          items:
            $ref: '#/components/schemas/E_commerce_Order_Line_Item_2'
          title: Order Line Items
          type: array
        outreach:
          $ref: '#/components/schemas/Outreach_1'
        tracking_number:
          description: The tracking number associated with the order.
          title: Tracking number
          type: string
        tracking_carrier:
          description: The tracking carrier associated with the order.
          title: Tracking carrier
          type: string
        tracking_url:
          description: The tracking URL associated with the order.
          title: Tracking URL
          type: string
      title: E-commerce Order
      type: object
    getReportingLandingPages_200_response:
      description: A collection of landing pages.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        landing_pages:
        - unique_visits: 6
          subscribes: 1
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          web_id: 33345484
          list_name: Test List
          title: title
          url: url
          signup_tags:
          - tag_name: tag_name
            tag_id: 3
          - tag_name: tag_name
            tag_id: 3
          visits: 0
          timeseries:
            daily_stats:
              unique_visits:
              - date: 2018-04-25
                val: 1
              - date: 2018-04-25
                val: 1
              visits:
              - date: 2018-04-25
                val: 11
              - date: 2018-04-25
                val: 11
              clicks:
              - date: 2018-04-25
                val: 13
              - date: 2018-04-25
                val: 13
            weekly_stats:
              unique_visits:
              - date: 2018-04-25
                val: 1
              - date: 2018-04-25
                val: 1
              visits:
              - date: 2018-04-25
                val: 49
              - date: 2018-04-25
                val: 49
              clicks:
              - date: 2018-04-25
                val: 23
              - date: 2018-04-25
                val: 23
          ecommerce:
            average_order_revenue: 9.301444243932576
            total_revenue: 2.3021358869347655
            total_orders: 7
            currency_code: currency_code
          name: name
          clicks: 5
          id: 00dfc2e1f0
          published_at: 2000-01-23T04:56:07.000+00:00
          conversion_rate: 5.637376656633329
          unpublished_at: 2000-01-23T04:56:07.000+00:00
          status: status
        - unique_visits: 6
          subscribes: 1
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          web_id: 33345484
          list_name: Test List
          title: title
          url: url
          signup_tags:
          - tag_name: tag_name
            tag_id: 3
          - tag_name: tag_name
            tag_id: 3
          visits: 0
          timeseries:
            daily_stats:
              unique_visits:
              - date: 2018-04-25
                val: 1
              - date: 2018-04-25
                val: 1
              visits:
              - date: 2018-04-25
                val: 11
              - date: 2018-04-25
                val: 11
              clicks:
              - date: 2018-04-25
                val: 13
              - date: 2018-04-25
                val: 13
            weekly_stats:
              unique_visits:
              - date: 2018-04-25
                val: 1
              - date: 2018-04-25
                val: 1
              visits:
              - date: 2018-04-25
                val: 49
              - date: 2018-04-25
                val: 49
              clicks:
              - date: 2018-04-25
                val: 23
              - date: 2018-04-25
                val: 23
          ecommerce:
            average_order_revenue: 9.301444243932576
            total_revenue: 2.3021358869347655
            total_orders: 7
            currency_code: currency_code
          name: name
          clicks: 5
          id: 00dfc2e1f0
          published_at: 2000-01-23T04:56:07.000+00:00
          conversion_rate: 5.637376656633329
          unpublished_at: 2000-01-23T04:56:07.000+00:00
          status: status
        total_items: 0
      properties:
        landing_pages:
          items:
            $ref: '#/components/schemas/Landing_Page_Report'
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    E_commerce_Order_1:
      description: Information about a specific order.
      properties:
        id:
          description: A unique identifier for the order.
          title: Order Foreign ID
          type: string
        customer:
          $ref: '#/components/schemas/E_commerce_Customer_1'
        campaign_id:
          description: A string that uniquely identifies the campaign for an order.
          example: 839488a60b
          title: Campaign ID
          type: string
        landing_site:
          description: The URL for the page where the buyer landed when entering the
            shop.
          example: http://www.example.com?source=abc
          title: Landing Site
          type: string
        financial_status:
          description: "The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
          title: Financial Status
          type: string
        fulfillment_status:
          description: "The fulfillment status for the order. Use this parameter to\
            \ trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
          title: Fulfillment Status
          type: string
        currency_code:
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          title: Currency Code
          type: string
        order_total:
          description: The total for the order.
          title: Order Total
          type: number
        order_url:
          description: The URL for the order.
          title: Order URL
          type: string
        discount_total:
          description: The total amount of the discounts to be applied to the price
            of the order.
          title: Discount Total
          type: number
        tax_total:
          description: The tax total for the order.
          title: Tax Total
          type: number
        shipping_total:
          description: The shipping total for the order.
          title: Shipping Total
          type: number
        tracking_code:
          description: The Mailchimp tracking code for the order. Uses the 'mc_tc'
            parameter in E-Commerce tracking URLs.
          enum:
          - prec
          title: Tracking Code
          type: string
        processed_at_foreign:
          description: The date and time the order was processed in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Processed Time
          type: string
        cancelled_at_foreign:
          description: "The date and time the order was cancelled in ISO 8601 format.\
            \ Note: passing a value for this parameter will cancel the order being\
            \ created."
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Cancel Time
          type: string
        updated_at_foreign:
          description: The date and time the order was updated in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          title: Foreign Update Time
          type: string
        shipping_address:
          $ref: '#/components/schemas/Shipping_Address_1'
        billing_address:
          $ref: '#/components/schemas/Billing_Address_1'
        promos:
          description: The promo codes applied on the order
          items:
            $ref: '#/components/schemas/Promos_inner_1'
          title: Promos
          type: array
        lines:
          description: An array of the order's line items.
          items:
            $ref: '#/components/schemas/E_commerce_Order_Line_Item_1'
          title: Order Line Items
          type: array
        outreach:
          $ref: '#/components/schemas/Outreach_1'
        tracking_number:
          description: The tracking number associated with the order.
          title: Tracking number
          type: string
        tracking_carrier:
          description: The tracking carrier associated with the order.
          title: Tracking carrier
          type: string
        tracking_url:
          description: The tracking URL associated with the order.
          title: Tracking URL
          type: string
      required:
      - currency_code
      - customer
      - id
      - lines
      - order_total
      title: E-commerce Order
      type: object
    Abuse_Complaints:
      description: A collection of abuse complaints for a specific list. An abuse
        complaint occurs when your recipient clicks to 'report spam' in their email
        program.
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
        abuse_reports:
        - email_id: email_id
          date: date
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          id: 0
          vip: true
          campaign_id: campaign_id
        - email_id: email_id
          date: date
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          id: 0
          vip: true
          campaign_id: campaign_id
      properties:
        abuse_reports:
          description: "An array of objects, each representing an abuse report resource."
          items:
            $ref: '#/components/schemas/Abuse_Complaint'
          title: Abuse Reports
          type: array
        list_id:
          description: The list id for the abuse report.
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Abuse Complaints
      type: object
    Billing_Address_1:
      description: The billing address for the order.
      properties:
        name:
          description: The name associated with the billing address.
          example: Freddie Chimpenheimer
          title: Name
          type: string
        address1:
          description: The billing address for the order.
          example: 675 Ponce de Leon Ave NE
          title: Address Field 1
          type: string
        address2:
          description: An additional field for the billing address.
          example: Suite 5000
          title: Address Field 2
          type: string
        city:
          description: The city in the billing address.
          example: Atlanta
          title: 'City '
          type: string
        province:
          description: The state or normalized province in the billing address.
          example: Georgia
          title: Province
          type: string
        province_code:
          description: The two-letter code for the province in the billing address.
          example: GA
          title: Province Code
          type: string
        postal_code:
          description: The postal or zip code in the billing address.
          example: "30308"
          title: Postal Code
          type: string
        country:
          description: The country in the billing address.
          example: United States
          title: Country Code
          type: string
        country_code:
          description: The two-letter code for the country in the billing address.
          example: US
          title: Country Code
          type: string
        longitude:
          description: The longitude for the billing address location.
          example: -75.68903
          title: Longitude
          type: number
        latitude:
          description: The latitude for the billing address location.
          example: 45.427408
          title: Latitude
          type: number
        phone:
          description: The phone number for the billing address
          example: "8675309"
          title: Phone Number
          type: string
        company:
          description: The company associated with the billing address.
          title: Company
          type: string
      title: Billing Address
      type: object
    getCampaigns_200_response:
      description: An array of campaigns.
      example:
        campaigns:
        - archive_url: archive_url
          resendable: true
          settings:
            auto_footer: true
            subject_line: subject_line
            preview_text: preview_text
            use_conversation: true
            authenticate: true
            to_name: to_name
            timewarp: true
            title: title
            from_name: from_name
            auto_tweet: true
            auto_fb_post:
            - auto_fb_post
            - auto_fb_post
            fb_comments: true
            drag_and_drop: true
            reply_to: reply_to
            inline_css: true
            template_id: 5
            folder_id: folder_id
          variate_settings:
            send_times:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            combinations:
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            wait_time: 5
            subject_lines:
            - subject_lines
            - subject_lines
            contents:
            - contents
            - contents
            test_size: 2
            winning_combination_id: winning_combination_id
            reply_to_addresses:
            - reply_to_addresses
            - reply_to_addresses
            winner_criteria: opens
            winning_campaign_id: winning_campaign_id
            from_names:
            - from_names
            - from_names
          ab_split_opts:
            pick_winner: opens
            wait_time: 1
            wait_units: hours
            subject_b: subject_b
            subject_a: subject_a
            split_test: subject
            from_name_a: from_name_a
            from_name_b: from_name_b
            send_time_winner: send_time_winner
            reply_email_b: reply_email_b
            reply_email_a: reply_email_a
            send_time_a: 2000-01-23T04:56:07.000+00:00
            send_time_b: 2000-01-23T04:56:07.000+00:00
            split_size: 34
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          web_id: 0
          type: regular
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          needs_block_refresh: true
          send_time: 2000-01-23T04:56:07.000+00:00
          rss_opts:
            schedule:
              hour: 2
              weekly_send_day: sunday
              daily_send:
                sunday: true
                saturday: true
                tuesday: true
                wednesday: true
                thursday: true
                friday: true
                monday: true
              monthly_send_date: 3.1764016704468894
            last_sent: 2000-01-23T04:56:07.000+00:00
            constrain_rss_img: true
            feed_url: https://openapi-generator.tech
            frequency: daily
          parent_campaign_id: parent_campaign_id
          content_type: template
          social_card:
            image_url: image_url
            description: description
            title: title
          recipients:
            segment_opts:
              prebuilt_segment_id: subscribers-female
              match: any
              saved_segment_id: 5
              conditions:
              - "{}"
              - "{}"
            list_id: list_id
            segment_text: segment_text
            recipient_count: 1
            list_name: list_name
            list_is_active: true
          emails_sent: 6
          id: id
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
          long_archive_url: long_archive_url
          status: save
          report_summary:
            subscriber_clicks: 9
            click_rate: 9.369310271410669
            ecommerce:
              total_spent: 8.762042012749001
              total_revenue: 9.018348186070783
              total_orders: 6
            opens: 7
            clicks: 5
            unique_opens: 1
            open_rate: 4.965218492984954
          resend_shortcut_eligibility:
            to_non_openers:
              reason: reason
              is_eligible: true
            to_new_subscribers:
              reason: reason
              is_eligible: true
            to_non_clickers:
              reason: reason
              is_eligible: true
        - archive_url: archive_url
          resendable: true
          settings:
            auto_footer: true
            subject_line: subject_line
            preview_text: preview_text
            use_conversation: true
            authenticate: true
            to_name: to_name
            timewarp: true
            title: title
            from_name: from_name
            auto_tweet: true
            auto_fb_post:
            - auto_fb_post
            - auto_fb_post
            fb_comments: true
            drag_and_drop: true
            reply_to: reply_to
            inline_css: true
            template_id: 5
            folder_id: folder_id
          variate_settings:
            send_times:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            combinations:
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            wait_time: 5
            subject_lines:
            - subject_lines
            - subject_lines
            contents:
            - contents
            - contents
            test_size: 2
            winning_combination_id: winning_combination_id
            reply_to_addresses:
            - reply_to_addresses
            - reply_to_addresses
            winner_criteria: opens
            winning_campaign_id: winning_campaign_id
            from_names:
            - from_names
            - from_names
          ab_split_opts:
            pick_winner: opens
            wait_time: 1
            wait_units: hours
            subject_b: subject_b
            subject_a: subject_a
            split_test: subject
            from_name_a: from_name_a
            from_name_b: from_name_b
            send_time_winner: send_time_winner
            reply_email_b: reply_email_b
            reply_email_a: reply_email_a
            send_time_a: 2000-01-23T04:56:07.000+00:00
            send_time_b: 2000-01-23T04:56:07.000+00:00
            split_size: 34
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          web_id: 0
          type: regular
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          needs_block_refresh: true
          send_time: 2000-01-23T04:56:07.000+00:00
          rss_opts:
            schedule:
              hour: 2
              weekly_send_day: sunday
              daily_send:
                sunday: true
                saturday: true
                tuesday: true
                wednesday: true
                thursday: true
                friday: true
                monday: true
              monthly_send_date: 3.1764016704468894
            last_sent: 2000-01-23T04:56:07.000+00:00
            constrain_rss_img: true
            feed_url: https://openapi-generator.tech
            frequency: daily
          parent_campaign_id: parent_campaign_id
          content_type: template
          social_card:
            image_url: image_url
            description: description
            title: title
          recipients:
            segment_opts:
              prebuilt_segment_id: subscribers-female
              match: any
              saved_segment_id: 5
              conditions:
              - "{}"
              - "{}"
            list_id: list_id
            segment_text: segment_text
            recipient_count: 1
            list_name: list_name
            list_is_active: true
          emails_sent: 6
          id: id
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
          long_archive_url: long_archive_url
          status: save
          report_summary:
            subscriber_clicks: 9
            click_rate: 9.369310271410669
            ecommerce:
              total_spent: 8.762042012749001
              total_revenue: 9.018348186070783
              total_orders: 6
            opens: 7
            clicks: 5
            unique_opens: 1
            open_rate: 4.965218492984954
          resend_shortcut_eligibility:
            to_non_openers:
              reason: reason
              is_eligible: true
            to_new_subscribers:
              reason: reason
              is_eligible: true
            to_non_clickers:
              reason: reason
              is_eligible: true
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
      properties:
        campaigns:
          description: An array of campaigns.
          items:
            $ref: '#/components/schemas/Campaign'
          title: Campaigns
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    E_commerce_Order_Line_Item:
      description: Information about a specific order line.
      example:
        product_variant_title: product_variant_title
        quantity: 2
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        image_url: image_url
        price: 7.061401241503109
        product_id: product_id
        discount: 9.301444243932576
        id: id
        product_variant_id: product_variant_id
        product_title: product_title
      properties:
        id:
          description: A unique identifier for an order line item.
          readOnly: true
          title: Order Line Item Foreign ID
          type: string
        product_id:
          description: A unique identifier for the product associated with an order
            line item.
          title: Order Line Item Product Foreign ID
          type: string
        product_title:
          description: The name of the product for an order line item.
          readOnly: true
          title: Order Line Item Product Title
          type: string
        product_variant_id:
          description: A unique identifier for the product variant associated with
            an order line item.
          title: Order Line Item Product Variant Foreign ID
          type: string
        product_variant_title:
          description: The name of the product variant for an order line item.
          readOnly: true
          title: Order Line Item Product Variant Title
          type: string
        image_url:
          description: The image URL for a product.
          readOnly: true
          title: Product Image URL
          type: string
        quantity:
          description: The order line item quantity.
          title: Quantity
          type: integer
        price:
          description: The order line item price.
          title: Price
          type: number
        discount:
          description: The total discount amount applied to a line item.
          title: Discount
          type: number
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Order Line Item
      type: object
    Template_Folders:
      description: A list of template folders
      example:
        folders:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          count: 0
          id: id
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          count: 0
          id: id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
      properties:
        folders:
          description: An array of objects representing template folders.
          items:
            $ref: '#/components/schemas/Template_Folder'
          title: Template Folders
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Template Folders
      type: object
    Campaign_Feedback_2:
      description: A specific feedback message from a specific campaign.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        parent_id: 6
        feedback_id: 0
        created_at: 2000-01-23T04:56:07.000+00:00
        is_complete: true
        source: api
        message: message
        created_by: created_by
        block_id: 1
        campaign_id: campaign_id
      properties:
        feedback_id:
          description: The individual id for the feedback item.
          readOnly: true
          title: Feedback ID
          type: integer
        parent_id:
          description: "If a reply, the id of the parent feedback item."
          readOnly: true
          title: Parent ID
          type: integer
        block_id:
          description: The block id for the editable block that the feedback addresses.
          title: Block ID
          type: integer
        message:
          description: The content of the feedback.
          title: Message
          type: string
        is_complete:
          description: The status of feedback.
          title: Complete
          type: boolean
        created_by:
          description: The login name of the user who created the feedback.
          readOnly: true
          title: Created By
          type: string
        created_at:
          description: The date and time the feedback item was created in ISO 8601
            format.
          format: date-time
          readOnly: true
          title: Created At
          type: string
        updated_at:
          description: The date and time the feedback was last updated in ISO 8601
            format.
          format: date-time
          readOnly: true
          title: Updated At
          type: string
        source:
          description: The source of the feedback.
          enum:
          - api
          - email
          - sms
          - web
          - ios
          - android
          readOnly: true
          title: Source
          type: string
        campaign_id:
          description: The unique id for the campaign.
          readOnly: true
          title: Campaign ID
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaign Feedback
      type: object
    Campaign_Feedback_1:
      description: A specific feedback message from a specific campaign.
      properties:
        block_id:
          description: The block id for the editable block that the feedback addresses.
          title: Block ID
          type: integer
        message:
          description: The content of the feedback.
          title: Message
          type: string
        is_complete:
          description: The status of feedback.
          title: Complete
          type: boolean
      required:
      - message
      title: Campaign Feedback
      type: object
    Landing_Page_2:
      description: A summary of an individual page's properties.
      properties:
        name:
          description: The name of this landing page.
          title: Landing Page Name
          type: string
        title:
          description: The title of this landing page seen in the browser's title
            bar.
          title: Landing Page title
          type: string
        description:
          description: The description of this landing page.
          title: Landing Page description
          type: string
        store_id:
          description: The ID of the store associated with this landing page.
          title: Store ID
          type: string
        list_id:
          description: The list's ID associated with this landing page.
          title: Landing Page list id
          type: string
        tracking:
          $ref: '#/components/schemas/Tracking_Settings'
      title: Landing Page
      type: object
    Eepurl_Activity:
      description: "A summary of social activity for the campaign, tracked by EepURL."
      example:
        twitter:
          last_tweet: last_tweet
          statuses:
          - datetime: 2000-01-23T04:56:07.000+00:00
            status_id: status_id
            screen_name: screen_name
            is_retweet: true
            status: status
          - datetime: 2000-01-23T04:56:07.000+00:00
            status_id: status_id
            screen_name: screen_name
            is_retweet: true
            status: status
          first_tweet: first_tweet
          tweets: 0
          retweets: 6
        eepurl: eepurl
        referrers:
        - referrer: referrer
          clicks: 5
          last_click: 2000-01-23T04:56:07.000+00:00
          first_click: 2000-01-23T04:56:07.000+00:00
        - referrer: referrer
          clicks: 5
          last_click: 2000-01-23T04:56:07.000+00:00
          first_click: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        clicks:
          clicks: 1
          last_click: 2000-01-23T04:56:07.000+00:00
          locations:
          - country: country
            region: NY
          - country: country
            region: NY
          first_click: 2000-01-23T04:56:07.000+00:00
        total_items: 5
        campaign_id: campaign_id
      properties:
        twitter:
          $ref: '#/components/schemas/Twitter_Stats'
        clicks:
          $ref: '#/components/schemas/Click_Summary'
        referrers:
          description: A summary of the top referrers for the campaign.
          items:
            $ref: '#/components/schemas/Referrer'
          readOnly: true
          title: Referrers
          type: array
          x-title: Referrers
        eepurl:
          description: The shortened link used for tracking.
          readOnly: true
          title: Eepurl
          type: string
        campaign_id:
          description: The unique id for the campaign.
          readOnly: true
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Eepurl Activity
      type: object
    Landing_Page_1:
      description: A summary of an individual page's properties.
      properties:
        name:
          description: The name of this landing page.
          title: Landing Page Name
          type: string
        title:
          description: The title of this landing page seen in the browser's title
            bar.
          title: Landing Page title
          type: string
        description:
          description: The description of this landing page.
          title: Landing Page description
          type: string
        store_id:
          description: The ID of the store associated with this landing page.
          title: Store ID
          type: string
        list_id:
          description: The list's ID associated with this landing page.
          title: Landing Page list id
          type: string
        type:
          description: The type of template the landing page has.
          enum:
          - signup
          - product
          example: signup
          title: Landing Page Template Type
          type: string
        template_id:
          description: The template_id of this landing page.
          example: 1001
          title: Landing Page template_id
          type: integer
        tracking:
          $ref: '#/components/schemas/Tracking_Settings'
      title: Landing Page
      type: object
    Campaign_Feedback_3:
      description: A specific feedback message from a specific campaign.
      properties:
        block_id:
          description: The block id for the editable block that the feedback addresses.
          title: Block ID
          type: integer
        message:
          description: The content of the feedback.
          title: Message
          type: string
        is_complete:
          description: The status of feedback.
          title: Complete
          type: boolean
      title: Campaign Feedback
      type: object
    Add_List_Members_1:
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      properties:
        email_address:
          description: Email address for a subscriber.
          title: Email Address
          type: string
        email_type:
          description: Type of email this member asked to get ('html' or 'text').
          title: Email Type
          type: string
        status:
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
          title: Status
          type: string
        merge_fields:
          additionalProperties:
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
            type: object
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
          title: Merge Fields
          type: object
        interests:
          additionalProperties:
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
            title: Interest Value
            type: boolean
          description: The key of this object's properties is the ID of the interest
            in question.
          title: Subscriber Interests
          type: object
        language:
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
          title: Language
          type: string
        vip:
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          title: VIP
          type: boolean
        location:
          $ref: '#/components/schemas/Location'
        marketing_permissions:
          description: The marketing permissions for the subscriber.
          items:
            $ref: '#/components/schemas/Marketing_Permission_1'
          title: Marketing Permissions
          type: array
        ip_signup:
          description: IP address the subscriber signed up from.
          title: Signup IP
          type: string
        timestamp_signup:
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
          title: Signup Timestamp
          type: string
        ip_opt:
          description: The IP address the subscriber used to confirm their opt-in
            status.
          title: Opt-in IP
          type: string
        timestamp_opt:
          description: The date and time the subscriber confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
          title: Opt-in Timestamp
          type: string
        tags:
          description: The tags that are associated with a member.
          items:
            description: The name of the tag that will be associated with this member.
            type: string
          title: Tags on a member
          type: array
      required:
      - email_address
      - status
      title: Add List Members
      type: object
    Add_List_Members_2:
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      properties:
        email_address:
          description: Email address for a subscriber. This value is required only
            if the email address is not already present on the list.
          title: Email Address
          type: string
        status_if_new:
          description: Subscriber's status. This value is required only if the email
            address is not already present on the list.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
          title: New Member Status
          type: string
        email_type:
          description: Type of email this member asked to get ('html' or 'text').
          title: Email Type
          type: string
        status:
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
          title: Status
          type: string
        merge_fields:
          additionalProperties:
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
            type: object
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
          title: Merge Fields
          type: object
        interests:
          additionalProperties:
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
            title: Interest Value
            type: boolean
          description: The key of this object's properties is the ID of the interest
            in question.
          title: Subscriber Interests
          type: object
        language:
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
          title: Language
          type: string
        vip:
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          title: VIP
          type: boolean
        location:
          $ref: '#/components/schemas/Location'
        marketing_permissions:
          description: The marketing permissions for the subscriber.
          items:
            $ref: '#/components/schemas/Marketing_Permission_1'
          title: Marketing Permissions
          type: array
        ip_signup:
          description: IP address the subscriber signed up from.
          title: Signup IP
          type: string
        timestamp_signup:
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
          title: Signup Timestamp
          type: string
        ip_opt:
          description: The IP address the subscriber used to confirm their opt-in
            status.
          title: Opt-in IP
          type: string
        timestamp_opt:
          description: The date and time the subscriber confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
          title: Opt-in Timestamp
          type: string
      required:
      - email_address
      - status_if_new
      title: Add List Members
      type: object
    postCampaignsIdActionsTest_request:
      properties:
        test_emails:
          description: An array of email addresses to send the test email to.
          items:
            type: string
          title: Test Emails
          type: array
        send_type:
          description: Choose the type of test email to send.
          enum:
          - html
          - plaintext
          title: Type of email to test
          type: string
      required:
      - send_type
      - test_emails
      type: object
    Add_List_Members_3:
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      properties:
        email_address:
          description: Email address for a subscriber.
          title: Email Address
          type: string
        email_type:
          description: Type of email this member asked to get ('html' or 'text').
          title: Email Type
          type: string
        status:
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          title: Status
          type: string
        merge_fields:
          additionalProperties:
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
            type: object
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
          title: Merge Fields
          type: object
        interests:
          additionalProperties:
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
            title: Interest Value
            type: boolean
          description: The key of this object's properties is the ID of the interest
            in question.
          title: Subscriber Interests
          type: object
        language:
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
          title: Language
          type: string
        vip:
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          title: VIP
          type: boolean
        location:
          $ref: '#/components/schemas/Location'
        marketing_permissions:
          description: The marketing permissions for the subscriber.
          items:
            $ref: '#/components/schemas/Marketing_Permission_1'
          title: Marketing Permissions
          type: array
        ip_signup:
          description: IP address the subscriber signed up from.
          title: Signup IP
          type: string
        timestamp_signup:
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
          title: Signup Timestamp
          type: string
        ip_opt:
          description: The IP address the subscriber used to confirm their opt-in
            status.
          title: Opt-in IP
          type: string
        timestamp_opt:
          description: The date and time the subscriber confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
          title: Opt-in Timestamp
          type: string
      title: Add List Members
      type: object
    Collection_of_Notes:
      description: "The last 10 notes for a specific list member, based on date created."
      example:
        email_id: email_id
        notes:
        - email_id: email_id
          note: note
          updated_at: 2000-01-23T04:56:07.000+00:00
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          contact_id: contact_id
          created_by: created_by
        - email_id: email_id
          note: note
          updated_at: 2000-01-23T04:56:07.000+00:00
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          contact_id: contact_id
          created_by: created_by
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
      properties:
        notes:
          description: "An array of objects, each representing a note resource."
          items:
            $ref: '#/components/schemas/Member_Notes'
          title: Notes
          type: array
        email_id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Collection of Notes
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience_email_source:
      properties:
        name:
          description: Email source name
          type: string
        type:
          description: Type of the email source
          type: string
        is_segment:
          description: Is the source reference a segment
          type: boolean
        segment_type:
          description: Segment type if this source is tied to a segment
          type: string
        list_name:
          description: Associated list name to the source
          type: string
      type: object
    API_Root:
      description: The API root resource links to all other resources available in
        the API.
      example:
        member_since: 2010-01-01T23:59:59Z
        login_id: login_id
        pro_enabled: true
        role: role
        first_payment: 2010-01-01T23:59:59Z
        pricing_plan_type: monthly
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        last_login: 2000-01-23T04:56:07.000+00:00
        last_name: last_name
        industry_stats:
          click_rate: 5.962133916683182
          bounce_rate: 1.4658129805029452
          open_rate: 6.027456183070403
        account_id: account_id
        avatar_url: avatar_url
        account_name: account_name
        contact:
          zip: zip
          country: country
          addr2: addr2
          addr1: addr1
          city: city
          company: company
          state: state
        account_industry: account_industry
        first_name: first_name
        email: email
        account_timezone: account_timezone
        total_subscribers: 0
        username: freddie2000
      properties:
        account_id:
          description: The Mailchimp account ID.
          readOnly: true
          title: Account ID
          type: string
        login_id:
          description: "The ID associated with the user who owns this API key. If\
            \ you can login to multiple accounts, this ID will be the same for each\
            \ account."
          readOnly: true
          title: Login ID
          type: string
        account_name:
          description: The name of the account.
          readOnly: true
          title: Account Name
          type: string
        email:
          description: The account email address.
          readOnly: true
          title: Account Email
          type: string
        first_name:
          description: The first name tied to the account.
          readOnly: true
          title: First Name
          type: string
        last_name:
          description: The last name tied to the account.
          readOnly: true
          title: Last Name
          type: string
        username:
          description: The username tied to the account.
          example: freddie2000
          readOnly: true
          title: User Name
          type: string
        avatar_url:
          description: URL of the avatar for the user.
          readOnly: true
          title: Avatar URL
          type: string
        role:
          description: "The [user role](https://mailchimp.com/help/manage-user-levels-in-your-account/)\
            \ for the account."
          readOnly: true
          title: Role
          type: string
        member_since:
          description: The date and time that the account was created in ISO 8601
            format.
          example: 2010-01-01T23:59:59Z
          format: date-time
          readOnly: true
          title: Account Creation Date
          type: string
        pricing_plan_type:
          description: The type of pricing plan the account is on.
          enum:
          - monthly
          - pay_as_you_go
          - forever_free
          readOnly: true
          title: Account Pricing Plan
          type: string
        first_payment:
          description: Date of first payment for monthly plans.
          example: 2010-01-01T23:59:59Z
          format: date-time
          readOnly: true
          title: First Payment
          type: string
        account_timezone:
          description: The timezone currently set for the account.
          readOnly: true
          title: Account Timezone
          type: string
        account_industry:
          description: The user-specified industry associated with the account.
          readOnly: true
          title: Account Industry
          type: string
        contact:
          $ref: '#/components/schemas/Account_Contact'
        pro_enabled:
          description: "Legacy - whether the account includes [Mailchimp Pro](https://mailchimp.com/help/about-mailchimp-pro/)."
          readOnly: true
          title: Mailchimp Pro
          type: boolean
        last_login:
          description: The date and time of the last login for this account in ISO
            8601 format.
          format: date-time
          readOnly: true
          title: Last Login Date
          type: string
        total_subscribers:
          description: The total number of subscribers across all lists in the account.
          readOnly: true
          title: Total Subscribers
          type: integer
        industry_stats:
          $ref: '#/components/schemas/Industry_Stats'
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: API Root
      type: object
    Campaign_Settings_5:
      description: "The settings for your campaign, including subject, from name,\
        \ reply-to address, and more."
      example:
        auto_footer: true
        subject_line: subject_line
        preview_text: preview_text
        use_conversation: true
        authenticate: true
        to_name: to_name
        timewarp: true
        title: title
        from_name: from_name
        auto_tweet: true
        auto_fb_post:
        - auto_fb_post
        - auto_fb_post
        fb_comments: true
        drag_and_drop: true
        reply_to: reply_to
        inline_css: true
        template_id: 5
        folder_id: folder_id
      properties:
        subject_line:
          description: The subject line for the campaign.
          title: Campaign Subject Line
          type: string
        preview_text:
          description: The preview text for the campaign.
          title: Campaign Preview Text
          type: string
        title:
          description: The title of the campaign.
          title: Campaign Title
          type: string
        from_name:
          description: The 'from' name on the campaign (not an email address).
          title: From Name
          type: string
        reply_to:
          description: The reply-to email address for the campaign.
          title: Reply To Address
          type: string
        use_conversation:
          description: Use Mailchimp Conversation feature to manage replies.
          title: Conversation
          type: boolean
        to_name:
          description: "The campaign's custom 'To' name. Typically the first name\
            \ [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
          title: To Name
          type: string
        folder_id:
          description: "If the campaign is listed in a folder, the id for that folder."
          title: Folder ID
          type: string
        authenticate:
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the campaign. Defaults to `true`."
          title: Authentication
          type: boolean
        auto_footer:
          description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the campaign."
          title: Auto-Footer
          type: boolean
        inline_css:
          description: Automatically inline the CSS included with the campaign content.
          title: Inline CSS
          type: boolean
        auto_tweet:
          description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ page when the campaign is sent."
          title: Auto-Tweet
          type: boolean
        auto_fb_post:
          description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
            \ page ids to auto-post to."
          items:
            type: string
          title: Auto Post to Facebook
          type: array
        fb_comments:
          description: Allows Facebook comments on the campaign (also force-enables
            the Campaign Archive toolbar). Defaults to `true`.
          title: Facebook Comments
          type: boolean
        timewarp:
          description: "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/)."
          readOnly: true
          title: Timewarp Send
          type: boolean
        template_id:
          description: The id for the template used in this campaign.
          readOnly: true
          title: Template ID
          type: integer
        drag_and_drop:
          description: Whether the campaign uses the drag-and-drop editor.
          readOnly: true
          title: Drag And Drop Campaign
          type: boolean
      title: Campaign Settings
      type: object
    Connected_Site:
      description: Information about a specific connected site.
      example:
        foreign_id: "a180c384d7db88b if created in-app, MC001 if created via API"
        store_id: MC001
        updated_at: 2015-07-15T19:35:00Z
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        domain: example.myshopify.com
        site_script:
          fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
          url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        created_at: 2015-07-15T19:28:00Z
        platform: "shopify, magento, bigcommerce, woocommerce"
      properties:
        foreign_id:
          description: The unique identifier for the site.
          example: "a180c384d7db88b if created in-app, MC001 if created via API"
          readOnly: true
          title: Connected Site Foreign ID
          type: string
        store_id:
          description: The unique identifier for the ecommerce store that's associated
            with the connected site (if any). The store_id for a specific connected
            site can't change.
          example: MC001
          readOnly: true
          title: Store ID
          type: string
        platform:
          description: The platform of the connected site.
          example: "shopify, magento, bigcommerce, woocommerce"
          readOnly: true
          title: Connected Site Platform
          type: string
        domain:
          description: The connected site domain.
          example: example.myshopify.com
          readOnly: true
          title: Domain
          type: string
        site_script:
          $ref: '#/components/schemas/Script'
        created_at:
          description: The date and time the connected site was created in ISO 8601
            format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          readOnly: true
          title: Creation Time
          type: string
        updated_at:
          description: The date and time the connected site was last updated in ISO
            8601 format.
          example: 2015-07-15T19:35:00Z
          format: date-time
          readOnly: true
          title: Update Time
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Connected Site
      type: object
    Campaign_Settings_3:
      description: "The settings for your campaign, including subject, from name,\
        \ reply-to address, and more."
      properties:
        subject_line:
          description: The subject line for the campaign.
          title: Campaign Subject Line
          type: string
        preview_text:
          description: The preview text for the campaign.
          title: Campaign Preview Text
          type: string
        title:
          description: The title of the campaign.
          title: Campaign Title
          type: string
        from_name:
          description: The 'from' name on the campaign (not an email address).
          title: From Name
          type: string
        reply_to:
          description: "The reply-to email address for the campaign. Note: while this\
            \ field is not required for campaign creation, it is required for sending."
          title: Reply To Address
          type: string
        use_conversation:
          description: Use Mailchimp Conversation feature to manage out-of-office
            replies.
          title: Conversation
          type: boolean
        to_name:
          description: "The campaign's custom 'To' name. Typically the first name\
            \ [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
          title: To Name
          type: string
        folder_id:
          description: "If the campaign is listed in a folder, the id for that folder."
          title: Folder ID
          type: string
        authenticate:
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the campaign. Defaults to `true`."
          title: Authentication
          type: boolean
        auto_footer:
          description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the campaign."
          title: Auto-Footer
          type: boolean
        inline_css:
          description: Automatically inline the CSS included with the campaign content.
          title: Inline CSS
          type: boolean
        auto_tweet:
          description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ page when the campaign is sent."
          title: Auto-Tweet
          type: boolean
        auto_fb_post:
          description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
            \ page ids to auto-post to."
          items:
            type: string
          title: Auto Post to Facebook
          type: array
        fb_comments:
          description: Allows Facebook comments on the campaign (also force-enables
            the Campaign Archive toolbar). Defaults to `true`.
          title: Facebook Comments
          type: boolean
        template_id:
          description: The id of the template to use.
          title: Template ID
          type: integer
      title: Campaign Settings
      type: object
    Promos_inner_1:
      properties:
        code:
          description: The Promo Code
          title: Code
          type: string
        amount_discounted:
          description: "The amount of discount applied on the total price. For example\
            \ if the total cost was $100 and the customer paid $95.5, amount_discounted\
            \ will be 4.5 For free shipping set amount_discounted to 0"
          title: Amount Discounted
          type: number
        type:
          description: Type of discount. For free shipping set type to fixed
          enum:
          - fixed
          - percentage
          title: Type
          type: string
      required:
      - amount_discounted
      - code
      - type
      type: object
    E_commerce_Product_Image_2:
      description: Information about a specific product image.
      properties:
        id:
          description: A unique identifier for the product image.
          title: Image Foreign ID
          type: string
        url:
          description: The URL for a product image.
          title: URL
          type: string
        variant_ids:
          description: The list of product variants using the image.
          items:
            type: string
          title: Product Variants
          type: array
      title: E-commerce Product Image
      type: object
    Campaign_Settings_4:
      description: "The settings for your campaign, including subject, from name,\
        \ reply-to address, and more."
      properties:
        subject_line:
          description: The subject line for the campaign.
          title: Campaign Subject Line
          type: string
        preview_text:
          description: The preview text for the campaign.
          title: Campaign Preview Text
          type: string
        title:
          description: The title of the campaign.
          title: Campaign Title
          type: string
        from_name:
          description: The 'from' name on the campaign (not an email address).
          title: From Name
          type: string
        reply_to:
          description: The reply-to email address for the campaign.
          title: Reply To Address
          type: string
        use_conversation:
          description: Use Mailchimp Conversation feature to manage out-of-office
            replies.
          title: Conversation
          type: boolean
        to_name:
          description: "The campaign's custom 'To' name. Typically the first name\
            \ [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
          title: To Name
          type: string
        folder_id:
          description: "If the campaign is listed in a folder, the id for that folder."
          title: Folder ID
          type: string
        authenticate:
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the campaign. Defaults to `true`."
          title: Authentication
          type: boolean
        auto_footer:
          description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the campaign."
          title: Auto-Footer
          type: boolean
        inline_css:
          description: Automatically inline the CSS included with the campaign content.
          title: Inline CSS
          type: boolean
        auto_tweet:
          description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ page when the campaign is sent."
          title: Auto-Tweet
          type: boolean
        auto_fb_post:
          description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
            \ page ids to auto-post to."
          items:
            type: string
          title: Auto Post to Facebook
          type: array
        fb_comments:
          description: Allows Facebook comments on the campaign (also force-enables
            the Campaign Archive toolbar). Defaults to `true`.
          title: Facebook Comments
          type: boolean
        template_id:
          description: The id of the template to use.
          title: Template ID
          type: integer
      required:
      - from_name
      - reply_to
      - subject_line
      title: Campaign Settings
      type: object
    Campaign_Settings_1:
      description: "Settings for the campaign including the email subject, from name,\
        \ and from email address."
      properties:
        subject_line:
          description: The subject line for the campaign.
          title: Campaign Subject Line
          type: string
        preview_text:
          description: The preview text for the campaign.
          title: Campaign Preview Text
          type: string
        title:
          description: The title of the Automation.
          title: Automation Title
          type: string
        from_name:
          description: The 'from' name for the Automation (not an email address).
          title: From Name
          type: string
        reply_to:
          description: The reply-to email address for the Automation.
          title: Reply To Address
          type: string
      title: Campaign Settings
      type: object
    Promo_Codes:
      description: A collection of the store's promo codes.
      example:
        store_id: store_id
        promo_codes:
        - usage_count: 0
          code: summersale
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
          created_at_foreign: 2000-01-23T04:56:07.000+00:00
          updated_at_foreign: 2000-01-23T04:56:07.000+00:00
          redemption_url: A url that applies promo code directly at checkout or a
            url that points to sale page or store url
          enabled: true
        - usage_count: 0
          code: summersale
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
          created_at_foreign: 2000-01-23T04:56:07.000+00:00
          updated_at_foreign: 2000-01-23T04:56:07.000+00:00
          redemption_url: A url that applies promo code directly at checkout or a
            url that points to sale page or store url
          enabled: true
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
      properties:
        store_id:
          description: The store id.
          title: Store ID
          type: string
        promo_codes:
          description: "An array of objects, each representing promo codes defined\
            \ for a store."
          items:
            $ref: '#/components/schemas/E_commerce_Promo_Code'
          title: Promo Codes
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Promo Codes
      type: object
    Campaign_Settings_2:
      description: "The settings for your campaign, including subject, from name,\
        \ reply-to address, and more."
      example:
        auto_footer: true
        subject_line: subject_line
        preview_text: preview_text
        use_conversation: true
        authenticate: true
        to_name: to_name
        timewarp: true
        title: title
        from_name: from_name
        auto_tweet: true
        auto_fb_post:
        - auto_fb_post
        - auto_fb_post
        fb_comments: true
        drag_and_drop: true
        reply_to: reply_to
        inline_css: true
        template_id: 5
        folder_id: folder_id
      properties:
        subject_line:
          description: The subject line for the campaign.
          title: Campaign Subject Line
          type: string
        preview_text:
          description: The preview text for the campaign.
          title: Campaign Preview Text
          type: string
        title:
          description: The title of the campaign.
          title: Campaign Title
          type: string
        from_name:
          description: The 'from' name on the campaign (not an email address).
          title: From Name
          type: string
        reply_to:
          description: The reply-to email address for the campaign.
          title: Reply To Address
          type: string
        use_conversation:
          description: Use Mailchimp Conversation feature to manage out-of-office
            replies.
          title: Conversation
          type: boolean
        to_name:
          description: "The campaign's custom 'To' name. Typically the first name\
            \ [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
          title: To Name
          type: string
        folder_id:
          description: "If the campaign is listed in a folder, the id for that folder."
          title: Folder ID
          type: string
        authenticate:
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the campaign. Defaults to `true`."
          title: Authentication
          type: boolean
        auto_footer:
          description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the campaign."
          title: Auto-Footer
          type: boolean
        inline_css:
          description: Automatically inline the CSS included with the campaign content.
          title: Inline CSS
          type: boolean
        auto_tweet:
          description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ page when the campaign is sent."
          title: Auto-Tweet
          type: boolean
        auto_fb_post:
          description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
            \ page ids to auto-post to."
          items:
            type: string
          title: Auto Post to Facebook
          type: array
        fb_comments:
          description: Allows Facebook comments on the campaign (also force-enables
            the Campaign Archive toolbar). Defaults to `true`.
          title: Facebook Comments
          type: boolean
        timewarp:
          description: "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/)."
          readOnly: true
          title: Timewarp Send
          type: boolean
        template_id:
          description: The id for the template used in this campaign.
          title: Template ID
          type: integer
        drag_and_drop:
          description: Whether the campaign uses the drag-and-drop editor.
          readOnly: true
          title: Drag And Drop Campaign
          type: boolean
      title: Campaign Settings
      type: object
    E_commerce_Product_Image_1:
      description: Information about a specific product image.
      properties:
        id:
          description: A unique identifier for the product image.
          title: Image Foreign ID
          type: string
        url:
          description: The URL for a product image.
          title: URL
          type: string
        variant_ids:
          description: The list of product variants using the image.
          items:
            type: string
          title: Product Variants
          type: array
      required:
      - id
      - url
      title: E-commerce Product Image
      type: object
    Orders:
      description: A collection of orders in an account.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        orders:
        - discount_total: 6.027456183070403
          fulfillment_status: fulfillment_status
          tax_total: 1.4658129805029452
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          processed_at_foreign: 2015-07-15T19:28:00Z
          billing_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          currency_code: currency_code
          landing_site: http://www.example.com?source=abc
          order_url: order_url
          tracking_number: tracking_number
          id: id
          shipping_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          updated_at_foreign: 2015-07-15T19:28:00Z
          lines:
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          promos:
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          tracking_url: tracking_url
          campaign_id: 839488a60b
          cancelled_at_foreign: 2015-07-15T19:28:00Z
          store_id: store_id
          shipping_total: 5.962133916683182
          outreach:
            published_time: 2017-06-06T13:56:12Z
            name: Freddie's Jokes
            id: 839488a60b
            type: regular
          tracking_code: prec
          tracking_carrier: tracking_carrier
          financial_status: financial_status
          order_total: 0.8008281904610115
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        - discount_total: 6.027456183070403
          fulfillment_status: fulfillment_status
          tax_total: 1.4658129805029452
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          processed_at_foreign: 2015-07-15T19:28:00Z
          billing_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          currency_code: currency_code
          landing_site: http://www.example.com?source=abc
          order_url: order_url
          tracking_number: tracking_number
          id: id
          shipping_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          updated_at_foreign: 2015-07-15T19:28:00Z
          lines:
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          promos:
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          tracking_url: tracking_url
          campaign_id: 839488a60b
          cancelled_at_foreign: 2015-07-15T19:28:00Z
          store_id: store_id
          shipping_total: 5.962133916683182
          outreach:
            published_time: 2017-06-06T13:56:12Z
            name: Freddie's Jokes
            id: 839488a60b
            type: regular
          tracking_code: prec
          tracking_carrier: tracking_carrier
          financial_status: financial_status
          order_total: 0.8008281904610115
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        total_items: 3
      properties:
        orders:
          description: "An array of objects, each representing an order resource."
          items:
            $ref: '#/components/schemas/E_commerce_Order'
          title: Orders
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Orders
      type: object
    Shipping_Address_1:
      description: The shipping address for the order.
      properties:
        name:
          description: The name associated with an order's shipping address.
          example: Freddie Chimpenheimer
          title: Name
          type: string
        address1:
          description: The shipping address for the order.
          example: 675 Ponce de Leon Ave NE
          title: Address Field 1
          type: string
        address2:
          description: An additional field for the shipping address.
          example: Suite 5000
          title: Address Field 2
          type: string
        city:
          description: The city in the order's shipping address.
          example: Atlanta
          title: 'City '
          type: string
        province:
          description: The state or normalized province in the order's shipping address.
          example: Georgia
          title: Province
          type: string
        province_code:
          description: The two-letter code for the province or state in the shipping
            address.
          example: GA
          title: Province Code
          type: string
        postal_code:
          description: The postal or zip code in the shipping address.
          example: "30308"
          title: Postal Code
          type: string
        country:
          description: The country in the shipping address.
          example: United States
          title: Country Code
          type: string
        country_code:
          description: The two-letter code for the country in the shipping address.
          example: US
          title: Country Code
          type: string
        longitude:
          description: The longitude for the shipping address location.
          example: -75.68903
          title: Longitude
          type: number
        latitude:
          description: The latitude for the shipping address location.
          example: 45.427408
          title: Latitude
          type: number
        phone:
          description: The phone number for the order's shipping address.
          example: "8675309"
          title: Phone Number
          type: string
        company:
          description: The company associated with the shipping address.
          title: Company
          type: string
      title: Shipping Address
      type: object
    Campaign_Defaults:
      description: "[Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/)\
        \ created for this list."
      example:
        from_email: from_email
        subject: subject
        language: language
        from_name: from_name
      properties:
        from_name:
          description: The default from name for campaigns sent to this list.
          title: Sender's Name
          type: string
        from_email:
          description: The default from email for campaigns sent to this list.
          title: Sender's Email Address
          type: string
        subject:
          description: The default subject line for campaigns sent to this list.
          title: Subject
          type: string
        language:
          description: The default language for this lists's forms.
          title: Language
          type: string
      title: Campaign Defaults
      type: object
    Member_Activity_Events:
      description: The last 50 member events for a list.
      example:
        email_id: email_id
        activity:
        - parent_campaign: parent_campaign
          action: action
          type: type
          title: title
          url: url
          campaign_id: campaign_id
          timestamp: 2000-01-23T04:56:07.000+00:00
        - parent_campaign: parent_campaign
          action: action
          type: type
          title: title
          url: url
          campaign_id: campaign_id
          timestamp: 2000-01-23T04:56:07.000+00:00
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        contact_id: contact_id
        total_items: 0
      properties:
        activity:
          description: "An array of objects, each representing a member event."
          items:
            $ref: '#/components/schemas/Member_Activity'
          title: Activity
          type: array
        email_id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        contact_id:
          description: "As Mailchimp evolves beyond email, you may eventually have\
            \ contacts without email addresses. While the `email_id` is the MD5 hash\
            \ of their email address, this `contact_id` is agnostic of contact’s inclusion\
            \ of an email address."
          readOnly: true
          title: Contact ID
          type: string
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Member Activity Events
      type: object
    Script_1:
      description: The script used to connect your site with Mailchimp.
      example:
        fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
          script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
          );</script>"
        url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
      properties:
        url:
          description: The URL used for any integrations that offer built-in support
            for connected sites.
          example: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
          readOnly: true
          title: Script URL
          type: string
        fragment:
          description: A pre-built script that you can copy-and-paste into your site
            to integrate it with Mailchimp.
          example: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
          readOnly: true
          title: Script Fragment
          type: string
      readOnly: true
      title: Script
      type: object
    Survey_Report:
      description: The report for a survey.
      example:
        list_id: list_id
        updated_at: 2017-08-04T11:09:01Z
        created_at: 2017-08-04T11:09:01Z
        total_responses: 810
        id: 040d2c2e1f0
        web_id: 165
        list_name: list_name
        title: New product ideas
        published_at: 2017-08-04T11:09:01Z
        url: url
        status: published
      properties:
        id:
          description: A string that uniquely identifies this survey.
          example: 040d2c2e1f0
          readOnly: true
          title: Survey ID
          type: string
        web_id:
          description: "The ID used in the Mailchimp web application. View this survey\
            \ report in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/surveys/results?survey_id={web_id}`."
          example: 165
          readOnly: true
          title: Survey Web ID
          type: integer
        list_id:
          description: The ID of the list connected to this survey.
          readOnly: true
          title: List ID
          type: string
        list_name:
          description: The name of the list connected to this survey.
          readOnly: true
          title: List Name
          type: string
        title:
          description: The title of the survey.
          example: New product ideas
          readOnly: true
          title: Title
          type: string
        url:
          description: The URL for the survey.
          readOnly: true
          title: URL
          type: string
        status:
          description: The survey's status.
          enum:
          - published
          - unpublished
          example: published
          readOnly: true
          title: Status
          type: string
        published_at:
          description: The date and time the survey was published in ISO 8601 format.
          example: 2017-08-04T11:09:01Z
          format: date-time
          readOnly: true
          title: Published At
          type: string
        created_at:
          description: The date and time the survey was created in ISO 8601 format.
          example: 2017-08-04T11:09:01Z
          format: date-time
          readOnly: true
          title: Created At
          type: string
        updated_at:
          description: The date and time the survey was last updated in ISO 8601 format.
          example: 2017-08-04T11:09:01Z
          format: date-time
          readOnly: true
          title: Updated At
          type: string
        total_responses:
          description: The total number of responses to this survey.
          example: 810
          readOnly: true
          title: Total Responses
          type: integer
      title: Survey Report
      type: object
    Member_Activity_1:
      description: A summary of the interaction with the campaign.
      example:
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        timestamp:
          description: The date and time recorded for the action in ISO 8601 format.
          format: date-time
          title: Timestamp
          type: string
      title: Member Activity
      type: object
    Member_Activity_2:
      description: A summary of the interaction with the campaign.
      properties:
        action:
          description: "One of the following actions: 'open', 'click', or 'bounce'"
          title: Action
          type: string
        type:
          description: "If the action is a 'bounce', the type of bounce received:\
            \ 'hard', 'soft'."
          title: Type
          type: string
        timestamp:
          description: The date and time recorded for the action in ISO 8601 format.
          format: date-time
          title: Timestamp
          type: string
        url:
          description: "If the action is a 'click', the URL on which the member clicked."
          title: URL
          type: string
        ip:
          description: The IP address recorded for the action.
          title: IP
          type: string
      title: Member Activity
      type: object
    Batch_update_List_members:
      description: Batch update list members.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        new_members:
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        updated_members:
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        total_created: 42
        error_count: 42
        errors:
        - email_address: email_address
          field: field
          error_code: ERROR_CONTACT_EXISTS
          error: error
          field_message: field_message
        - email_address: email_address
          field: field
          error_code: ERROR_CONTACT_EXISTS
          error: error
          field_message: field_message
        total_updated: 42
      properties:
        new_members:
          description: "An array of objects, each representing a new member that was\
            \ added to the list."
          items:
            $ref: '#/components/schemas/List_Members'
          title: New members
          type: array
        updated_members:
          description: "An array of objects, each representing an existing list member\
            \ whose subscription status was updated."
          items:
            $ref: '#/components/schemas/List_Members'
          title: Updated Members
          type: array
        errors:
          description: "An array of objects, each representing an email address that\
            \ could not be added to the list or updated and an error message providing\
            \ more details."
          items:
            $ref: '#/components/schemas/Errors_inner'
          title: Errors
          type: array
        total_created:
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
          title: Item Count
          type: integer
        total_updated:
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
          title: Item Count
          type: integer
        error_count:
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Batch update List members
      type: object
    Clicks_1_inner:
      example:
        date: 2018-04-25
        val: 13
      properties:
        date:
          example: 2018-04-25
          readOnly: true
          title: Date
          type: string
        val:
          example: 13
          readOnly: true
          title: Value
          type: integer
      type: object
    Tracking_Settings:
      description: The tracking settings applied to this landing page.
      example:
        track_with_mailchimp: true
        enable_restricted_data_processing: true
      properties:
        track_with_mailchimp:
          description: "Use cookies to track unique visitors and calculate overall\
            \ conversion rate. Learn more [here](https://mailchimp.com/help/use-track-mailchimp/)."
          title: Track with Mailchimp
          type: boolean
        enable_restricted_data_processing:
          description: "Google offers restricted data processing in connection with\
            \ the California Consumer Privacy Act (CCPA) to restrict how Google uses\
            \ certain identifiers and other data processed in the provision of its\
            \ services. You can learn more about Google's restricted data processing\
            \ within Google Ads [here](https://privacy.google.com/businesses/rdp/)."
          title: Enable restricted data processing
          type: boolean
      title: Tracking Settings
      type: object
    To_Non_Openers:
      description: Determines if the campaign qualifies to be resent to non-openers.
      example:
        reason: reason
        is_eligible: true
      properties:
        is_eligible:
          description: Determines if the campaign qualifies to be resent to this segment.
          readOnly: true
          title: Is Eligible
          type: boolean
        reason:
          description: The reason the campaign is not eligible to be resent to this
            segment.
          readOnly: true
          title: Reason
          type: string
      title: To Non-Openers
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience_targeting_specs_interests_inner:
      properties:
        name:
          type: string
      type: object
    Landing_Page_Report_ecommerce:
      example:
        average_order_revenue: 9.301444243932576
        total_revenue: 2.3021358869347655
        total_orders: 7
        currency_code: currency_code
      properties:
        total_revenue:
          description: The total revenue of this landing page.
          readOnly: true
          title: Total Revenue
          type: number
        currency_code:
          description: The user's currency code.
          readOnly: true
          title: Currency code
          type: string
        total_orders:
          description: The total number of orders associated with this landing page.
          readOnly: true
          title: Total Orders
          type: integer
        average_order_revenue:
          description: The average order revenue of this landing page.
          readOnly: true
          title: Average Order Revenue
          type: number
      type: object
    Campaign_Tracking_Options:
      description: The tracking options for a campaign.
      example:
        salesforce:
          notes: true
          campaign: true
        goal_tracking: true
        capsule:
          notes: true
        clicktale: clicktale
        text_clicks: true
        ecomm360: true
        opens: true
        google_analytics: google_analytics
        html_clicks: true
      properties:
        opens:
          description: "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/).\
            \ Defaults to `true`."
          title: Opens
          type: boolean
        html_clicks:
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the HTML version of the campaign. Defaults to `true`."
          title: HTML Click Tracking
          type: boolean
        text_clicks:
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the plain-text version of the campaign. Defaults to `true`."
          title: Plain-Text Click Tracking
          type: boolean
        goal_tracking:
          description: Deprecated
          title: Mailchimp Goal Tracking
          type: boolean
        ecomm360:
          description: Whether to enable e-commerce tracking.
          title: E-commerce Tracking
          type: boolean
        google_analytics:
          description: "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/)\
            \ tracking (max of 50 bytes)."
          title: Google Analytics Tracking
          type: string
        clicktale:
          description: "The custom slug for [Click Tale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/)\
            \ tracking (max of 50 bytes)."
          title: ClickTale Analytics Tracking
          type: string
        salesforce:
          $ref: '#/components/schemas/Salesforce_CRM_Tracking'
        capsule:
          $ref: '#/components/schemas/Capsule_CRM_Tracking_1'
      title: Campaign Tracking Options
      type: object
    List_Contact:
      description: "[Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/)\
        \ to comply with international spam laws."
      example:
        zip: zip
        country: country
        address2: address2
        city: city
        phone: phone
        address1: address1
        company: company
        state: state
      properties:
        company:
          description: The company name for the list.
          title: Company Name
          type: string
        address1:
          description: The street address for the list contact.
          title: Address
          type: string
        address2:
          description: The street address for the list contact.
          title: Address
          type: string
        city:
          description: The city for the list contact.
          title: City
          type: string
        state:
          description: The state for the list contact.
          title: State
          type: string
        zip:
          description: The postal or zip code for the list contact.
          title: Postal Code
          type: string
        country:
          description: A two-character ISO3166 country code. Defaults to US if invalid.
          title: Country Code
          type: string
        phone:
          description: The phone number for the list contact.
          title: Phone Number
          type: string
      title: List Contact
      type: object
    Event:
      description: A specific event for a contact.
      example:
        occurred_at: 2000-01-23T04:56:07.000+00:00
        name: name
        properties:
          key: properties
      properties:
        occurred_at:
          description: The date and time the event occurred in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Occurred Time
          type: string
        name:
          description: "The name for this type of event ('purchased', 'visited', etc).\
            \ Must be 2-30 characters in length"
          title: Event Name
          type: string
        properties:
          additionalProperties:
            type: string
          description: An optional list of properties
          title: Properties
          type: object
      title: Event
      type: object
    Twitter_Stats:
      description: A summary of Twitter activity for a campaign.
      example:
        last_tweet: last_tweet
        statuses:
        - datetime: 2000-01-23T04:56:07.000+00:00
          status_id: status_id
          screen_name: screen_name
          is_retweet: true
          status: status
        - datetime: 2000-01-23T04:56:07.000+00:00
          status_id: status_id
          screen_name: screen_name
          is_retweet: true
          status: status
        first_tweet: first_tweet
        tweets: 0
        retweets: 6
      properties:
        tweets:
          description: The number of tweets including a link to the campaign.
          readOnly: true
          title: Tweet Count
          type: integer
        first_tweet:
          description: The day and time of the first recorded tweet with a link to
            the campaign.
          readOnly: true
          title: First Tweet Timestamp
          type: string
        last_tweet:
          description: The day and time of the last recorded tweet with a link to
            the campaign.
          readOnly: true
          title: Last Tweet Timestamp
          type: string
        retweets:
          description: The number of retweets that include a link to the campaign.
          readOnly: true
          title: Retweet Count
          type: integer
        statuses:
          description: A summary of tweets that include a link to the campaign.
          items:
            $ref: '#/components/schemas/Twitter_Status'
          readOnly: true
          title: Twitter Status
          type: array
      title: Twitter Stats
      type: object
    Subscriber_Stats:
      description: Open and click rates for this subscriber.
      example:
        avg_click_rate: 6.027456183070403
        avg_open_rate: 0.8008281904610115
      properties:
        avg_open_rate:
          description: A subscriber's average open rate.
          readOnly: true
          title: Average Open Rate
          type: number
        avg_click_rate:
          description: A subscriber's average clickthrough rate.
          readOnly: true
          title: Average Click Rate
          type: number
      readOnly: true
      title: Subscriber Stats
      type: object
    Members_to_add_remove_to_from_a_static_segment:
      description: Members to add/remove to/from a static segment
      properties:
        members_to_add:
          description: An array of emails to be used for a static segment. Any emails
            provided that are not present on the list will be ignored. A maximum of
            500 members can be sent.
          items:
            type: string
          title: Members to add to the static segment
          type: array
        members_to_remove:
          description: An array of emails to be used for a static segment. Any emails
            provided that are not present on the list will be ignored. A maximum of
            500 members can be sent.
          items:
            type: string
          title: Members to remove from the static segment
          type: array
      title: Members to add/remove to/from a static segment
      type: object
    Collection_of_Events:
      description: A collection of events for a given contact
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
        events:
        - occurred_at: 2000-01-23T04:56:07.000+00:00
          name: name
          properties:
            key: properties
        - occurred_at: 2000-01-23T04:56:07.000+00:00
          name: name
          properties:
            key: properties
      properties:
        events:
          description: "An array of objects, each representing an event."
          items:
            $ref: '#/components/schemas/Event'
          title: Events
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Collection of Events
      type: object
    List_Stats:
      description: The average campaign statistics for your list. This won't be present
        if we haven't calculated it yet for this list.
      example:
        sub_rate: 9.018348186070783
        click_rate: 6.965117697638846
        unsub_rate: 6.438423552598547
        open_rate: 3.5571952270680973
      properties:
        sub_rate:
          description: The average number of subscriptions per month for the list.
          readOnly: true
          title: Average Subscription Rate
          type: number
        unsub_rate:
          description: The average number of unsubscriptions per month for the list.
          readOnly: true
          title: Average Unsubscription Rate
          type: number
        open_rate:
          description: The average open rate (a percentage represented as a number
            between 0 and 100) per campaign for the list.
          readOnly: true
          title: Open Rate
          type: number
        click_rate:
          description: The average click rate (a percentage represented as a number
            between 0 and 100) per campaign for the list.
          readOnly: true
          title: Click Rate
          type: number
      title: List Stats
      type: object
    Report_Summary_ecommerce:
      properties:
        total_revenue:
          type: number
        currency_code:
          type: string
        average_order_revenue:
          type: number
      type: object
    Templates:
      description: A list an account's available templates.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        templates:
        - thumbnail: thumbnail
          date_edited: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          date_created: 2000-01-23T04:56:07.000+00:00
          active: true
          type: type
          created_by: created_by
          drag_and_drop: true
          content_type: template
          share_url: share_url
          responsive: true
          name: name
          id: 0
          category: category
          folder_id: folder_id
          edited_by: edited_by
        - thumbnail: thumbnail
          date_edited: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          date_created: 2000-01-23T04:56:07.000+00:00
          active: true
          type: type
          created_by: created_by
          drag_and_drop: true
          content_type: template
          share_url: share_url
          responsive: true
          name: name
          id: 0
          category: category
          folder_id: folder_id
          edited_by: edited_by
        total_items: 6
      properties:
        templates:
          description: All of an account's saved or custom templates.
          items:
            $ref: '#/components/schemas/Template_Instance'
          title: User Templates
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Templates
      type: object
    A_B_Test_Options_2:
      description: The settings specific to A/B test campaigns.
      example:
        send_times:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        combinations:
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: id
          from_name: 3
          content_description: 4
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: id
          from_name: 3
          content_description: 4
        wait_time: 5
        subject_lines:
        - subject_lines
        - subject_lines
        contents:
        - contents
        - contents
        test_size: 2
        winning_combination_id: winning_combination_id
        reply_to_addresses:
        - reply_to_addresses
        - reply_to_addresses
        winner_criteria: opens
        winning_campaign_id: winning_campaign_id
        from_names:
        - from_names
        - from_names
      properties:
        winning_combination_id:
          description: ID for the winning combination.
          readOnly: true
          title: Winning Combination ID
          type: string
        winning_campaign_id:
          description: ID of the campaign that was sent to the remaining recipients
            based on the winning combination.
          readOnly: true
          title: Winning Campaign ID
          type: string
        winner_criteria:
          description: "The combination that performs the best. This may be determined\
            \ automatically by click rate, open rate, or total revenue -- or you may\
            \ choose manually based on the reporting data you find the most valuable.\
            \ For Multivariate Campaigns testing send_time, winner_criteria is ignored.\
            \ For Multivariate Campaigns with 'manual' as the winner_criteria, the\
            \ winner must be chosen in the Mailchimp web application."
          enum:
          - opens
          - clicks
          - manual
          - total_revenue
          title: Winning Criteria
          type: string
        wait_time:
          description: "The number of minutes to wait before choosing the winning\
            \ campaign. The value of wait_time must be greater than 0 and in whole\
            \ hours, specified in minutes."
          title: Wait Time
          type: integer
        test_size:
          description: "The percentage of recipients to send the test combinations\
            \ to, must be a value between 10 and 100."
          title: Test Size
          type: integer
        subject_lines:
          description: "The possible subject lines to test. If no subject lines are\
            \ provided, settings.subject_line will be used."
          items:
            type: string
          title: Subject Lines
          type: array
        send_times:
          description: "The possible send times to test. The times provided should\
            \ be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to\
            \ test, the test_size will be set to 100% and winner_criteria will be\
            \ ignored."
          items:
            format: date-time
            type: string
          title: Send Times
          type: array
        from_names:
          description: "The possible from names. The number of from_names provided\
            \ must match the number of reply_to_addresses. If no from_names are provided,\
            \ settings.from_name will be used."
          items:
            type: string
          title: From Names
          type: array
        reply_to_addresses:
          description: "The possible reply-to addresses. The number of reply_to_addresses\
            \ provided must match the number of from_names. If no reply_to_addresses\
            \ are provided, settings.reply_to will be used."
          items:
            type: string
          title: Reply To Addresses
          type: array
        contents:
          description: "Descriptions of possible email contents. To set campaign contents,\
            \ make a PUT request to /campaigns/{campaign_id}/content with the field\
            \ 'variate_contents'."
          items:
            type: string
          readOnly: true
          title: Content Descriptions
          type: array
        combinations:
          description: Combinations of possible variables used to build emails.
          items:
            $ref: '#/components/schemas/Combinations_inner'
          readOnly: true
          title: Combinations
          type: array
      required:
      - winner_criteria
      title: A/B Test Options
      type: object
    A_B_Test_Options_1:
      description: The settings specific to A/B test campaigns.
      properties:
        winner_criteria:
          description: "The combination that performs the best. This may be determined\
            \ automatically by click rate, open rate, or total revenue -- or you may\
            \ choose manually based on the reporting data you find the most valuable.\
            \ For Multivariate Campaigns testing send_time, winner_criteria is ignored.\
            \ For Multivariate Campaigns with 'manual' as the winner_criteria, the\
            \ winner must be chosen in the Mailchimp web application."
          enum:
          - opens
          - clicks
          - manual
          - total_revenue
          title: Winning Criteria
          type: string
        wait_time:
          description: "The number of minutes to wait before choosing the winning\
            \ campaign. The value of wait_time must be greater than 0 and in whole\
            \ hours, specified in minutes."
          title: Wait Time
          type: integer
        test_size:
          description: "The percentage of recipients to send the test combinations\
            \ to, must be a value between 10 and 100."
          title: Test Size
          type: integer
        subject_lines:
          description: "The possible subject lines to test. If no subject lines are\
            \ provided, settings.subject_line will be used."
          items:
            type: string
          title: Subject Lines
          type: array
        send_times:
          description: "The possible send times to test. The times provided should\
            \ be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to\
            \ test, the test_size will be set to 100% and winner_criteria will be\
            \ ignored."
          items:
            format: date-time
            type: string
          title: Send Times
          type: array
        from_names:
          description: "The possible from names. The number of from_names provided\
            \ must match the number of reply_to_addresses. If no from_names are provided,\
            \ settings.from_name will be used."
          items:
            type: string
          title: From Names
          type: array
        reply_to_addresses:
          description: "The possible reply-to addresses. The number of reply_to_addresses\
            \ provided must match the number of from_names. If no reply_to_addresses\
            \ are provided, settings.reply_to will be used."
          items:
            type: string
          title: Reply To Addresses
          type: array
      required:
      - winner_criteria
      title: A/B Test Options
      type: object
    Industry_Stats:
      description: "The [average campaign statistics](https://mailchimp.com/resources/research/email-marketing-benchmarks/?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)\
        \ for all campaigns in the account's specified industry."
      example:
        click_rate: 5.962133916683182
        bounce_rate: 1.4658129805029452
        open_rate: 6.027456183070403
      properties:
        open_rate:
          description: The average unique open rate for all campaigns in the account's
            specified industry.
          readOnly: true
          title: Open Rate
          type: number
        bounce_rate:
          description: The average bounce rate for all campaigns in the account's
            specified industry.
          readOnly: true
          title: Bounce Rate
          type: number
        click_rate:
          description: The average unique click rate for all campaigns in the account's
            specified industry.
          readOnly: true
          title: Click Rate
          type: number
      readOnly: true
      title: Industry Stats
      type: object
    A_B_Split_Stats:
      description: General stats about different groups of an A/B Split campaign.
        Does not return information about Multivariate Campaigns.
      example:
        a:
          forwards: 5
          unsubs: 6
          opens: 3
          bounces: 1
          recipient_clicks: 6
          forwards_opens: 6
          last_open: last_open
          abuse_reports: 2
          unique_opens: 3
        b:
          forwards: 0
          unsubs: 7
          opens: 8
          bounces: 7
          recipient_clicks: 6
          forwards_opens: 4
          last_open: last_open
          abuse_reports: 0
          unique_opens: 7
      properties:
        a:
          $ref: '#/components/schemas/Campaign_A'
        b:
          $ref: '#/components/schemas/Campaign_B'
      title: A/B Split Stats
      type: object
    Survey_Respondents:
      description: Survey respondent details.
      example:
        submitted_at: 2000-01-23T04:56:07.000+00:00
        response_id: response_id
        contact:
          email_id: email_id
          full_name: full_name
          avatar_url: avatar_url
          phone: phone
          contact_id: contact_id
          email: email
          status: Subscribed
          consents_to_one_to_one_messaging: true
        is_new_contact: true
      properties:
        response_id:
          description: The ID for the survey response.
          readOnly: true
          title: Response ID
          type: string
        submitted_at:
          description: The date and time when the survey response was submitted in
            ISO 8601 format.
          format: date-time
          readOnly: true
          title: Submitted At
          type: string
        contact:
          $ref: '#/components/schemas/Contact'
        is_new_contact:
          description: If this contact was added to the Mailchimp audience via this
            survey.
          title: Is New Contact
          type: boolean
      title: Survey Respondents
      type: object
    Interest:
      description: Assign subscribers to interests to group them together. Interests
        are referred to as 'group names' in the Mailchimp application.
      example:
        category_id: category_id
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        subscriber_count: subscriber_count
        name: name
        display_order: 0
        id: id
      properties:
        category_id:
          description: The id for the interest category.
          readOnly: true
          title: Interest Category ID
          type: string
        list_id:
          description: The ID for the list that this interest belongs to.
          readOnly: true
          title: List ID
          type: string
        id:
          description: The ID for the interest.
          readOnly: true
          title: Interest ID
          type: string
        name:
          description: The name of the interest. This can be shown publicly on a subscription
            form.
          title: Interest Name
          type: string
        subscriber_count:
          description: The number of subscribers associated with this interest.
          readOnly: true
          title: Subscriber Count
          type: string
        display_order:
          description: The display order for interests.
          title: Display Order
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Interest
      type: object
    A_B_Split:
      description: A breakdown of clicks by different groups of an A/B Split campaign.
        Does not return information about Multivariate Campaigns.
      properties:
        a:
          $ref: '#/components/schemas/Group_A'
        b:
          $ref: '#/components/schemas/Group_B'
      title: A/B Split
      type: object
    Member_Tag:
      description: Add or remove tags on a member by declaring a tag either active
        or inactive on a member.
      properties:
        name:
          description: The name of the tag.
          title: Tag Name
          type: string
        status:
          description: "The status for the tag on the member, pass in active to add\
            \ a tag or inactive to remove it."
          enum:
          - inactive
          - active
          title: Status
          type: string
      required:
      - name
      - status
      title: Member Tag
      type: object
    Add_List_Members:
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      properties:
        email_address:
          description: Email address for a subscriber.
          title: Email Address
          type: string
        email_type:
          description: Type of email this member asked to get ('html' or 'text').
          title: Email Type
          type: string
        status:
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
          title: Status
          type: string
        merge_fields:
          additionalProperties:
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
            type: object
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
          title: Merge Fields
          type: object
        interests:
          additionalProperties:
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
            title: Interest Value
            type: boolean
          description: The key of this object's properties is the ID of the interest
            in question.
          title: Subscriber Interests
          type: object
        language:
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
          title: Language
          type: string
        vip:
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          title: VIP
          type: boolean
        location:
          $ref: '#/components/schemas/Location'
        ip_signup:
          description: IP address the subscriber signed up from.
          title: Signup IP
          type: string
        timestamp_signup:
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
          title: Signup Timestamp
          type: string
        ip_opt:
          description: The IP address the subscriber used to confirm their opt-in
            status.
          title: Opt-in IP
          type: string
        timestamp_opt:
          description: The date and time the subscriber confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
          title: Opt-in Timestamp
          type: string
      title: Add List Members
      type: object
    Conditions_1:
      description: "The [conditions of the segment](https://mailchimp.com/help/save-and-manage-segments/).\
        \ Static and fuzzy segments don't have conditions."
      properties:
        match:
          description: Match type.
          enum:
          - any
          - all
          title: Match
          type: string
        conditions:
          description: "Segment match conditions. There are multiple possible types,\
            \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
          items:
            type: object
            x-oneOf:
            - type: object
              title: Aim Segment
              description: Segment by interaction with a specific campaign.
              properties:
                condition_type:
                  type: string
                  x-value: Aim
                  enum:
                  - Aim
                field:
                  type: string
                  enum:
                  - aim
                  title: Segment Field
                  description: Segment by interaction with a specific campaign.
                  example: aim
                op:
                  type: string
                  enum:
                  - open
                  - click
                  - sent
                  - noopen
                  - noclick
                  - nosent
                  title: Segment Operator
                  description: "The status of the member with regard to their campaign\
                    \ interaction. One of the following: opened, clicked, was sent,\
                    \ didn't open, didn't click, or was not sent."
                  example: open
                value:
                  type: string
                  title: Segment Data
                  description: Either the web id value for a specific campaign or
                    'any' to account for subscribers who have/have not interacted
                    with any campaigns.
                  example: any
            - type: object
              title: Automation Segment
              description: Segment by interaction with an Automation workflow.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Automation
                  enum:
                  - Automation
                field:
                  type: string
                  enum:
                  - automation
                  title: Segment Field
                  description: Segment by interaction with an Automation workflow.
                  example: automation
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the automation\
                    \ workflow. One of the following: has started the workflow, has\
                    \ completed the workflow, has not started the workflow, or has\
                    \ not completed the workflow."
                  example: started
                value:
                  type: string
                  title: Segment Data
                  description: The web id for the automation workflow to segment against.
                  example: "2135217"
            - type: object
              title: Poll Activity Segment
              description: Segment by poll activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: CampaignPoll
                  enum:
                  - CampaignPoll
                field:
                  type: string
                  enum:
                  - poll
                  title: Segment Field
                  description: Segment by poll activity.
                  example: poll
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members have/have not interacted with a specific poll
                    in a Mailchimp email.
                  example: member
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the poll.
                  example: 409
            - type: object
              title: Conversation Segment
              description: Segment by interaction with a campaign via Conversations.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Conversation
                  enum:
                  - Conversation
                field:
                  type: string
                  enum:
                  - conversation
                  title: Segment Field
                  description: Segment by interaction with a campaign via Conversations.
                  example: conversation
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: "The status of a member's interaction with a conversation.\
                    \ One of the following: has replied or has not replied."
                  example: member
                value:
                  type: string
                  title: Segment Data
                  description: The web id value for a specific campaign or 'any' to
                    account for subscribers who have/have not interacted with any
                    campaigns.
                  example: any
            - type: object
              title: Date Segment
              description: Segment by a specific date field.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Date
                  enum:
                  - Date
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  - info_changed
                  - ecomm_date
                  title: Segment Field
                  description: "The type of date field to segment on: The opt-in time\
                    \ for a signup, the date the subscriber was last updated, or the\
                    \ date of their last ecomm purchase."
                  example: timestamp_opt
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  - not
                  - blank
                  - blank_not
                  - within
                  - notwithin
                  title: Segment Operator
                  description: "When the event took place:  Before, after, is a specific\
                    \ date, is not a specific date, is blank, or is not blank."
                  example: greater
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
                  example: date
                extra:
                  type: string
                  title: Segment Extra Value
                  description: "When segmenting on 'date' or 'campaign', the date\
                    \ for the segment formatted as YYYY-MM-DD or the web id for the\
                    \ campaign."
                  example: 2015-01-30
            - type: object
              title: Email Client Segment
              description: Segment by use of a particular email client.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EmailClient
                  enum:
                  - EmailClient
                field:
                  type: string
                  enum:
                  - email_client
                  title: Segment Field
                  description: Segment by use of a particular email client.
                  example: email_client
                op:
                  type: string
                  enum:
                  - client_is
                  - client_not
                  title: Segment Operator
                  description: "The operation to determine whether we select clients\
                    \ that match the value, or clients that do not match the value."
                  example: client_is
                value:
                  type: string
                  title: Segment Data
                  description: The name of the email client.
                  example: Gmail
            - type: object
              title: Language Segment
              description: Segment by language.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Language
                  enum:
                  - Language
                field:
                  type: string
                  enum:
                  - language
                  title: Segment Field
                  description: Segmenting based off of a subscriber's language.
                  example: language
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Whether the member's language is or is not set to a
                    specific language.
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: A two-letter language identifier.
                  example: en
            - type: object
              title: Member Rating Segment
              description: Segment by member rating.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: MemberRating
                  enum:
                  - MemberRating
                field:
                  type: string
                  enum:
                  - rating
                  title: Segment Field
                  description: Segment by member rating.
                  example: rating
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have have a rating that is/not exactly
                    a given number or members who have a rating greater/less than
                    a given number.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The star rating number to segment against.
                  example: 4
            - type: object
              title: Signup Source Segment
              description: Segment by signup source.
              required:
              - field
              - condition_type
              - op
              properties:
                condition_type:
                  type: string
                  enum:
                  - SignupSource
                  x-value: SignupSource
                  title: Type
                field:
                  type: string
                  enum:
                  - source
                  title: Segment Field
                  example: source
                op:
                  type: string
                  enum:
                  - source_is
                  - source_not
                  title: Segment Operator
                  description: Whether the member's signup source was/was not a particular
                    value.
                  example: source_is
                value:
                  type: string
                  title: Segment Data
                  description: The signup source.
                  example: List Import
            - type: object
              title: Survey Monkey Segment
              description: Segment by interaction with a SurveyMonkey survey.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SurveyMonkey
                  enum:
                  - SurveyMonkey
                field:
                  type: string
                  enum:
                  - survey_monkey
                  title: Segment Field
                  description: Segment by interaction with a SurveyMonkey survey.
                  example: survey_monkey
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the survey.One\
                    \ of the following: has started the survey, has completed the\
                    \ survey, has not started the survey, or has not completed the\
                    \ survey."
                  example: started
                value:
                  type: string
                  title: Survey ID
                  description: The unique ID of the survey monkey survey.
                  example: "32179586"
            - type: object
              title: VIP Segment
              description: Segment by VIP status.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: VIP
                  enum:
                  - VIP
                field:
                  type: string
                  enum:
                  - gmonkey
                  title: Segment Field
                  description: Segment by VIP status.
                  example: gmonkey
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Whether the member is or is not marked as VIP.
                  example: member
            - type: object
              title: Interests Segment
              description: Segment by an interest group merge field.
              properties:
                condition_type:
                  type: string
                  x-value: Interests
                  enum:
                  - Interests
                field:
                  type: string
                  title: Segment Field
                  description: Segmenting based on interest group information. This
                    should start with 'interests-' followed by the grouping id. Ex.
                    'interests-123'.
                  example: interests-123
                op:
                  type: string
                  enum:
                  - interestcontains
                  - interestcontainsall
                  - interestnotcontains
                  title: Segment Operator
                  description: "Whether the member is a part of one, all, or none\
                    \ of the groups."
                  example: interestcontains
                value:
                  type: array
                  title: Segment Value
                  description: "An array containing strings, each representing a group\
                    \ id."
                  items:
                    type: string
                    example:
                    - "44401"
                    - "44405"
                    - "44409"
            - type: object
              title: Ecommerce Category Segment
              description: Segment by purchases in specific items or categories.
              properties:
                condition_type:
                  type: string
                  x-value: EcommCategory
                  enum:
                  - EcommCategory
                field:
                  type: string
                  enum:
                  - ecomm_cat
                  - ecomm_prod
                  title: Segment Field
                  description: Segment by purchases in specific items or categories.
                  example: ecomm_cat
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "A member who has purchased from a category/specific\
                    \ item that is/is not a specific name, where the category/item\
                    \ name contains/doesn't contain a specific phrase or string, or\
                    \ a category/item name that starts/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: The ecommerce category/item information.
                  example: Product
            - type: object
              title: Ecommerce Number Segment
              description: "Segment by average spent total, number of orders, total\
                \ number of products purchased, or average number of products per\
                \ order."
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EcommNumber
                  enum:
                  - EcommNumber
                field:
                  type: string
                  enum:
                  - ecomm_spent_avg
                  - ecomm_orders
                  - ecomm_prod_all
                  - ecomm_avg_ord
                  title: Segment Field
                  description: "Segment by average spent total, number of orders,\
                    \ total number of products purchased, or average number of products\
                    \ per order."
                  example: ecomm_orders
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than the segment value."
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than this amount."
                  example: 42
            - type: object
              title: Ecommerce Purchased Segment
              description: Segment by whether someone has purchased anything.
              properties:
                condition_type:
                  type: string
                  x-value: EcommPurchased
                  enum:
                  - EcommPurchased
                field:
                  type: string
                  enum:
                  - ecomm_purchased
                  title: Segment Field
                  description: Segment by whether someone has purchased anything.
                  example: ecomm_purchased
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who have have ('member') or have not ('notmember')
                    purchased.
                  example: member
            - type: object
              title: Ecommerce Spent Segment
              description: Segment by amount spent on a single order or across all
                orders.
              properties:
                condition_type:
                  type: string
                  x-value: EcommSpent
                  enum:
                  - EcommSpent
                field:
                  type: string
                  enum:
                  - ecomm_spent_one
                  - ecomm_spent_all
                  title: Segment Field
                  description: Segment by amount spent on a single order or across
                    all orders.
                  example: ecomm_spent_one
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have spent 'more' or 'less' than then specified
                    value.
                  example: greater
                value:
                  type: integer
                  title: Segment Data
                  description: The total amount a member spent.
                  example: 42
            - type: object
              title: Ecommerce Purchased Store Segment
              description: Segment by purchases from a specific store.
              properties:
                condition_type:
                  type: string
                  x-value: EcommStore
                  enum:
                  - EcommStore
                field:
                  type: string
                  enum:
                  - ecomm_store
                  title: Segment Field
                  description: Segment by purchases from a specific store.
                  example: ecomm_store
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who have or have not purchased from a specific
                    store.
                  example: is
                value:
                  type: string
                  title: Segment Operator
                  description: The store id to segment against.
                  example: "289"
            - type: object
              title: Goal Activity Segment
              description: Segment by Goal activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalActivity
                  enum:
                  - GoalActivity
                field:
                  type: string
                  enum:
                  - goal
                  title: Segment Field
                  description: Segment by Goal activity.
                  example: goal
                op:
                  type: string
                  enum:
                  - is
                  - goal_not
                  - contains
                  - goal_notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "Whether the website URL is/not exactly, contains/doesn't\
                    \ contain, starts with/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The URL to check Goal activity against.
            - type: object
              title: Goal Timestamp Segment
              description: Segment by most recent interaction with a website.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalTimestamp
                  enum:
                  - GoalTimestamp
                field:
                  type: string
                  enum:
                  - goal_last_visited
                  title: Segment Field
                  description: Segment by most recent interaction with a website.
                  example: goal_last_visited
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  title: Segment Operator
                  description: "Whether the website activity happened after, before,\
                    \ or at a given timestamp."
                  example: greater
                value:
                  type: string
                  title: Segment Value
                  description: The date to check Goal activity against.
                  example: 2015-07-20 19:45:21
            - type: object
              title: Similar Subscribers Segment Member Segment
              description: Segment by similar subscribers.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: FuzzySegment
                  enum:
                  - FuzzySegment
                field:
                  type: string
                  enum:
                  - fuzzy_segment
                  title: Segment Field
                  description: Segment by similar subscribers.
                  example: fuzzy_segment
                op:
                  type: string
                  enum:
                  - fuzzy_is
                  - fuzzy_not
                  title: Segment Operator
                  description: Members who are/are not apart of a 'similar subscribers'
                    segment.
                  example: fuzzy_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the 'similar subscribers' segment.
                  example: 48433
            - type: object
              title: Static Segment Member Segment
              description: Segment by a given static segment.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: StaticSegment
                  enum:
                  - StaticSegment
                field:
                  type: string
                  enum:
                  - static_segment
                  title: Segment Field
                  description: Segment by a given static segment.
                  example: static_segment
                op:
                  type: string
                  enum:
                  - static_is
                  - static_not
                  title: Segment Operator
                  description: Members who are/are not apart of a static segment.
                  example: static_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the static segment.
                  example: 48433
            - type: object
              title: Location-Based Segment
              description: Segment by a specific country or US state.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoCountryState
                  enum:
                  - IPGeoCountryState
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeocountry
                  - ipgeonotcountry
                  - ipgeostate
                  - ipgeonotstate
                  title: Segment Operator
                  description: Segment members who are within a specific country or
                    US state.
                  example: ipgeocountry
                value:
                  type: string
                  title: Segment Data
                  description: The two-letter country code or US state abbreviation.
                  example: US
            - type: object
              title: Geolocation Segment
              description: Segment by a specific geographic region.
              required:
              - field
              - op
              - value
              - addr
              - lat
              - lng
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoIn
                  enum:
                  - IPGeoIn
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoin
                  - ipgeonotin
                  title: Segment Operator
                  description: Segment members who are within a specific geographic
                    region.
                  example: ipgeoin
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 42
                addr:
                  type: string
                  title: Segment Location Address
                  description: The address of the target location.
                  example: "Atlanta, GA, USA"
                lat:
                  type: string
                  title: Segment Location Latitude
                  description: The latitude of the target location.
                  example: "33.7489954"
                lng:
                  type: string
                  title: Segment Location Longitude
                  description: The longitude of the target location.
                  example: "-84.3879824"
            - type: object
              title: US Zip Code Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoInZip
                  enum:
                  - IPGeoInZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoinzip
                  title: Segment Operator
                  description: Segment members who are within a specific US zip code.
                  example: ipgeoinzip
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 25
                extra:
                  type: integer
                  title: Extra Data
                  description: The zip code to segment against.
                  example: 30318
            - type: object
              title: Unknown Location-Based Segment
              description: Segment members whose location information is unknown.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoUnknown
                  enum:
                  - IPGeoUnknown
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeounknown
                  title: Segment Operator
                  description: Segment members for which location information is unknown.
                  example: ipgeounknown
            - type: object
              title: Zip Code Location-Based Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoZip
                  enum:
                  - IPGeoZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoiszip
                  - ipgeonotzip
                  title: Segment Operator
                  description: Segment members who are/are not within a specific US
                    zip code.
                  example: ipgeonotzip
                value:
                  type: integer
                  title: Segment Data
                  description: The 5-digit zip code.
                  example: 30318
            - type: object
              title: Social Profiles Age Segment
              description: Segment by age ranges in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialAge
                  enum:
                  - SocialAge
                field:
                  type: string
                  enum:
                  - social_age
                  title: Segment Field
                  description: Segment by age ranges in Social Profiles data.
                  example: social_age
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-54
                  - 55+
                  title: Segment Operator
                  description: The age range to segment.
                  example: 35-54
            - type: object
              title: Social Profiles Gender Segment
              description: Segment by listed gender in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialGender
                  enum:
                  - SocialGender
                field:
                  type: string
                  enum:
                  - social_gender
                  title: Segment Field
                  description: Segment by listed gender in Social Profiles data.
                  example: social_gender
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The Social Profiles gender to segment.
                  example: female
            - type: object
              title: Social Profiles Influence Segment
              description: Segment by influence rating in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialInfluence
                  enum:
                  - SocialInfluence
                field:
                  type: string
                  enum:
                  - social_influence
                  title: Segment Field
                  description: Segment by influence rating in Social Profiles data.
                  example: social_influence
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have a rating that is/not or greater/less
                    than the rating provided.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The Social Profiles influence rating to segment.
                  example: 2
            - type: object
              title: Social Profiles Social Network Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkMember
                  enum:
                  - SocialNetworkMember
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who are/not on a given social network.
                  example: member
                value:
                  type: string
                  enum:
                  - twitter
                  - facebook
                  - linkedin
                  - flickr
                  - foursquare
                  - lastfm
                  - myspace
                  - quora
                  - vimeo
                  - yelp
                  - youtube
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter
            - type: object
              title: Social Profiles Social Network Follow Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkFollow
                  enum:
                  - SocialNetworkFollow
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - follow
                  - notfollow
                  title: Segment Operator
                  description: Members who are/not following a linked account on a
                    given social network.
                  example: follow
                value:
                  type: string
                  enum:
                  - twitter_follow
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter_follow
            - type: object
              title: Address Merge Field Segment
              description: Segment by an address-type merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: AddressMerge
                  enum:
                  - AddressMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address-type merge field to segment.
                  example: MMERGE3
                op:
                  type: string
                  enum:
                  - contains
                  - notcontain
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's address merge field contains/does
                    not contain a value or is/is not blank.
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Atlanta
            - type: object
              title: Address/Zip Merge Field Segment
              description: Segment by an address-type merge field within a given distance.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: ZipMerge
                  enum:
                  - ZipMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address or zip-type merge field to segment.
                  example: MMERGE2
                op:
                  type: string
                  enum:
                  - geoin
                  title: Segment Operator
                  description: Whether the member's address merge field is within
                    a given distance from a city or zip.
                  example: geoin
                value:
                  type: string
                  title: Segment Value
                  description: The distance from the city/zip.
                  example: "25"
                extra:
                  type: string
                  title: Segment Extra
                  description: The city or the zip being used to segment against.
                  example: "30318"
            - type: object
              title: Birthday Merge Field Segment
              description: Segment by a contact's birthday.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: BirthdayMerge
                  enum:
                  - BirthdayMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE4
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's birthday merge information is/is
                    not a certain date or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against (mm/dd).
                  example: 01/30
            - type: object
              title: Date Merge Field Segment
              description: Segment by a given date merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: DateMerge
                  enum:
                  - DateMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE5
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - less
                  - blank
                  - blank_not
                  - greater
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ is greater/less than a value or is/is not blank."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against.
                  example: 01/30/2015
            - type: object
              title: Dropdown/Radio Merge Field Segment
              description: An individual segment condition
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: SelectMerge
                  enum:
                  - SelectMerge
                field:
                  type: string
                  title: Segment Field
                  description: A merge field to segment.
                  example: MMERGE6
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  - notcontain
                  - contains
                  title: Segment Operator
                  description: Whether the member's merge information is/is not a
                    value or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Second Choice
            - type: object
              title: Text or Number Merge Field Segment
              description: Segment by a given text or number merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: TextMerge
                  enum:
                  - TextMerge
                field:
                  type: string
                  title: Segment Field
                  description: A text or number merge field to segment.
                  example: MMERGE7
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ contains/does not contain, starts/ends with, or is greater/less\
                    \ than a value"
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text or number merge field with.
                  example: Freddie's Jokes
            - type: object
              title: Email Segment
              description: Segment by email address.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: EmailAddress
                  enum:
                  - EmailAddress
                field:
                  type: string
                  enum:
                  - merge0
                  - EMAIL
                  title: Segment Field
                  description: Segmenting based off of a subscriber's email address.
                  example: EMAIL
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  title: Segment Operator
                  description: "Whether the email address is/not exactly, contains/doesn't\
                    \ contain, starts/ends with a string."
                value:
                  type: string
                  title: Segment Value
                  description: The value to compare the email against.
                  example: urist.mcvankab@freddiesjokes.com
            - type: object
              title: Predicted Gender Segment
              description: Segment by predicted gender.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedGender
                  enum:
                  - PredictedGender
                field:
                  type: string
                  enum:
                  - predicted_gender
                  title: Segment Field
                  description: Segment by predicted gender.
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The predicted gender to segment.
                  example: female
            - type: object
              title: Predicted Age Segment
              description: Segment by predicted age.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedAge
                  enum:
                  - PredictedAge
                field:
                  type: string
                  enum:
                  - predicted_age_range
                  title: Segment Field
                  description: Segment by predicted age.
                op:
                  type: string
                  enum:
                  - is
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-44
                  - 45-54
                  - 55-64
                  - 65+
                  title: Segment Operator
                  description: The predicted age to segment.
                  example: female
            - type: object
              title: New Subscribers Prebuilt Segment
              description: Segment by when people subscribed.
              properties:
                condition_type:
                  type: string
                  x-value: NewSubscribers
                  enum:
                  - NewSubscribers
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  title: Segment Field
                  description: Segment by when people subscribed.
                op:
                  type: string
                  enum:
                  - date_within
                  title: Segment Operator
                  description: "Whe the event took place, namely within a time frame."
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
            x-discriminator:
              type: string
              propertyName: condition_type
          title: Segment Type
          type: array
      title: Conditions
      type: object
    Conditions_2:
      description: "The [conditions of the segment](https://mailchimp.com/help/save-and-manage-segments/).\
        \ Static and fuzzy segments don't have conditions."
      properties:
        match:
          description: Match type.
          enum:
          - any
          - all
          title: Match
          type: string
        conditions:
          description: An array of segment conditions.
          items:
            description: "Segment match conditions. There are multiple possible types,\
              \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
            items:
              type: object
              x-oneOf:
              - type: object
                title: Aim Segment
                description: Segment by interaction with a specific campaign.
                properties:
                  condition_type:
                    type: string
                    x-value: Aim
                    enum:
                    - Aim
                  field:
                    type: string
                    enum:
                    - aim
                    title: Segment Field
                    description: Segment by interaction with a specific campaign.
                    example: aim
                  op:
                    type: string
                    enum:
                    - open
                    - click
                    - sent
                    - noopen
                    - noclick
                    - nosent
                    title: Segment Operator
                    description: "The status of the member with regard to their campaign\
                      \ interaction. One of the following: opened, clicked, was sent,\
                      \ didn't open, didn't click, or was not sent."
                    example: open
                  value:
                    type: string
                    title: Segment Data
                    description: Either the web id value for a specific campaign or
                      'any' to account for subscribers who have/have not interacted
                      with any campaigns.
                    example: any
              - type: object
                title: Automation Segment
                description: Segment by interaction with an Automation workflow.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: Automation
                    enum:
                    - Automation
                  field:
                    type: string
                    enum:
                    - automation
                    title: Segment Field
                    description: Segment by interaction with an Automation workflow.
                    example: automation
                  op:
                    type: string
                    enum:
                    - started
                    - completed
                    - not_started
                    - not_completed
                    title: Segment Operator
                    description: "The status of the member with regard to the automation\
                      \ workflow. One of the following: has started the workflow,\
                      \ has completed the workflow, has not started the workflow,\
                      \ or has not completed the workflow."
                    example: started
                  value:
                    type: string
                    title: Segment Data
                    description: The web id for the automation workflow to segment
                      against.
                    example: "2135217"
              - type: object
                title: Poll Activity Segment
                description: Segment by poll activity.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: CampaignPoll
                    enum:
                    - CampaignPoll
                  field:
                    type: string
                    enum:
                    - poll
                    title: Segment Field
                    description: Segment by poll activity.
                    example: poll
                  op:
                    type: string
                    enum:
                    - member
                    - notmember
                    title: Segment Operator
                    description: Members have/have not interacted with a specific
                      poll in a Mailchimp email.
                    example: member
                  value:
                    type: number
                    title: Segment Operator
                    description: The id for the poll.
                    example: 409
              - type: object
                title: Conversation Segment
                description: Segment by interaction with a campaign via Conversations.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: Conversation
                    enum:
                    - Conversation
                  field:
                    type: string
                    enum:
                    - conversation
                    title: Segment Field
                    description: Segment by interaction with a campaign via Conversations.
                    example: conversation
                  op:
                    type: string
                    enum:
                    - member
                    - notmember
                    title: Segment Operator
                    description: "The status of a member's interaction with a conversation.\
                      \ One of the following: has replied or has not replied."
                    example: member
                  value:
                    type: string
                    title: Segment Data
                    description: The web id value for a specific campaign or 'any'
                      to account for subscribers who have/have not interacted with
                      any campaigns.
                    example: any
              - type: object
                title: Date Segment
                description: Segment by a specific date field.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: Date
                    enum:
                    - Date
                  field:
                    type: string
                    enum:
                    - timestamp_opt
                    - info_changed
                    - ecomm_date
                    title: Segment Field
                    description: "The type of date field to segment on: The opt-in\
                      \ time for a signup, the date the subscriber was last updated,\
                      \ or the date of their last ecomm purchase."
                    example: timestamp_opt
                  op:
                    type: string
                    enum:
                    - greater
                    - less
                    - is
                    - not
                    - blank
                    - blank_not
                    - within
                    - notwithin
                    title: Segment Operator
                    description: "When the event took place:  Before, after, is a\
                      \ specific date, is not a specific date, is blank, or is not\
                      \ blank."
                    example: greater
                  value:
                    type: string
                    title: Segment Data
                    description: "What type of data to segment on: a specific date,\
                      \ a specific campaign, or the last campaign sent."
                    example: date
                  extra:
                    type: string
                    title: Segment Extra Value
                    description: "When segmenting on 'date' or 'campaign', the date\
                      \ for the segment formatted as YYYY-MM-DD or the web id for\
                      \ the campaign."
                    example: 2015-01-30
              - type: object
                title: Email Client Segment
                description: Segment by use of a particular email client.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: EmailClient
                    enum:
                    - EmailClient
                  field:
                    type: string
                    enum:
                    - email_client
                    title: Segment Field
                    description: Segment by use of a particular email client.
                    example: email_client
                  op:
                    type: string
                    enum:
                    - client_is
                    - client_not
                    title: Segment Operator
                    description: "The operation to determine whether we select clients\
                      \ that match the value, or clients that do not match the value."
                    example: client_is
                  value:
                    type: string
                    title: Segment Data
                    description: The name of the email client.
                    example: Gmail
              - type: object
                title: Language Segment
                description: Segment by language.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: Language
                    enum:
                    - Language
                  field:
                    type: string
                    enum:
                    - language
                    title: Segment Field
                    description: Segmenting based off of a subscriber's language.
                    example: language
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    title: Segment Operator
                    description: Whether the member's language is or is not set to
                      a specific language.
                    example: is
                  value:
                    type: string
                    title: Segment Data
                    description: A two-letter language identifier.
                    example: en
              - type: object
                title: Member Rating Segment
                description: Segment by member rating.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: MemberRating
                    enum:
                    - MemberRating
                  field:
                    type: string
                    enum:
                    - rating
                    title: Segment Field
                    description: Segment by member rating.
                    example: rating
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - greater
                    - less
                    title: Segment Operator
                    description: Members who have have a rating that is/not exactly
                      a given number or members who have a rating greater/less than
                      a given number.
                    example: greater
                  value:
                    type: number
                    title: Segment Operator
                    description: The star rating number to segment against.
                    example: 4
              - type: object
                title: Signup Source Segment
                description: Segment by signup source.
                required:
                - field
                - condition_type
                - op
                properties:
                  condition_type:
                    type: string
                    enum:
                    - SignupSource
                    x-value: SignupSource
                    title: Type
                  field:
                    type: string
                    enum:
                    - source
                    title: Segment Field
                    example: source
                  op:
                    type: string
                    enum:
                    - source_is
                    - source_not
                    title: Segment Operator
                    description: Whether the member's signup source was/was not a
                      particular value.
                    example: source_is
                  value:
                    type: string
                    title: Segment Data
                    description: The signup source.
                    example: List Import
              - type: object
                title: Survey Monkey Segment
                description: Segment by interaction with a SurveyMonkey survey.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SurveyMonkey
                    enum:
                    - SurveyMonkey
                  field:
                    type: string
                    enum:
                    - survey_monkey
                    title: Segment Field
                    description: Segment by interaction with a SurveyMonkey survey.
                    example: survey_monkey
                  op:
                    type: string
                    enum:
                    - started
                    - completed
                    - not_started
                    - not_completed
                    title: Segment Operator
                    description: "The status of the member with regard to the survey.One\
                      \ of the following: has started the survey, has completed the\
                      \ survey, has not started the survey, or has not completed the\
                      \ survey."
                    example: started
                  value:
                    type: string
                    title: Survey ID
                    description: The unique ID of the survey monkey survey.
                    example: "32179586"
              - type: object
                title: VIP Segment
                description: Segment by VIP status.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: VIP
                    enum:
                    - VIP
                  field:
                    type: string
                    enum:
                    - gmonkey
                    title: Segment Field
                    description: Segment by VIP status.
                    example: gmonkey
                  op:
                    type: string
                    enum:
                    - member
                    - notmember
                    title: Segment Operator
                    description: Whether the member is or is not marked as VIP.
                    example: member
              - type: object
                title: Interests Segment
                description: Segment by an interest group merge field.
                properties:
                  condition_type:
                    type: string
                    x-value: Interests
                    enum:
                    - Interests
                  field:
                    type: string
                    title: Segment Field
                    description: Segmenting based on interest group information. This
                      should start with 'interests-' followed by the grouping id.
                      Ex. 'interests-123'.
                    example: interests-123
                  op:
                    type: string
                    enum:
                    - interestcontains
                    - interestcontainsall
                    - interestnotcontains
                    title: Segment Operator
                    description: "Whether the member is a part of one, all, or none\
                      \ of the groups."
                    example: interestcontains
                  value:
                    type: array
                    title: Segment Value
                    description: "An array containing strings, each representing a\
                      \ group id."
                    items:
                      type: string
                      example:
                      - "44401"
                      - "44405"
                      - "44409"
              - type: object
                title: Ecommerce Category Segment
                description: Segment by purchases in specific items or categories.
                properties:
                  condition_type:
                    type: string
                    x-value: EcommCategory
                    enum:
                    - EcommCategory
                  field:
                    type: string
                    enum:
                    - ecomm_cat
                    - ecomm_prod
                    title: Segment Field
                    description: Segment by purchases in specific items or categories.
                    example: ecomm_cat
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - contains
                    - notcontain
                    - starts
                    - ends
                    title: Segment Operator
                    description: "A member who has purchased from a category/specific\
                      \ item that is/is not a specific name, where the category/item\
                      \ name contains/doesn't contain a specific phrase or string,\
                      \ or a category/item name that starts/ends with a string."
                    example: is
                  value:
                    type: string
                    title: Segment Data
                    description: The ecommerce category/item information.
                    example: Product
              - type: object
                title: Ecommerce Number Segment
                description: "Segment by average spent total, number of orders, total\
                  \ number of products purchased, or average number of products per\
                  \ order."
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: EcommNumber
                    enum:
                    - EcommNumber
                  field:
                    type: string
                    enum:
                    - ecomm_spent_avg
                    - ecomm_orders
                    - ecomm_prod_all
                    - ecomm_avg_ord
                    title: Segment Field
                    description: "Segment by average spent total, number of orders,\
                      \ total number of products purchased, or average number of products\
                      \ per order."
                    example: ecomm_orders
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - greater
                    - less
                    title: Segment Operator
                    description: "Members who have spent exactly, have not spent exactly,\
                      \ spent more, or spent less than the segment value."
                    example: greater
                  value:
                    type: number
                    title: Segment Operator
                    description: "Members who have spent exactly, have not spent exactly,\
                      \ spent more, or spent less than this amount."
                    example: 42
              - type: object
                title: Ecommerce Purchased Segment
                description: Segment by whether someone has purchased anything.
                properties:
                  condition_type:
                    type: string
                    x-value: EcommPurchased
                    enum:
                    - EcommPurchased
                  field:
                    type: string
                    enum:
                    - ecomm_purchased
                    title: Segment Field
                    description: Segment by whether someone has purchased anything.
                    example: ecomm_purchased
                  op:
                    type: string
                    enum:
                    - member
                    - notmember
                    title: Segment Operator
                    description: Members who have have ('member') or have not ('notmember')
                      purchased.
                    example: member
              - type: object
                title: Ecommerce Spent Segment
                description: Segment by amount spent on a single order or across all
                  orders.
                properties:
                  condition_type:
                    type: string
                    x-value: EcommSpent
                    enum:
                    - EcommSpent
                  field:
                    type: string
                    enum:
                    - ecomm_spent_one
                    - ecomm_spent_all
                    title: Segment Field
                    description: Segment by amount spent on a single order or across
                      all orders.
                    example: ecomm_spent_one
                  op:
                    type: string
                    enum:
                    - greater
                    - less
                    title: Segment Operator
                    description: Members who have spent 'more' or 'less' than then
                      specified value.
                    example: greater
                  value:
                    type: integer
                    title: Segment Data
                    description: The total amount a member spent.
                    example: 42
              - type: object
                title: Ecommerce Purchased Store Segment
                description: Segment by purchases from a specific store.
                properties:
                  condition_type:
                    type: string
                    x-value: EcommStore
                    enum:
                    - EcommStore
                  field:
                    type: string
                    enum:
                    - ecomm_store
                    title: Segment Field
                    description: Segment by purchases from a specific store.
                    example: ecomm_store
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    title: Segment Operator
                    description: Members who have or have not purchased from a specific
                      store.
                    example: is
                  value:
                    type: string
                    title: Segment Operator
                    description: The store id to segment against.
                    example: "289"
              - type: object
                title: Goal Activity Segment
                description: Segment by Goal activity.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: GoalActivity
                    enum:
                    - GoalActivity
                  field:
                    type: string
                    enum:
                    - goal
                    title: Segment Field
                    description: Segment by Goal activity.
                    example: goal
                  op:
                    type: string
                    enum:
                    - is
                    - goal_not
                    - contains
                    - goal_notcontain
                    - starts
                    - ends
                    title: Segment Operator
                    description: "Whether the website URL is/not exactly, contains/doesn't\
                      \ contain, starts with/ends with a string."
                    example: is
                  value:
                    type: string
                    title: Segment Value
                    description: The URL to check Goal activity against.
              - type: object
                title: Goal Timestamp Segment
                description: Segment by most recent interaction with a website.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: GoalTimestamp
                    enum:
                    - GoalTimestamp
                  field:
                    type: string
                    enum:
                    - goal_last_visited
                    title: Segment Field
                    description: Segment by most recent interaction with a website.
                    example: goal_last_visited
                  op:
                    type: string
                    enum:
                    - greater
                    - less
                    - is
                    title: Segment Operator
                    description: "Whether the website activity happened after, before,\
                      \ or at a given timestamp."
                    example: greater
                  value:
                    type: string
                    title: Segment Value
                    description: The date to check Goal activity against.
                    example: 2015-07-20 19:45:21
              - type: object
                title: Similar Subscribers Segment Member Segment
                description: Segment by similar subscribers.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: FuzzySegment
                    enum:
                    - FuzzySegment
                  field:
                    type: string
                    enum:
                    - fuzzy_segment
                    title: Segment Field
                    description: Segment by similar subscribers.
                    example: fuzzy_segment
                  op:
                    type: string
                    enum:
                    - fuzzy_is
                    - fuzzy_not
                    title: Segment Operator
                    description: Members who are/are not apart of a 'similar subscribers'
                      segment.
                    example: fuzzy_is
                  value:
                    type: number
                    title: Segment Operator
                    description: The id for the 'similar subscribers' segment.
                    example: 48433
              - type: object
                title: Static Segment Member Segment
                description: Segment by a given static segment.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: StaticSegment
                    enum:
                    - StaticSegment
                  field:
                    type: string
                    enum:
                    - static_segment
                    title: Segment Field
                    description: Segment by a given static segment.
                    example: static_segment
                  op:
                    type: string
                    enum:
                    - static_is
                    - static_not
                    title: Segment Operator
                    description: Members who are/are not apart of a static segment.
                    example: static_is
                  value:
                    type: number
                    title: Segment Operator
                    description: The id for the static segment.
                    example: 48433
              - type: object
                title: Location-Based Segment
                description: Segment by a specific country or US state.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: IPGeoCountryState
                    enum:
                    - IPGeoCountryState
                  field:
                    type: string
                    enum:
                    - ipgeo
                    title: Segment Field
                    description: Segmenting subscribers who are within a specific
                      location.
                    example: ipgeo
                  op:
                    type: string
                    enum:
                    - ipgeocountry
                    - ipgeonotcountry
                    - ipgeostate
                    - ipgeonotstate
                    title: Segment Operator
                    description: Segment members who are within a specific country
                      or US state.
                    example: ipgeocountry
                  value:
                    type: string
                    title: Segment Data
                    description: The two-letter country code or US state abbreviation.
                    example: US
              - type: object
                title: Geolocation Segment
                description: Segment by a specific geographic region.
                required:
                - field
                - op
                - value
                - addr
                - lat
                - lng
                properties:
                  condition_type:
                    type: string
                    x-value: IPGeoIn
                    enum:
                    - IPGeoIn
                  field:
                    type: string
                    enum:
                    - ipgeo
                    title: Segment Field
                    description: Segmenting subscribers who are within a specific
                      location.
                    example: ipgeo
                  op:
                    type: string
                    enum:
                    - ipgeoin
                    - ipgeonotin
                    title: Segment Operator
                    description: Segment members who are within a specific geographic
                      region.
                    example: ipgeoin
                  value:
                    type: integer
                    title: Segment Data
                    description: The radius of the target location.
                    example: 42
                  addr:
                    type: string
                    title: Segment Location Address
                    description: The address of the target location.
                    example: "Atlanta, GA, USA"
                  lat:
                    type: string
                    title: Segment Location Latitude
                    description: The latitude of the target location.
                    example: "33.7489954"
                  lng:
                    type: string
                    title: Segment Location Longitude
                    description: The longitude of the target location.
                    example: "-84.3879824"
              - type: object
                title: US Zip Code Segment
                description: Segment by a specific US ZIP code.
                required:
                - field
                - op
                - value
                - extra
                properties:
                  condition_type:
                    type: string
                    x-value: IPGeoInZip
                    enum:
                    - IPGeoInZip
                  field:
                    type: string
                    enum:
                    - ipgeo
                    title: Segment Field
                    description: Segmenting subscribers who are within a specific
                      location.
                    example: ipgeo
                  op:
                    type: string
                    enum:
                    - ipgeoinzip
                    title: Segment Operator
                    description: Segment members who are within a specific US zip
                      code.
                    example: ipgeoinzip
                  value:
                    type: integer
                    title: Segment Data
                    description: The radius of the target location.
                    example: 25
                  extra:
                    type: integer
                    title: Extra Data
                    description: The zip code to segment against.
                    example: 30318
              - type: object
                title: Unknown Location-Based Segment
                description: Segment members whose location information is unknown.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: IPGeoUnknown
                    enum:
                    - IPGeoUnknown
                  field:
                    type: string
                    enum:
                    - ipgeo
                    title: Segment Field
                    description: Segmenting subscribers who are within a specific
                      location.
                    example: ipgeo
                  op:
                    type: string
                    enum:
                    - ipgeounknown
                    title: Segment Operator
                    description: Segment members for which location information is
                      unknown.
                    example: ipgeounknown
              - type: object
                title: Zip Code Location-Based Segment
                description: Segment by a specific US ZIP code.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: IPGeoZip
                    enum:
                    - IPGeoZip
                  field:
                    type: string
                    enum:
                    - ipgeo
                    title: Segment Field
                    description: Segmenting subscribers who are within a specific
                      location.
                    example: ipgeo
                  op:
                    type: string
                    enum:
                    - ipgeoiszip
                    - ipgeonotzip
                    title: Segment Operator
                    description: Segment members who are/are not within a specific
                      US zip code.
                    example: ipgeonotzip
                  value:
                    type: integer
                    title: Segment Data
                    description: The 5-digit zip code.
                    example: 30318
              - type: object
                title: Social Profiles Age Segment
                description: Segment by age ranges in Social Profiles data.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SocialAge
                    enum:
                    - SocialAge
                  field:
                    type: string
                    enum:
                    - social_age
                    title: Segment Field
                    description: Segment by age ranges in Social Profiles data.
                    example: social_age
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    title: Segment Operator
                    description: Members who are/not the exact criteria listed.
                    example: is
                  value:
                    type: string
                    enum:
                    - 18-24
                    - 25-34
                    - 35-54
                    - 55+
                    title: Segment Operator
                    description: The age range to segment.
                    example: 35-54
              - type: object
                title: Social Profiles Gender Segment
                description: Segment by listed gender in Social Profiles data.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SocialGender
                    enum:
                    - SocialGender
                  field:
                    type: string
                    enum:
                    - social_gender
                    title: Segment Field
                    description: Segment by listed gender in Social Profiles data.
                    example: social_gender
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    title: Segment Operator
                    description: Members who are/not the exact criteria listed.
                    example: is
                  value:
                    type: string
                    enum:
                    - male
                    - female
                    title: Segment Operator
                    description: The Social Profiles gender to segment.
                    example: female
              - type: object
                title: Social Profiles Influence Segment
                description: Segment by influence rating in Social Profiles data.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SocialInfluence
                    enum:
                    - SocialInfluence
                  field:
                    type: string
                    enum:
                    - social_influence
                    title: Segment Field
                    description: Segment by influence rating in Social Profiles data.
                    example: social_influence
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - greater
                    - less
                    title: Segment Operator
                    description: Members who have a rating that is/not or greater/less
                      than the rating provided.
                    example: greater
                  value:
                    type: number
                    title: Segment Operator
                    description: The Social Profiles influence rating to segment.
                    example: 2
              - type: object
                title: Social Profiles Social Network Segment
                description: Segment by social network in Social Profiles data.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SocialNetworkMember
                    enum:
                    - SocialNetworkMember
                  field:
                    type: string
                    enum:
                    - social_network
                    title: Segment Field
                    description: Segment by social network in Social Profiles data.
                    example: social_network
                  op:
                    type: string
                    enum:
                    - member
                    - notmember
                    title: Segment Operator
                    description: Members who are/not on a given social network.
                    example: member
                  value:
                    type: string
                    enum:
                    - twitter
                    - facebook
                    - linkedin
                    - flickr
                    - foursquare
                    - lastfm
                    - myspace
                    - quora
                    - vimeo
                    - yelp
                    - youtube
                    title: Segment Operator
                    description: The social network to segment against.
                    example: twitter
              - type: object
                title: Social Profiles Social Network Follow Segment
                description: Segment by social network in Social Profiles data.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SocialNetworkFollow
                    enum:
                    - SocialNetworkFollow
                  field:
                    type: string
                    enum:
                    - social_network
                    title: Segment Field
                    description: Segment by social network in Social Profiles data.
                    example: social_network
                  op:
                    type: string
                    enum:
                    - follow
                    - notfollow
                    title: Segment Operator
                    description: Members who are/not following a linked account on
                      a given social network.
                    example: follow
                  value:
                    type: string
                    enum:
                    - twitter_follow
                    title: Segment Operator
                    description: The social network to segment against.
                    example: twitter_follow
              - type: object
                title: Address Merge Field Segment
                description: Segment by an address-type merge field.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: AddressMerge
                    enum:
                    - AddressMerge
                  field:
                    type: string
                    title: Segment Field
                    description: An address-type merge field to segment.
                    example: MMERGE3
                  op:
                    type: string
                    enum:
                    - contains
                    - notcontain
                    - blank
                    - blank_not
                    title: Segment Operator
                    description: Whether the member's address merge field contains/does
                      not contain a value or is/is not blank.
                    example: contains
                  value:
                    type: string
                    title: Segment Value
                    description: The value to segment a text merge field with.
                    example: Atlanta
              - type: object
                title: Address/Zip Merge Field Segment
                description: Segment by an address-type merge field within a given
                  distance.
                required:
                - field
                - op
                - value
                - extra
                properties:
                  condition_type:
                    type: string
                    x-value: ZipMerge
                    enum:
                    - ZipMerge
                  field:
                    type: string
                    title: Segment Field
                    description: An address or zip-type merge field to segment.
                    example: MMERGE2
                  op:
                    type: string
                    enum:
                    - geoin
                    title: Segment Operator
                    description: Whether the member's address merge field is within
                      a given distance from a city or zip.
                    example: geoin
                  value:
                    type: string
                    title: Segment Value
                    description: The distance from the city/zip.
                    example: "25"
                  extra:
                    type: string
                    title: Segment Extra
                    description: The city or the zip being used to segment against.
                    example: "30318"
              - type: object
                title: Birthday Merge Field Segment
                description: Segment by a contact's birthday.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: BirthdayMerge
                    enum:
                    - BirthdayMerge
                  field:
                    type: string
                    title: Segment Field
                    description: A date merge field to segment.
                    example: MMERGE4
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - blank
                    - blank_not
                    title: Segment Operator
                    description: Whether the member's birthday merge information is/is
                      not a certain date or is/is not blank.
                    example: is
                  value:
                    type: string
                    title: Segment Value
                    description: A date to segment against (mm/dd).
                    example: 01/30
              - type: object
                title: Date Merge Field Segment
                description: Segment by a given date merge field.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: DateMerge
                    enum:
                    - DateMerge
                  field:
                    type: string
                    title: Segment Field
                    description: A date merge field to segment.
                    example: MMERGE5
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - less
                    - blank
                    - blank_not
                    - greater
                    title: Segment Operator
                    description: "Whether the member's merge information is/is not,\
                      \ is greater/less than a value or is/is not blank."
                    example: is
                  value:
                    type: string
                    title: Segment Value
                    description: A date to segment against.
                    example: 01/30/2015
              - type: object
                title: Dropdown/Radio Merge Field Segment
                description: An individual segment condition
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: SelectMerge
                    enum:
                    - SelectMerge
                  field:
                    type: string
                    title: Segment Field
                    description: A merge field to segment.
                    example: MMERGE6
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - blank
                    - blank_not
                    - notcontain
                    - contains
                    title: Segment Operator
                    description: Whether the member's merge information is/is not
                      a value or is/is not blank.
                    example: is
                  value:
                    type: string
                    title: Segment Value
                    description: The value to segment a text merge field with.
                    example: Second Choice
              - type: object
                title: Text or Number Merge Field Segment
                description: Segment by a given text or number merge field.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: TextMerge
                    enum:
                    - TextMerge
                  field:
                    type: string
                    title: Segment Field
                    description: A text or number merge field to segment.
                    example: MMERGE7
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - contains
                    - notcontain
                    - starts
                    - ends
                    - greater
                    - less
                    - blank
                    - blank_not
                    title: Segment Operator
                    description: "Whether the member's merge information is/is not,\
                      \ contains/does not contain, starts/ends with, or is greater/less\
                      \ than a value"
                    example: contains
                  value:
                    type: string
                    title: Segment Value
                    description: The value to segment a text or number merge field
                      with.
                    example: Freddie's Jokes
              - type: object
                title: Email Segment
                description: Segment by email address.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: EmailAddress
                    enum:
                    - EmailAddress
                  field:
                    type: string
                    enum:
                    - merge0
                    - EMAIL
                    title: Segment Field
                    description: Segmenting based off of a subscriber's email address.
                    example: EMAIL
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - contains
                    - notcontain
                    - starts
                    - ends
                    - greater
                    - less
                    title: Segment Operator
                    description: "Whether the email address is/not exactly, contains/doesn't\
                      \ contain, starts/ends with a string."
                  value:
                    type: string
                    title: Segment Value
                    description: The value to compare the email against.
                    example: urist.mcvankab@freddiesjokes.com
              - type: object
                title: Predicted Gender Segment
                description: Segment by predicted gender.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: PredictedGender
                    enum:
                    - PredictedGender
                  field:
                    type: string
                    enum:
                    - predicted_gender
                    title: Segment Field
                    description: Segment by predicted gender.
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    title: Segment Operator
                    description: Members who are/not the exact criteria listed.
                    example: is
                  value:
                    type: string
                    enum:
                    - male
                    - female
                    title: Segment Operator
                    description: The predicted gender to segment.
                    example: female
              - type: object
                title: Predicted Age Segment
                description: Segment by predicted age.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: PredictedAge
                    enum:
                    - PredictedAge
                  field:
                    type: string
                    enum:
                    - predicted_age_range
                    title: Segment Field
                    description: Segment by predicted age.
                  op:
                    type: string
                    enum:
                    - is
                    title: Segment Operator
                    description: Members who are/not the exact criteria listed.
                    example: is
                  value:
                    type: string
                    enum:
                    - 18-24
                    - 25-34
                    - 35-44
                    - 45-54
                    - 55-64
                    - 65+
                    title: Segment Operator
                    description: The predicted age to segment.
                    example: female
              - type: object
                title: New Subscribers Prebuilt Segment
                description: Segment by when people subscribed.
                properties:
                  condition_type:
                    type: string
                    x-value: NewSubscribers
                    enum:
                    - NewSubscribers
                  field:
                    type: string
                    enum:
                    - timestamp_opt
                    title: Segment Field
                    description: Segment by when people subscribed.
                  op:
                    type: string
                    enum:
                    - date_within
                    title: Segment Operator
                    description: "Whe the event took place, namely within a time frame."
                  value:
                    type: string
                    title: Segment Data
                    description: "What type of data to segment on: a specific date,\
                      \ a specific campaign, or the last campaign sent."
              x-discriminator:
                type: string
                propertyName: condition_type
            title: Segment Type
            type: array
          title: Segment Conditions
          type: array
      title: Conditions
      type: object
    A_B_Test_Options:
      description: The settings specific to A/B test campaigns.
      example:
        send_times:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        combinations:
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: id
          from_name: 3
          content_description: 4
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: id
          from_name: 3
          content_description: 4
        wait_time: 5
        subject_lines:
        - subject_lines
        - subject_lines
        contents:
        - contents
        - contents
        test_size: 2
        winning_combination_id: winning_combination_id
        reply_to_addresses:
        - reply_to_addresses
        - reply_to_addresses
        winner_criteria: opens
        winning_campaign_id: winning_campaign_id
        from_names:
        - from_names
        - from_names
      properties:
        winning_combination_id:
          description: ID for the winning combination.
          readOnly: true
          title: Winning Combination ID
          type: string
        winning_campaign_id:
          description: ID of the campaign that was sent to the remaining recipients
            based on the winning combination.
          readOnly: true
          title: Winning Campaign ID
          type: string
        winner_criteria:
          description: "The combination that performs the best. This may be determined\
            \ automatically by click rate, open rate, or total revenue -- or you may\
            \ choose manually based on the reporting data you find the most valuable.\
            \ For Multivariate Campaigns testing send_time, winner_criteria is ignored.\
            \ For Multivariate Campaigns with 'manual' as the winner_criteria, the\
            \ winner must be chosen in the Mailchimp web application."
          enum:
          - opens
          - clicks
          - manual
          - total_revenue
          title: Winning Criteria
          type: string
        wait_time:
          description: "The number of minutes to wait before choosing the winning\
            \ campaign. The value of wait_time must be greater than 0 and in whole\
            \ hours, specified in minutes."
          title: Wait Time
          type: integer
        test_size:
          description: "The percentage of recipients to send the test combinations\
            \ to, must be a value between 10 and 100."
          title: Test Size
          type: integer
        subject_lines:
          description: "The possible subject lines to test. If no subject lines are\
            \ provided, settings.subject_line will be used."
          items:
            type: string
          title: Subject Lines
          type: array
        send_times:
          description: "The possible send times to test. The times provided should\
            \ be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to\
            \ test, the test_size will be set to 100% and winner_criteria will be\
            \ ignored."
          items:
            format: date-time
            type: string
          title: Send Times
          type: array
        from_names:
          description: "The possible from names. The number of from_names provided\
            \ must match the number of reply_to_addresses. If no from_names are provided,\
            \ settings.from_name will be used."
          items:
            type: string
          title: From Names
          type: array
        reply_to_addresses:
          description: "The possible reply-to addresses. The number of reply_to_addresses\
            \ provided must match the number of from_names. If no reply_to_addresses\
            \ are provided, settings.reply_to will be used."
          items:
            type: string
          title: Reply To Addresses
          type: array
        contents:
          description: "Descriptions of possible email contents. To set campaign contents,\
            \ make a PUT request to /campaigns/{campaign_id}/content with the field\
            \ 'variate_contents'."
          items:
            type: string
          readOnly: true
          title: Content Descriptions
          type: array
        combinations:
          description: Combinations of possible variables used to build emails.
          items:
            $ref: '#/components/schemas/Combinations_inner'
          readOnly: true
          title: Combinations
          type: array
      title: A/B Test Options
      type: object
    Batch_Webhook:
      description: A webhook configured for batch status updates.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        id: id
        url: http://yourdomain.com/webhook
        enabled: true
      properties:
        id:
          description: A string that uniquely identifies this Batch Webhook.
          readOnly: true
          title: Batch Webhook ID
          type: string
        url:
          description: A valid URL for the Webhook.
          example: http://yourdomain.com/webhook
          title: URL
          type: string
        enabled:
          description: Whether the webhook receives requests or not.
          example: true
          title: Enabled
          type: boolean
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Batch Webhook
      type: object
    getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary:
      description: Report summary of facebook ad
      properties:
        reach:
          type: integer
        impressions:
          type: integer
        clicks:
          type: integer
        click_rate:
          type: number
        unique_clicks:
          type: integer
        first_time_buyers:
          type: integer
        ecommerce:
          $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary_ecommerce'
        total_products_sold:
          type: integer
        total_orders:
          type: integer
        average_order_amount:
          $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary_average_order_amount'
        cost_per_click:
          $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary_average_order_amount'
        average_daily_budget:
          $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary_average_order_amount'
        likes:
          type: integer
        comments:
          type: integer
        shares:
          type: integer
        has_extended_ad_duration:
          type: boolean
        extended_at:
          $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary_extended_at'
        return_on_investment:
          type: number
      type: object
    getAuthorizedApps_200_response:
      description: "An array of objects, each representing an authorized application."
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
        apps:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          description: description
          id: 0
          users:
          - users
          - users
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          description: description
          id: 0
          users:
          - users
          - users
      properties:
        apps:
          description: "An array of objects, each representing an authorized application."
          items:
            $ref: '#/components/schemas/Authorized_Applications_inner'
          title: Authorized Applications
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    Add_Webhook:
      description: Configure a webhook for the given list.
      properties:
        url:
          description: A valid URL for the Webhook.
          example: http://yourdomain.com/webhook
          title: URL
          type: string
        events:
          $ref: '#/components/schemas/Events_2'
        sources:
          $ref: '#/components/schemas/Sources_1'
      title: Add Webhook
      type: object
    postBatches_request:
      properties:
        operations:
          description: An array of objects that describes operations to perform.
          items:
            $ref: '#/components/schemas/Operations'
          title: Operations List
          type: array
      required:
      - operations
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner_allOf_budget:
      properties:
        duration:
          description: Duration of the ad in seconds
          example: 86400
          type: integer
        total_amount:
          description: Total budget of the ad
          example: 500.0
          type: number
        currency_code:
          description: Currency code
          example: USD
          type: string
      type: object
    Abuse_Complaint:
      description: Details of abuse complaints for a specific list. An abuse complaint
        occurs when your recipient clicks to 'report spam' in their email program.
      example:
        email_id: email_id
        date: date
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: "{}"
        id: 0
        vip: true
        campaign_id: campaign_id
      properties:
        id:
          description: The id for the abuse report
          readOnly: true
          title: Abuse Report ID
          type: integer
        campaign_id:
          description: The campaign id for the abuse report
          readOnly: true
          title: Campaign ID
          type: string
        list_id:
          description: The list id for the abuse report.
          readOnly: true
          title: List ID
          type: string
        email_id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        email_address:
          description: Email address for a subscriber.
          readOnly: true
          title: Email Address
          type: string
        merge_fields:
          additionalProperties:
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
            type: object
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
          title: Merge Fields
          type: object
        vip:
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
          title: VIP
          type: boolean
        date:
          description: Date for the abuse report
          readOnly: true
          title: Date
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Abuse Complaint
      type: object
    Campaign:
      description: A summary of an individual campaign's settings and content.
      example:
        archive_url: archive_url
        resendable: true
        settings:
          auto_footer: true
          subject_line: subject_line
          preview_text: preview_text
          use_conversation: true
          authenticate: true
          to_name: to_name
          timewarp: true
          title: title
          from_name: from_name
          auto_tweet: true
          auto_fb_post:
          - auto_fb_post
          - auto_fb_post
          fb_comments: true
          drag_and_drop: true
          reply_to: reply_to
          inline_css: true
          template_id: 5
          folder_id: folder_id
        variate_settings:
          send_times:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          combinations:
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: id
            from_name: 3
            content_description: 4
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: id
            from_name: 3
            content_description: 4
          wait_time: 5
          subject_lines:
          - subject_lines
          - subject_lines
          contents:
          - contents
          - contents
          test_size: 2
          winning_combination_id: winning_combination_id
          reply_to_addresses:
          - reply_to_addresses
          - reply_to_addresses
          winner_criteria: opens
          winning_campaign_id: winning_campaign_id
          from_names:
          - from_names
          - from_names
        ab_split_opts:
          pick_winner: opens
          wait_time: 1
          wait_units: hours
          subject_b: subject_b
          subject_a: subject_a
          split_test: subject
          from_name_a: from_name_a
          from_name_b: from_name_b
          send_time_winner: send_time_winner
          reply_email_b: reply_email_b
          reply_email_a: reply_email_a
          send_time_a: 2000-01-23T04:56:07.000+00:00
          send_time_b: 2000-01-23T04:56:07.000+00:00
          split_size: 34
        create_time: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        web_id: 0
        type: regular
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: clicktale
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: google_analytics
          html_clicks: true
        needs_block_refresh: true
        send_time: 2000-01-23T04:56:07.000+00:00
        rss_opts:
          schedule:
            hour: 2
            weekly_send_day: sunday
            daily_send:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            monthly_send_date: 3.1764016704468894
          last_sent: 2000-01-23T04:56:07.000+00:00
          constrain_rss_img: true
          feed_url: https://openapi-generator.tech
          frequency: daily
        parent_campaign_id: parent_campaign_id
        content_type: template
        social_card:
          image_url: image_url
          description: description
          title: title
        recipients:
          segment_opts:
            prebuilt_segment_id: subscribers-female
            match: any
            saved_segment_id: 5
            conditions:
            - "{}"
            - "{}"
          list_id: list_id
          segment_text: segment_text
          recipient_count: 1
          list_name: list_name
          list_is_active: true
        emails_sent: 6
        id: id
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: delivering
        long_archive_url: long_archive_url
        status: save
        report_summary:
          subscriber_clicks: 9
          click_rate: 9.369310271410669
          ecommerce:
            total_spent: 8.762042012749001
            total_revenue: 9.018348186070783
            total_orders: 6
          opens: 7
          clicks: 5
          unique_opens: 1
          open_rate: 4.965218492984954
        resend_shortcut_eligibility:
          to_non_openers:
            reason: reason
            is_eligible: true
          to_new_subscribers:
            reason: reason
            is_eligible: true
          to_non_clickers:
            reason: reason
            is_eligible: true
      properties:
        id:
          description: A string that uniquely identifies this campaign.
          readOnly: true
          title: Campaign ID
          type: string
        web_id:
          description: "The ID used in the Mailchimp web application. View this campaign\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
          readOnly: true
          title: Campaign Web ID
          type: integer
        parent_campaign_id:
          description: "If this campaign is the child of another campaign, this identifies\
            \ the parent campaign. For Example, for RSS or Automation children."
          readOnly: true
          title: Parent Campaign ID
          type: string
        type:
          description: "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/)\
            \ you can create in Mailchimp. A/B Split campaigns have been deprecated\
            \ and variate campaigns should be used instead."
          enum:
          - regular
          - plaintext
          - absplit
          - rss
          - variate
          title: Campaign Type
          type: string
        create_time:
          description: The date and time the campaign was created in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Create Time
          type: string
        archive_url:
          description: The link to the campaign's archive version in ISO 8601 format.
          readOnly: true
          title: Archive URL
          type: string
        long_archive_url:
          description: The original link to the campaign's archive version.
          readOnly: true
          title: Long Archive URL
          type: string
        status:
          description: The current status of the campaign.
          enum:
          - save
          - paused
          - schedule
          - sending
          - sent
          - canceled
          - canceling
          - archived
          readOnly: true
          title: Campaign Status
          type: string
        emails_sent:
          description: The total number of emails sent for this campaign.
          readOnly: true
          title: Emails Sent
          type: integer
        send_time:
          description: The date and time a campaign was sent.
          format: date-time
          readOnly: true
          title: Send Time
          type: string
        content_type:
          description: How the campaign's content is put together.
          enum:
          - template
          - html
          - url
          - multichannel
          title: Content Type
          type: string
        needs_block_refresh:
          description: Determines if the campaign needs its blocks refreshed by opening
            the web-based campaign editor. Deprecated and will always return false.
          readOnly: true
          title: Needs Block Refresh
          type: boolean
        resendable:
          description: Determines if the campaign qualifies to be resent to non-openers.
          readOnly: true
          title: Resendable
          type: boolean
        recipients:
          $ref: '#/components/schemas/List_3'
        settings:
          $ref: '#/components/schemas/Campaign_Settings_2'
        variate_settings:
          $ref: '#/components/schemas/A_B_Test_Options'
        tracking:
          $ref: '#/components/schemas/Campaign_Tracking_Options_1'
        rss_opts:
          $ref: '#/components/schemas/RSS_Options'
        ab_split_opts:
          $ref: '#/components/schemas/A_B_Testing_Options'
        social_card:
          $ref: '#/components/schemas/Campaign_Social_Card'
        report_summary:
          $ref: '#/components/schemas/Campaign_Report_Summary_2'
        delivery_status:
          $ref: '#/components/schemas/Campaign_Delivery_Status'
        resend_shortcut_eligibility:
          $ref: '#/components/schemas/Resend_Shortcut_Eligibility'
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaign
      type: object
    Batch_Webhook_2:
      description: Update an existing Batch Webook.
      properties:
        url:
          description: A valid URL for the Webhook.
          example: http://yourdomain.com/webhook
          title: URL
          type: string
        enabled:
          description: Whether the webhook receives requests or not.
          example: true
          title: Enabled
          type: boolean
      title: Batch Webhook
      type: object
    Batch_Webhook_1:
      description: Add a new Batch Webook.
      properties:
        url:
          description: A valid URL for the Webhook.
          example: http://yourdomain.com/webhook
          title: URL
          type: string
        enabled:
          description: Whether the webhook receives requests or not.
          example: true
          title: Enabled
          type: boolean
      required:
      - url
      title: Batch Webhook
      type: object
    Subscriber_Stats_1:
      description: Open and click rates for this subscriber.
      properties:
        avg_open_rate:
          description: A subscriber's average open rate.
          readOnly: true
          title: Average Open Rate
          type: number
        avg_click_rate:
          description: A subscriber's average clickthrough rate.
          readOnly: true
          title: Average Click Rate
          type: number
        ecommerce_data:
          $ref: '#/components/schemas/Ecommerce_Stats'
      readOnly: true
      title: Subscriber Stats
      type: object
    Contact_Counts:
      description: "For email question types, how many are new, known, or unknown\
        \ contacts."
      example:
        new: 5
        known: 1
        unknown: 5
      properties:
        known:
          description: The number of known contacts that responded to this survey.
          title: Known Contacts Count
          type: integer
        unknown:
          description: The number of unknown contacts that responded to this survey.
          title: Unknown Contacts Count
          type: integer
        new:
          description: The number of new contacts that responded to this survey.
          title: New Contacts Count
          type: integer
      title: Contact Counts
      type: object
    Template_Default_Content:
      description: Default content for a template.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        sections:
          key: "{}"
      properties:
        sections:
          additionalProperties:
            description: The default content for the sections that you can edit in
              the template.
            type: object
          description: "The sections that you can edit in the template, including\
            \ each section's default content."
          title: Sections
          type: object
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Template Default Content
      type: object
    Events_2:
      description: The events that can trigger the webhook and whether they are enabled.
      properties:
        subscribe:
          description: Whether the webhook is triggered when a list subscriber is
            added.
          example: true
          title: Subscribed
          type: boolean
        unsubscribe:
          description: Whether the webhook is triggered when a list member unsubscribes.
          example: true
          title: Unsubscribed
          type: boolean
        profile:
          description: Whether the webhook is triggered when a subscriber's profile
            is updated.
          example: true
          title: Profile Updated
          type: boolean
        cleaned:
          description: Whether the webhook is triggered when a subscriber's email
            address is cleaned from the list.
          example: true
          title: Cleaned
          type: boolean
        upemail:
          description: Whether the webhook is triggered when a subscriber's email
            address is changed.
          example: true
          title: Email Address Updated
          type: boolean
        campaign:
          description: Whether the webhook is triggered when a campaign is sent or
            cancelled.
          example: true
          title: Campaign Sent
          type: boolean
      title: Events
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience_targeting_specs:
      properties:
        gender:
          type: integer
        min_age:
          type: integer
        max_age:
          type: integer
        locations:
          $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience_targeting_specs_locations'
        interests:
          items:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience_targeting_specs_interests_inner'
          type: array
      type: object
    Hours:
      description: The hours an Automation workflow can send.
      example:
        type: send_asap
      properties:
        type:
          description: When to send the Automation email.
          enum:
          - send_asap
          - send_between
          - send_at
          title: Email Send Time Settings
          type: string
      required:
      - type
      title: Hours
      type: object
    Tag_search_results:
      description: A list of tags matching the input query.
      example:
        total_items: 6
        tags:
        - name: name
          id: 0
        - name: name
          id: 0
      properties:
        tags:
          description: A list of matching tags.
          items:
            $ref: '#/components/schemas/Tags_inner_1'
          readOnly: true
          title: Tags
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
      title: Tag search results
      type: object
    Events_1:
      description: The events that can trigger the webhook and whether they are enabled.
      properties:
        subscribe:
          description: Whether the webhook is triggered when a list subscriber is
            added.
          example: true
          title: Subscribed
          type: boolean
        unsubscribe:
          description: Whether the webhook is triggered when a list member unsubscribes.
          example: true
          title: Unsubscribed
          type: boolean
        profile:
          description: Whether the webhook is triggered when a subscriber's profile
            is updated.
          example: true
          title: Profile Updated
          type: boolean
        cleaned:
          description: Whether the webhook is triggered when a subscriber's email
            address is cleaned from the list.
          example: true
          title: Cleaned
          type: boolean
        upemail:
          description: Whether the webhook is triggered when a subscriber's email
            address is changed.
          example: true
          title: Email Address Updated
          type: boolean
        campaign:
          description: Whether the webhook is triggered when a campaign is sent or
            cancelled.
          example: true
          title: Campaign Sent
          type: boolean
      readOnly: true
      title: Events
      type: object
    Forwards:
      description: An object describing the forwards and forward activity for the
        campaign.
      example:
        forwards_count: 7
        forwards_opens: 9
      properties:
        forwards_count:
          description: How many times the campaign has been forwarded.
          title: Total Forwards
          type: integer
        forwards_opens:
          description: How many times the forwarded campaign has been opened.
          title: Forward Opens
          type: integer
      title: Forwards
      type: object
    Interest_Category:
      description: "Interest categories organize interests, which are used to group\
        \ subscribers based on their preferences. These correspond to Group Titles\
        \ the application."
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        display_order: 0
        id: id
        title: title
        type: checkboxes
      properties:
        list_id:
          description: The unique list id for the category.
          readOnly: true
          title: List ID
          type: string
        id:
          description: The id for the interest category.
          readOnly: true
          title: Category ID
          type: string
        title:
          description: The text description of this category. This field appears on
            signup forms and is often phrased as a question.
          title: Name
          type: string
        display_order:
          description: The order that the categories are displayed in the list. Lower
            numbers display first.
          title: Display Order
          type: integer
        type:
          description: Determines how this category’s interests appear on signup forms.
          enum:
          - checkboxes
          - dropdown
          - radio
          - hidden
          title: Display Type
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Interest Category
      type: object
    E_commerce_Promo_Code_2:
      description: Information about an Ecommerce Store's specific Promo Code.
      properties:
        code:
          description: The discount code. Restricted to UTF-8 characters with max
            length 50.
          example: summersale
          title: Promo Code
          type: string
        redemption_url:
          description: The url that should be used in the promotion campaign restricted
            to UTF-8 characters with max length 2000.
          example: A url that applies promo code directly at checkout or a url that
            points to sale page or store url
          title: Redemption Url
          type: string
        usage_count:
          description: Number of times promo code has been used.
          title: Promo Code Usage Count
          type: integer
        enabled:
          description: Whether the promo code is currently enabled.
          example: true
          title: Enabled
          type: boolean
        created_at_foreign:
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
          title: Foreign Create Time
          type: string
        updated_at_foreign:
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
          title: Foreign Update Time
          type: string
      title: E-commerce Promo Code
      type: object
    Subscriber_in_Automation_Queue:
      description: Information about subscribers in an Automation email queue.
      example:
        email_id: email_id
        workflow_id: workflow_id
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        next_send: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        workflow_id:
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
          title: Workflow ID
          type: string
        email_id:
          description: A string that uniquely identifies an email in an Automation
            workflow.
          readOnly: true
          title: Automation Email ID
          type: string
        list_id:
          description: A string that uniquely identifies a list.
          readOnly: true
          title: List ID
          type: string
        email_address:
          description: The list member's email address.
          title: Email Address
          type: string
        next_send:
          description: The date and time of the next send for the workflow email in
            ISO 8601 format.
          format: date-time
          readOnly: true
          title: Next Send
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      required:
      - email_address
      title: Subscriber in Automation Queue
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience_targeting_specs_locations:
      properties:
        countries:
          items:
            type: string
          type: array
        regions:
          items:
            type: string
          type: array
        cities:
          items:
            type: string
          type: array
        zips:
          items:
            type: string
          type: array
      type: object
    Campaign_Advice_Report:
      description: A list of feedback based on a campaign's statistics.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        advice:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          type: negative
          message: message
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          type: negative
          message: message
        total_items: 0
        campaign_id: campaign_id
      properties:
        advice:
          description: "An array of objects, each representing a point of campaign\
            \ feedback."
          items:
            $ref: '#/components/schemas/Campaign_Advice'
          title: Campaign Advice
          type: array
        campaign_id:
          description: The campaign id.
          readOnly: true
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaign Advice Report
      type: object
    Open_Detail_Report:
      description: A detailed report of any campaign emails that were opened by a
        list member.
      example:
        total_opens: 6
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        members:
        - email_id: email_id
          email_address: email_address
          list_id: list_id
          opens_count: 0
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          opens:
          - timestamp: 2000-01-23T04:56:07.000+00:00
          - timestamp: 2000-01-23T04:56:07.000+00:00
          contact_status: contact_status
          list_is_active: true
          vip: true
          campaign_id: campaign_id
        - email_id: email_id
          email_address: email_address
          list_id: list_id
          opens_count: 0
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          opens:
          - timestamp: 2000-01-23T04:56:07.000+00:00
          - timestamp: 2000-01-23T04:56:07.000+00:00
          contact_status: contact_status
          list_is_active: true
          vip: true
          campaign_id: campaign_id
        total_items: 1
        campaign_id: campaign_id
      properties:
        members:
          description: "An array of objects, each representing a list member who opened\
            \ a campaign email. Each members object will contain information about\
            \ the number of total opens by a single member, as well as timestamps\
            \ for each open event."
          items:
            $ref: '#/components/schemas/Open_Activity'
          title: Open Reports
          type: array
        campaign_id:
          description: The campaign id.
          readOnly: true
          title: Campaign ID
          type: string
        total_opens:
          description: The total number of opens matching the query regardless of
            pagination.
          title: Total opens
          type: integer
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Open Detail Report
      type: object
    E_commerce_Promo_Code_1:
      description: Information about an Ecommerce Store's specific Promo Code.
      properties:
        id:
          description: A unique identifier for the promo code. Restricted to UTF-8
            characters with max length 50.
          title: Promo Code Foreign ID
          type: string
        code:
          description: The discount code. Restricted to UTF-8 characters with max
            length 50.
          example: summersale
          title: Promo Code
          type: string
        redemption_url:
          description: The url that should be used in the promotion campaign restricted
            to UTF-8 characters with max length 2000.
          example: A url that applies promo code directly at checkout or a url that
            points to sale page or store url
          title: Redemption Url
          type: string
        usage_count:
          description: Number of times promo code has been used.
          title: Promo Code Usage Count
          type: integer
        enabled:
          description: Whether the promo code is currently enabled.
          example: true
          title: Enabled
          type: boolean
        created_at_foreign:
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
          title: Foreign Create Time
          type: string
        updated_at_foreign:
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
          title: Foreign Update Time
          type: string
      required:
      - code
      - id
      - redemption_url
      title: E-commerce Promo Code
      type: object
    Verify_a_domain_for_sending_:
      description: Submit a response to the verification challenge and verify a domain
        for sending.
      properties:
        code:
          description: The code that was sent to the email address provided when adding
            a new domain to verify.
          title: Verification Code
          type: string
      required:
      - code
      title: Verify a domain for sending.
      type: object
    Group_A:
      description: Stats for Group A.
      properties:
        total_clicks_a:
          description: The total number of clicks for Group A.
          readOnly: true
          title: Total Clicks Group A
          type: integer
        click_percentage_a:
          description: The percentage of total clicks for Group A.
          readOnly: true
          title: Click Percentage Group A
          type: number
        unique_clicks_a:
          description: The number of unique clicks for Group A.
          readOnly: true
          title: Unique Clicks Group A
          type: integer
        unique_click_percentage_a:
          description: The percentage of unique clicks for Group A.
          readOnly: true
          title: Unique Click Percentage Group A
          type: number
      title: Group A
      type: object
    Group_B:
      description: Stats for Group B.
      properties:
        total_clicks_b:
          description: The total number of clicks for Group B.
          readOnly: true
          title: Total Clicks Group B
          type: integer
        click_percentage_b:
          description: The percentage of total clicks for Group B.
          readOnly: true
          title: Click Percentage Group B
          type: number
        unique_clicks_b:
          description: The number of unique clicks for Group B.
          readOnly: true
          title: Unique Clicks Group B
          type: integer
        unique_click_percentage_b:
          description: The percentage of unique clicks for Group B.
          readOnly: true
          title: Unique Click Percentage Group B
          type: number
      title: Group B
      type: object
    Salesforce_CRM_Tracking_1:
      description: Deprecated
      example:
        notes: true
        campaign: true
      properties:
        campaign:
          description: Create a campaign in a connected Salesforce account.
          title: Salesforce Campaign
          type: boolean
        notes:
          description: Update contact notes for a campaign based on subscriber email
            addresses.
          title: Salesforce Note
          type: boolean
      title: Salesforce CRM Tracking
      type: object
    Daily_List_Activity:
      description: One day's worth of list activity. Doesn't include Automation activity.
      example:
        soft_bounce: 5
        hard_bounce: 5
        subs: 2
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        emails_sent: 0
        unsubs: 7
        recipient_clicks: 1
        other_adds: 9
        day: day
        unique_opens: 6
        other_removes: 3
      properties:
        day:
          description: The date for the activity summary.
          readOnly: true
          title: Day
          type: string
        emails_sent:
          description: The total number of emails sent on the date for the activity
            summary.
          readOnly: true
          title: Emails Sent
          type: integer
        unique_opens:
          description: The number of unique opens.
          readOnly: true
          title: Unique Opens
          type: integer
        recipient_clicks:
          description: The number of clicks.
          readOnly: true
          title: Recipient Clicks
          type: integer
        hard_bounce:
          description: The number of hard bounces.
          readOnly: true
          title: Hard Bounces
          type: integer
        soft_bounce:
          description: The number of soft bounces
          readOnly: true
          title: Soft Bounces
          type: integer
        subs:
          description: The number of subscribes.
          readOnly: true
          title: Subscribes
          type: integer
        unsubs:
          description: The number of unsubscribes.
          readOnly: true
          title: Unsubscribes
          type: integer
        other_adds:
          description: "The number of subscribers who may have been added outside\
            \ of the [double opt-in process](https://mailchimp.com/help/about-double-opt-in/),\
            \ such as imports or API activity."
          readOnly: true
          title: Other Adds
          type: integer
        other_removes:
          description: "The number of subscribers who may have been removed outside\
            \ of unsubscribing or reporting an email as spam (for example, deleted\
            \ subscribers)."
          readOnly: true
          title: Other Removes
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Daily List Activity
      type: object
    Click_Detail_Members:
      description: A collection of members who clicked on a specific link within a
        campaign.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        members:
        - email_id: email_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          clicks: 0
          contact_status: contact_status
          url_id: url_id
          vip: true
          list_is_active: true
          campaign_id: campaign_id
        - email_id: email_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          clicks: 0
          contact_status: contact_status
          url_id: url_id
          vip: true
          list_is_active: true
          campaign_id: campaign_id
        total_items: 6
        campaign_id: campaign_id
      properties:
        members:
          description: "An array of objects, each representing a member who clicked\
            \ a specific link within a campaign."
          items:
            $ref: '#/components/schemas/Click_Detail_Member'
          title: Lists
          type: array
        campaign_id:
          description: The campaign id.
          readOnly: true
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Click Detail Members
      type: object
    Notes:
      description: The most recent Note added about this member.
      example:
        note_id: 9
        note: note
        created_at: 2000-01-23T04:56:07.000+00:00
        created_by: created_by
      properties:
        note_id:
          description: The note id.
          readOnly: true
          title: Note ID
          type: integer
        created_at:
          description: The date and time the note was created in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Created Time
          type: string
        created_by:
          description: The author of the note.
          readOnly: true
          title: Author
          type: string
        note:
          description: The content of the note.
          readOnly: true
          title: Note
          type: string
      readOnly: true
      title: Notes
      type: object
    Timeseries_inner:
      example:
        emails_sent: 0
        recipients_clicks: 4
        unique_opens: 6
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        timestamp:
          description: The date and time for the series in ISO 8601 format.
          format: date-time
          title: Timestamp
          type: string
        emails_sent:
          description: The number of emails sent in the timeseries.
          title: Emails Sent
          type: integer
        unique_opens:
          description: The number of unique opens in the timeseries.
          title: Unique Opens
          type: integer
        recipients_clicks:
          description: The number of clicks in the timeseries.
          title: Recipient Clicks
          type: integer
      type: object
    Sending_Schedule_1:
      description: The schedule for sending the RSS Campaign.
      example:
        hour: 16
        weekly_send_day: sunday
        daily_send:
          sunday: true
          saturday: true
          tuesday: true
          wednesday: true
          thursday: true
          friday: true
          monday: true
        monthly_send_date: 28.834477156190985
      properties:
        hour:
          description: "The hour to send the campaign in local time. Acceptable hours\
            \ are 0-23. For example, '4' would be 4am in [your account's default time\
            \ zone](https://mailchimp.com/help/set-account-details/)."
          maximum: 23
          minimum: 0
          title: Sending Hour
          type: integer
        daily_send:
          $ref: '#/components/schemas/Daily_Sending_Days'
        weekly_send_day:
          description: The day of the week to send a weekly RSS Campaign.
          enum:
          - sunday
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          title: Weekly Sending Day
          type: string
        monthly_send_date:
          description: "The day of the month to send a monthly RSS Campaign. Acceptable\
            \ days are 0-31, where '0' is always the last day of a month. Months with\
            \ fewer than the selected number of days will not have an RSS campaign\
            \ sent out that day. For example, RSS Campaigns set to send on the 30th\
            \ will not go out in February."
          maximum: 31
          minimum: 0
          title: Monthly Sending Day
          type: number
      title: Sending Schedule
      type: object
    Campaign_Content_1:
      description: The HTML and plain-text content for a campaign
      properties:
        plain_text:
          description: "The plain-text portion of the campaign. If left unspecified,\
            \ we'll generate this automatically."
          title: Plain Text
          type: string
        html:
          description: The raw HTML for the campaign.
          title: Campaign HTML
          type: string
        url:
          description: "When importing a campaign, the URL where the HTML lives."
          title: Campaign URL
          type: string
        template:
          $ref: '#/components/schemas/Template_Content'
        archive:
          $ref: '#/components/schemas/Upload_Archive'
        variate_contents:
          description: "Content options for [Multivariate Campaigns](https://mailchimp.com/help/about-multivariate-campaigns/).\
            \ Each content option must provide HTML content and may optionally provide\
            \ plain text. For campaigns not testing content, only one object should\
            \ be provided."
          items:
            $ref: '#/components/schemas/Variate_Contents_inner_1'
          title: Variate Contents
          type: array
      title: Campaign Content
      type: object
    Promo_Rules:
      description: A collection of the store's promo rules.
      example:
        store_id: store_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        promo_rules:
        - starts_at: 2000-01-23T04:56:07.000+00:00
          amount: 0.5
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          description: Save BIG during our summer sale!
          id: id
          ends_at: ends_at
          created_at_foreign: 2000-01-23T04:56:07.000+00:00
          title: 50% off Total Order
          type: fixed
          updated_at_foreign: 2000-01-23T04:56:07.000+00:00
          enabled: true
          target: per_item
        - starts_at: 2000-01-23T04:56:07.000+00:00
          amount: 0.5
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          description: Save BIG during our summer sale!
          id: id
          ends_at: ends_at
          created_at_foreign: 2000-01-23T04:56:07.000+00:00
          title: 50% off Total Order
          type: fixed
          updated_at_foreign: 2000-01-23T04:56:07.000+00:00
          enabled: true
          target: per_item
        total_items: 0
      properties:
        store_id:
          description: The store id.
          title: Store ID
          type: string
        promo_rules:
          description: "An array of objects, each representing promo rules defined\
            \ for a store."
          items:
            $ref: '#/components/schemas/E_commerce_Promo_Rule'
          title: Promo Rules
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Promo Rules
      type: object
    Authorized_Applications_inner:
      description: An authorized app.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        description: description
        id: 0
        users:
        - users
        - users
      properties:
        id:
          description: The ID for the application.
          title: Client ID
          type: integer
        name:
          description: The name of the application.
          title: Application Name
          type: string
        description:
          description: A short description of the application.
          title: Application Description
          type: string
        users:
          description: An array of usernames for users who have linked the app.
          items:
            type: string
          title: Application Users
          type: array
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    Segment_Members:
      description: View members in a specific list segment.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        members:
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 0
          language: language
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: "{}"
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 0
          language: language
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        total_items: 6
      properties:
        members:
          description: "An array of objects, each representing a specific list member."
          items:
            $ref: '#/components/schemas/List_Members_1'
          title: Members
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Segment Members
      type: object
    Landing_Page:
      description: A summary of an individual landing page's settings and content.
      example:
        store_id: store_id
        created_by_source: created_by_source
        list_id: fde02ad86b
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        web_id: 6
        title: title
        tracking:
          track_with_mailchimp: true
          enable_restricted_data_processing: true
        url: url
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        template_id: 0
        id: 030092c2e1f0
        published_at: 2000-01-23T04:56:07.000+00:00
        status: published
        unpublished_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: A string that uniquely identifies this landing page.
          example: 030092c2e1f0
          readOnly: true
          title: Landing Page ID
          type: string
        name:
          description: The name of this landing page.
          title: Landing Page Name
          type: string
        title:
          description: The title of this landing page seen in the browser's title
            bar.
          title: Landing Page title
          type: string
        description:
          description: The description of this landing page.
          title: Landing Page description
          type: string
        template_id:
          description: The template_id of this landing page.
          readOnly: true
          title: Landing Page template_id
          type: integer
        status:
          description: The status of this landing page.
          enum:
          - published
          - unpublished
          - draft
          readOnly: true
          title: Landing Page status
          type: string
        list_id:
          description: The list's ID associated with this landing page.
          example: fde02ad86b
          title: Landing Page list id
          type: string
        store_id:
          description: The ID of the store associated with this landing page.
          title: Store ID
          type: string
        web_id:
          description: The ID used in the Mailchimp web application.
          title: Landing Page Web ID
          type: integer
        created_by_source:
          description: Created by mobile or web
          readOnly: true
          title: Created By Source
          type: string
        url:
          description: The url of the published landing page.
          readOnly: true
          title: Published url
          type: string
        created_at:
          description: The time this landing page was created.
          format: date-time
          readOnly: true
          title: Created At
          type: string
        published_at:
          description: The time this landing page was published.
          format: date-time
          readOnly: true
          title: Published at
          type: string
        unpublished_at:
          description: The time this landing page was unpublished.
          format: date-time
          readOnly: true
          title: Unpublished at
          type: string
        updated_at:
          description: The time this landing page was updated at.
          format: date-time
          readOnly: true
          title: Updated_at
          type: string
        tracking:
          $ref: '#/components/schemas/Tracking_Settings'
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Landing Page
      type: object
    Carts:
      description: A collection of a store's carts.
      example:
        store_id: store_id
        carts:
        - checkout_url: checkout_url
          tax_total: 6.027456183070403
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          created_at: 2015-07-15T19:28:00Z
          order_total: 0.8008281904610115
          id: id
          lines:
          - product_variant_title: product_variant_title
            quantity: 1
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 5.962133916683182
            product_id: product_id
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 1
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 5.962133916683182
            product_id: product_id
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          campaign_id: 839488a60b
          currency_code: currency_code
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        - checkout_url: checkout_url
          tax_total: 6.027456183070403
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          created_at: 2015-07-15T19:28:00Z
          order_total: 0.8008281904610115
          id: id
          lines:
          - product_variant_title: product_variant_title
            quantity: 1
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 5.962133916683182
            product_id: product_id
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 1
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 5.962133916683182
            product_id: product_id
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          campaign_id: 839488a60b
          currency_code: currency_code
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 5
      properties:
        store_id:
          description: The store id.
          title: Store ID
          type: string
        carts:
          description: "An array of objects, each representing a cart."
          items:
            $ref: '#/components/schemas/E_commerce_Cart'
          title: E-commerce Store Carts
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Carts
      type: object
    Clicks_1_inner_1:
      example:
        date: 2018-04-25
        val: 23
      properties:
        date:
          example: 2018-04-25
          readOnly: true
          title: Date
          type: string
        val:
          example: 23
          readOnly: true
          title: Value
          type: integer
      type: object
    Campaign_Sub_Reports:
      description: A list of reports containing child campaigns for a specific campaign.
      example:
        reports:
        - forwards:
            forwards_count: 7
            forwards_opens: 9
          share_report:
            share_url: share_url
            share_password: share_password
          preview_text: preview_text
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          rss_last_send: 2000-01-23T04:56:07.000+00:00
          list_name: list_name
          type: type
          list_is_active: true
          industry_stats:
            unopen_rate: 9.369310271410669
            click_rate: 5.025004791520295
            bounce_rate: 9.965781217890562
            unsub_rate: 6.683562403749608
            type: type
            abuse_rate: 8.762042012749001
            open_rate: 4.965218492984954
          list_stats:
            sub_rate: 9.018348186070783
            click_rate: 6.965117697638846
            unsub_rate: 6.438423552598547
            open_rate: 3.5571952270680973
          campaign_title: campaign_title
          facebook_likes:
            facebook_likes: 1
            unique_likes: 7
            recipient_likes: 6
          timeseries:
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          emails_sent: 0
          ecommerce:
            total_spent: 4.678947989005849
            total_revenue: 7.260521264802104
            total_orders: 1
            currency_code: USD
          id: id
          bounces:
            hard_bounces: 5
            syntax_errors: 2
            soft_bounces: 5
          subject_line: subject_line
          ab_split:
            a:
              forwards: 5
              unsubs: 6
              opens: 3
              bounces: 1
              recipient_clicks: 6
              forwards_opens: 6
              last_open: last_open
              abuse_reports: 2
              unique_opens: 3
            b:
              forwards: 0
              unsubs: 7
              opens: 8
              bounces: 7
              recipient_clicks: 6
              forwards_opens: 4
              last_open: last_open
              abuse_reports: 0
              unique_opens: 7
          timewarp:
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          unsubscribed: 1
          send_time: 2000-01-23T04:56:07.000+00:00
          opens:
            opens_total: 3
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 2
            open_rate: 4.145608029883936
          clicks:
            clicks_total: 7
            unique_clicks: 1
            click_rate: 1.4894159098541704
            last_click: 2000-01-23T04:56:07.000+00:00
            unique_subscriber_clicks: 1
          abuse_reports: 6
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
        - forwards:
            forwards_count: 7
            forwards_opens: 9
          share_report:
            share_url: share_url
            share_password: share_password
          preview_text: preview_text
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          rss_last_send: 2000-01-23T04:56:07.000+00:00
          list_name: list_name
          type: type
          list_is_active: true
          industry_stats:
            unopen_rate: 9.369310271410669
            click_rate: 5.025004791520295
            bounce_rate: 9.965781217890562
            unsub_rate: 6.683562403749608
            type: type
            abuse_rate: 8.762042012749001
            open_rate: 4.965218492984954
          list_stats:
            sub_rate: 9.018348186070783
            click_rate: 6.965117697638846
            unsub_rate: 6.438423552598547
            open_rate: 3.5571952270680973
          campaign_title: campaign_title
          facebook_likes:
            facebook_likes: 1
            unique_likes: 7
            recipient_likes: 6
          timeseries:
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          emails_sent: 0
          ecommerce:
            total_spent: 4.678947989005849
            total_revenue: 7.260521264802104
            total_orders: 1
            currency_code: USD
          id: id
          bounces:
            hard_bounces: 5
            syntax_errors: 2
            soft_bounces: 5
          subject_line: subject_line
          ab_split:
            a:
              forwards: 5
              unsubs: 6
              opens: 3
              bounces: 1
              recipient_clicks: 6
              forwards_opens: 6
              last_open: last_open
              abuse_reports: 2
              unique_opens: 3
            b:
              forwards: 0
              unsubs: 7
              opens: 8
              bounces: 7
              recipient_clicks: 6
              forwards_opens: 4
              last_open: last_open
              abuse_reports: 0
              unique_opens: 7
          timewarp:
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          unsubscribed: 1
          send_time: 2000-01-23T04:56:07.000+00:00
          opens:
            opens_total: 3
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 2
            open_rate: 4.145608029883936
          clicks:
            clicks_total: 7
            unique_clicks: 1
            click_rate: 1.4894159098541704
            last_click: 2000-01-23T04:56:07.000+00:00
            unique_subscriber_clicks: 1
          abuse_reports: 6
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
        campaign_id: campaign_id
      properties:
        reports:
          description: "An array of objects, each representing a report resource."
          items:
            $ref: '#/components/schemas/Campaign_Report'
          title: Reports
          type: array
        campaign_id:
          description: Unique identifier of the parent campaign
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaign Sub-Reports
      type: object
    List_Webhooks:
      description: Manage webhooks for a specific list.
      example:
        list_id: list_id
        webhooks:
        - null
        - null
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
      properties:
        webhooks:
          description: "An array of objects, each representing a specific list member."
          items:
            $ref: '#/components/schemas/List_Webhooks'
          title: Webhooks
          type: array
        list_id:
          description: The list id.
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: List Webhooks
      type: object
    E_Commerce_Report_1:
      description: E-Commerce stats for a campaign.
      example:
        total_spent: 4.678947989005849
        total_revenue: 7.260521264802104
        total_orders: 1
        currency_code: USD
      properties:
        total_orders:
          description: The total orders for a campaign.
          readOnly: true
          title: Total Orders
          type: integer
        total_spent:
          description: The total spent for a campaign. Calculated as the sum of all
            order totals with no deductions.
          readOnly: true
          title: Total Spent
          type: number
        total_revenue:
          description: The total revenue for a campaign. Calculated as the sum of
            all order totals minus shipping and tax totals.
          readOnly: true
          title: Total Revenue
          type: number
        currency_code:
          example: USD
          readOnly: true
          title: Three letter currency code for this user
          type: string
      title: E-Commerce Report
      type: object
    Template_Instance_1:
      description: Information about a specific template.
      properties:
        name:
          description: The name of the template.
          example: Freddie's Jokes
          title: Template Name
          type: string
        folder_id:
          description: The id of the folder the template is currently in.
          example: a4b830b
          title: Folder ID
          type: string
        html:
          description: "The raw HTML for the template. We  support the Mailchimp [Template\
            \ Language](https://mailchimp.com/help/getting-started-with-mailchimps-template-language/)\
            \ in any HTML code passed via the API."
          title: Template HTML
          type: string
      required:
      - html
      - name
      title: Template Instance
      type: object
    Campaign_Report_Summary_1:
      description: "For sent campaigns, a summary of opens and clicks."
      example:
        subscriber_clicks: 4
        click_rate: 7.386281948385884
        opens: 7
        clicks: 2
        unique_opens: 9
        open_rate: 3.616076749251911
      properties:
        opens:
          description: The total number of opens for a campaign.
          readOnly: true
          title: Automation Opens
          type: integer
        unique_opens:
          description: The number of unique opens.
          readOnly: true
          title: Unique Opens
          type: integer
        open_rate:
          description: The number of unique opens divided by the total number of successful
            deliveries.
          readOnly: true
          title: Open Rate
          type: number
        clicks:
          description: The total number of clicks for an campaign.
          readOnly: true
          title: Total Clicks
          type: integer
        subscriber_clicks:
          description: The number of unique clicks.
          readOnly: true
          title: Unique Subscriber Clicks
          type: integer
        click_rate:
          description: The number of unique clicks divided by the total number of
            successful deliveries.
          readOnly: true
          title: Click Rate
          type: number
      title: Campaign Report Summary
      type: object
    Campaign_Report_Summary_2:
      description: "For sent campaigns, a summary of opens, clicks, and e-commerce\
        \ data."
      example:
        subscriber_clicks: 9
        click_rate: 9.369310271410669
        ecommerce:
          total_spent: 8.762042012749001
          total_revenue: 9.018348186070783
          total_orders: 6
        opens: 7
        clicks: 5
        unique_opens: 1
        open_rate: 4.965218492984954
      properties:
        opens:
          description: The total number of opens for a campaign.
          readOnly: true
          title: Automation Opens
          type: integer
        unique_opens:
          description: The number of unique opens.
          readOnly: true
          title: Unique Opens
          type: integer
        open_rate:
          description: The number of unique opens divided by the total number of successful
            deliveries.
          readOnly: true
          title: Open Rate
          type: number
        clicks:
          description: The total number of clicks for an campaign.
          readOnly: true
          title: Total Clicks
          type: integer
        subscriber_clicks:
          description: The number of unique clicks.
          readOnly: true
          title: Unique Subscriber Clicks
          type: integer
        click_rate:
          description: The number of unique clicks divided by the total number of
            successful deliveries.
          readOnly: true
          title: Click Rate
          type: number
        ecommerce:
          $ref: '#/components/schemas/E_Commerce_Report'
      title: Campaign Report Summary
      type: object
    Campaign_Report_Summary_3:
      description: "For sent campaigns, a summary of opens and clicks."
      example:
        subscriber_clicks: 1
        click_rate: 1.0246457001441578
        ecommerce:
          total_spent: 8.762042012749001
          total_revenue: 9.018348186070783
          total_orders: 6
        opens: 3
        clicks: 7
        unique_opens: 2
        open_rate: 4.145608029883936
      properties:
        opens:
          description: The total number of opens for a campaign.
          readOnly: true
          title: Automation Opens
          type: integer
        unique_opens:
          description: The number of unique opens.
          readOnly: true
          title: Unique Opens
          type: integer
        open_rate:
          description: The number of unique opens divided by the total number of successful
            deliveries.
          readOnly: true
          title: Open Rate
          type: number
        clicks:
          description: The total number of clicks for an campaign.
          readOnly: true
          title: Total Clicks
          type: integer
        subscriber_clicks:
          description: The number of unique clicks.
          readOnly: true
          title: Unique Subscriber Clicks
          type: integer
        click_rate:
          description: The number of unique clicks divided by the total number of
            successful deliveries.
          readOnly: true
          title: Click Rate
          type: number
        ecommerce:
          $ref: '#/components/schemas/E_Commerce_Report'
      title: Campaign Report Summary
      type: object
    Location:
      description: Subscriber location information.
      properties:
        latitude:
          description: The location latitude.
          title: Latitude
          type: number
        longitude:
          description: The location longitude.
          title: Longitude
          type: number
      title: Location
      type: object
    Email_Client:
      description: The email client.
      example:
        members: 0
        client: client
      properties:
        client:
          description: The name of the email client.
          readOnly: true
          title: Client
          type: string
        members:
          description: The number of subscribed members who used this email client.
          readOnly: true
          title: Members
          type: integer
      title: Email Client
      type: object
    Automation_Workflow:
      description: A summary of an individual Automation workflow's settings and content.
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        settings:
          auto_footer: true
          use_conversation: true
          authenticate: true
          reply_to: reply_to
          to_name: to_name
          inline_css: true
          title: title
          from_name: from_name
        create_time: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        recipients:
          segment_opts:
            match: any
            saved_segment_id: 6
            conditions:
            - "{}"
            - "{}"
          store_id: 1a2df69xxx
          list_id: list_id
          list_name: list_name
          list_is_active: true
        emails_sent: 0
        trigger_settings:
          runtime:
            hours:
              type: send_asap
            days:
            - sunday
            - sunday
          workflow_emails_count: 1
          workflow_type: abandonedBrowse
          workflow_title: workflow_title
        id: id
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: clicktale
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: google_analytics
          html_clicks: true
        status: save
        report_summary:
          subscriber_clicks: 9
          click_rate: 3.616076749251911
          opens: 5
          clicks: 7
          unique_opens: 5
          open_rate: 2.3021358869347655
      properties:
        id:
          description: A string that identifies the Automation.
          readOnly: true
          title: Automation Campaign ID
          type: string
        create_time:
          description: The date and time the Automation was created in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Create Time
          type: string
        start_time:
          description: The date and time the Automation was started in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Start Time
          type: string
        status:
          description: The current status of the Automation.
          enum:
          - save
          - paused
          - sending
          readOnly: true
          title: Automation Status
          type: string
        emails_sent:
          description: The total number of emails sent for the Automation.
          readOnly: true
          title: Emails Sent
          type: integer
        recipients:
          $ref: '#/components/schemas/List'
        settings:
          $ref: '#/components/schemas/Automation_Campaign_Settings'
        tracking:
          $ref: '#/components/schemas/Automation_Tracking_Options'
        trigger_settings:
          $ref: '#/components/schemas/Automation_Trigger'
        report_summary:
          $ref: '#/components/schemas/Campaign_Report_Summary'
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Automation Workflow
      type: object
    Interests:
      description: A list of this category's interests
      example:
        list_id: list_id
        category_id: category_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        interests:
        - category_id: category_id
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          subscriber_count: subscriber_count
          name: name
          display_order: 0
          id: id
        - category_id: category_id
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          subscriber_count: subscriber_count
          name: name
          display_order: 0
          id: id
        total_items: 6
      properties:
        interests:
          description: An array of this category's interests
          items:
            $ref: '#/components/schemas/Interest'
          title: Interests
          type: array
        list_id:
          description: The unique list id that the interests belong to.
          title: List ID
          type: string
        category_id:
          description: The id for the interest category.
          title: Interest Category ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Interests
      type: object
    Goal:
      description: A single instance of a goal activity.
      example:
        goal_id: 0
        data: data
        last_visited_at: 2000-01-23T04:56:07.000+00:00
        event: event
      properties:
        goal_id:
          description: The id for a Goal event.
          title: Goal ID
          type: integer
        event:
          description: The name/type of Goal event triggered.
          title: Event Name
          type: string
        last_visited_at:
          description: The date and time the user last triggered the Goal event in
            ISO 8601 format.
          format: date-time
          title: Last Visit Date
          type: string
        data:
          description: Any extra data passed with the Goal event.
          title: Additional Data
          type: string
      title: Goal
      type: object
    Verified_Domains:
      description: The verified domains currently on the account.
      example:
        authenticated: true
        domain: domain
        verified: true
        verification_email: verification_email
        verification_sent: 2000-01-23T04:56:07.000+00:00
      properties:
        domain:
          description: The name of this domain.
          readOnly: true
          title: Domain Name
          type: string
        verified:
          description: Whether the domain has been verified for sending.
          readOnly: true
          title: Verified
          type: boolean
        authenticated:
          description: Whether domain authentication is enabled for this domain.
          readOnly: true
          title: Authenticated
          type: boolean
        verification_email:
          description: The e-mail address receiving the two-factor challenge for this
            domain.
          readOnly: true
          title: Verification Email
          type: string
        verification_sent:
          description: The date/time that the two-factor challenge was sent to the
            verification email.
          format: date-time
          readOnly: true
          title: Verification Challenge Sent
          type: string
      title: Verified Domains
      type: object
    Items_inner:
      example:
        heading: heading
        details: details
        id: 0
        type: success
      properties:
        type:
          description: The item type.
          enum:
          - success
          - warning
          - error
          title: Type
          type: string
        id:
          description: The ID for the specific item.
          title: ID
          type: integer
        heading:
          description: The heading for the specific item.
          title: Heading
          type: string
        details:
          description: Details about the specific feedback item.
          title: Details
          type: string
      type: object
    E_commerce_Product_Image:
      description: Information about a specific product image.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        variant_ids:
        - variant_ids
        - variant_ids
        id: id
        url: url
      properties:
        id:
          description: A unique identifier for the product image.
          title: Image Foreign ID
          type: string
        url:
          description: The URL for a product image.
          title: URL
          type: string
        variant_ids:
          description: The list of product variants using the image.
          items:
            type: string
          title: Product Variants
          type: array
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Product Image
      type: object
    Outreach:
      description: "The outreach associated with this order. For example, an email\
        \ campaign or Facebook ad."
      example:
        published_time: 2017-06-06T13:56:12Z
        name: Freddie's Jokes
        id: 839488a60b
        type: regular
      properties:
        id:
          description: A unique identifier for the outreach. Can be an email campaign
            ID.
          example: 839488a60b
          title: Outreach ID
          type: string
        name:
          description: The name for the outreach.
          example: Freddie's Jokes
          readOnly: true
          title: Outreach name
          type: string
        type:
          description: The type of the outreach.
          example: regular
          readOnly: true
          title: Outreach type
          type: string
        published_time:
          description: The date and time the Outreach was published in ISO 8601 format.
          example: 2017-06-06T13:56:12Z
          format: date-time
          readOnly: true
          title: Outreach published time
          type: string
      title: Outreach
      type: object
    E_commerce_Customer:
      description: Information about a specific customer.
      example:
        total_spent: 100.0
        orders_count: 4
        email_address: email_address
        address:
          country: United States
          country_code: US
          province: Georgia
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          province_code: GA
          postal_code: "30308"
        updated_at: 2015-07-15T19:28:00Z
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        last_name: last_name
        created_at: 2015-07-15T19:28:00Z
        opt_in_status: true
        company: company
        id: id
        first_name: first_name
      properties:
        id:
          description: A unique identifier for the customer.
          readOnly: true
          title: Customer Foreign ID
          type: string
        email_address:
          description: The customer's email address.
          readOnly: true
          title: Email Address
          type: string
        opt_in_status:
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
          title: Opt-in Status
          type: boolean
        company:
          description: The customer's company.
          title: Company
          type: string
        first_name:
          description: The customer's first name.
          title: First Name
          type: string
        last_name:
          description: The customer's last name.
          title: Last Name
          type: string
        orders_count:
          description: The customer's total order count.
          example: 4
          readOnly: true
          title: Orders Count
          type: integer
        total_spent:
          description: The total amount the customer has spent.
          example: 100.0
          readOnly: true
          title: Total Spent
          type: number
        address:
          $ref: '#/components/schemas/Address'
        created_at:
          description: The date and time the customer was created in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          readOnly: true
          title: Creation Time
          type: string
        updated_at:
          description: The date and time the customer was last updated in ISO 8601
            format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          readOnly: true
          title: Update Time
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Customer
      type: object
    Cart_Lines:
      description: A collection of a cart's line items.
      example:
        store_id: store_id
        cart_id: cart_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        lines:
        - product_variant_title: product_variant_title
          quantity: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 5.962133916683182
          product_id: product_id
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        - product_variant_title: product_variant_title
          quantity: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 5.962133916683182
          product_id: product_id
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        total_items: 0
      properties:
        store_id:
          description: The store id.
          title: Store ID
          type: string
        cart_id:
          description: The cart id.
          title: Cart ID
          type: string
        lines:
          description: "An array of objects, each representing a cart's line item."
          items:
            $ref: '#/components/schemas/E_commerce_Cart_Line_Item'
          title: Ecommerce Cart Lines
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Cart Lines
      type: object
    Operations:
      properties:
        method:
          description: The HTTP method to use for the operation.
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          example: POST
          title: HTTP Method
          type: string
        path:
          description: The relative path to use for the operation.
          example: /lists
          title: Path
          type: string
        params:
          description: "Any request query parameters. Example parameters: {\"count\"\
            :10, \"offset\":0}"
          example: "{\"count\":10,\"offset\":0}"
          properties: {}
          title: Query Parameters
          type: object
        body:
          description: A string containing the JSON body to use with the request.
          example: "{\"title\":\"Test\"}"
          title: Body
          type: string
        operation_id:
          description: An optional client-supplied id returned with the operation
            results.
          example: my-id-123
          title: Operation ID
          type: string
      required:
      - method
      - path
      title: Operations
      type: object
    Survey_Response:
      description: A single survey response.
      example:
        submitted_at: 2000-01-23T04:56:07.000+00:00
        response_id: response_id
        contact:
          email_id: email_id
          full_name: full_name
          avatar_url: avatar_url
          phone: phone
          contact_id: contact_id
          email: email
          status: Subscribed
          consents_to_one_to_one_messaging: true
        is_new_contact: true
        results:
        - answer: answer
          question_type: pickOne
          query: query
          question_id: question_id
        - answer: answer
          question_type: pickOne
          query: query
          question_id: question_id
      properties:
        response_id:
          description: The ID for the survey response.
          readOnly: true
          title: Response ID
          type: string
        submitted_at:
          description: The date and time when the survey response was submitted in
            ISO 8601 format.
          format: date-time
          readOnly: true
          title: Submitted At
          type: string
        contact:
          $ref: '#/components/schemas/Contact'
        is_new_contact:
          description: If this contact was added to the Mailchimp audience via this
            survey.
          title: Is New Contact
          type: boolean
        results:
          description: The survey questions and the answers to those questions.
          items:
            $ref: '#/components/schemas/Response'
          title: Results
          type: array
      title: Survey Response
      type: object
    An_option_for_Signup_Form_Styles:
      description: An option for Signup Form Styles.
      example:
        property: background-color
        value: '#111111'
      properties:
        property:
          description: A string that identifies the property.
          example: background-color
          title: Property
          type: string
        value:
          description: A string that identifies value of the property.
          example: '#111111'
          title: Value
          type: string
      title: An option for Signup Form Styles
      type: object
    postListsIdSegmentsIdMembers_request:
      properties:
        email_address:
          description: Email address for a subscriber.
          title: Email Address
          type: string
      required:
      - email_address
      type: object
    Subscriber_in_Customer_Journey_s_audience:
      description: Information about subscribers in a Customer Journey's audience.
      properties:
        email_address:
          description: The list member's email address.
          title: Email Address
          type: string
      required:
      - email_address
      title: Subscriber in Customer Journey's audience
      type: object
    Domain_Performance:
      description: Statistics for the top-performing email domains in a campaign.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_sent: 7
        domains:
        - opens_pct: 3.616076749251911
          emails_pct: 7.061401241503109
          domain: domain
          emails_sent: 0
          unsubs: 5
          opens: 1
          clicks: 5
          delivered: 2
          unsubs_pct: 4.145608029883936
          bounces: 6
          clicks_pct: 2.027123023002322
          bounces_pct: 9.301444243932576
        - opens_pct: 3.616076749251911
          emails_pct: 7.061401241503109
          domain: domain
          emails_sent: 0
          unsubs: 5
          opens: 1
          clicks: 5
          delivered: 2
          unsubs_pct: 4.145608029883936
          bounces: 6
          clicks_pct: 2.027123023002322
          bounces_pct: 9.301444243932576
        total_items: 1
        campaign_id: campaign_id
      properties:
        domains:
          description: The top 5 email domains based on total delivered emails.
          items:
            $ref: '#/components/schemas/Email_Domain'
          readOnly: true
          title: Lists
          type: array
        total_sent:
          description: The total number of emails sent for the campaign.
          readOnly: true
          title: Total Sent
          type: integer
        campaign_id:
          description: The unique id for the campaign.
          readOnly: true
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Domain Performance
      type: object
    Interest_Category_1:
      description: "Interest categories organize interests, which are used to group\
        \ subscribers based on their preferences. These correspond to Group Titles\
        \ the application."
      properties:
        title:
          description: The text description of this category. This field appears on
            signup forms and is often phrased as a question.
          title: Name
          type: string
        display_order:
          description: The order that the categories are displayed in the list. Lower
            numbers display first.
          title: Display Order
          type: integer
        type:
          description: Determines how this category’s interests appear on signup forms.
          enum:
          - checkboxes
          - dropdown
          - radio
          - hidden
          title: Display Type
          type: string
      required:
      - title
      - type
      title: Interest Category
      type: object
    getReportingFacebookAds_200_response_facebook_ads_inner_allOf_audience_activity_revenue_inner:
      properties:
        date:
          type: string
        revenue:
          type: number
      type: object
    Template_Content:
      description: Use this template to generate the HTML content of the campaign
      properties:
        id:
          description: The id of the template to use.
          title: Template ID
          type: integer
        sections:
          description: "Content for the sections of the template. Each key should\
            \ be the unique [mc:edit area](https://mailchimp.com/help/create-editable-content-areas-with-mailchimps-template-language/)\
            \ name from the template."
          properties: {}
          title: Template Sections
          type: object
      required:
      - id
      title: Template Content
      type: object
    Exact_Matches:
      description: Exact matches of the provided search query.
      example:
        members:
        - list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          members:
          - null
          - null
          total_items: 0
        - list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          members:
          - null
          - null
          total_items: 0
        total_items: 0
      properties:
        members:
          description: "An array of objects, each representing a specific list member."
          items:
            $ref: '#/components/schemas/List_Members_2'
          title: Members
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
      title: Exact Matches
      type: object
    Members:
      description: Members found for given search term
      example:
        full_search:
          members:
          - list_id: list_id
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            members:
            - null
            - null
            total_items: 0
          - list_id: list_id
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            members:
            - null
            - null
            total_items: 0
          total_items: 6
        exact_matches:
          members:
          - list_id: list_id
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            members:
            - null
            - null
            total_items: 0
          - list_id: list_id
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            members:
            - null
            - null
            total_items: 0
          total_items: 0
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
      properties:
        exact_matches:
          $ref: '#/components/schemas/Exact_Matches'
        full_search:
          $ref: '#/components/schemas/Partial_Matches'
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Members
      type: object
    Lists_inner:
      example:
        country_code: country_code
        opens: 0
        region_name: region_name
        region: region
      properties:
        country_code:
          description: The ISO 3166 2 digit country code.
          readOnly: true
          title: Country Code
          type: string
        region:
          description: "An internal code for the region representing the more specific\
            \ location area such as city or state. When this is blank, it indicates\
            \ we know the country, but not the region."
          readOnly: true
          title: Region
          type: string
        region_name:
          description: "The name of the region, if we have one. For blank \"region\"\
            \ values, this will be \"Rest of Country\"."
          readOnly: true
          title: Region Name
          type: string
        opens:
          description: The number of unique campaign opens for a region.
          readOnly: true
          title: Opens
          type: integer
      type: object
    Member_Tags:
      description: A list of tags assigned to a list member.
      properties:
        tags:
          description: A list of tags assigned to the list member.
          items:
            $ref: '#/components/schemas/Member_Tag'
          title: Tags
          type: array
        is_syncing:
          description: "When is_syncing is true, automations based on the tags in\
            \ the request will not fire"
          title: Is Syncing
          type: boolean
      required:
      - tags
      title: Member Tags
      type: object
    Last_Message:
      description: The most recent message in the conversation.
      example:
        from_email: from_email
        read: true
        subject: subject
        message: message
        from_label: from_label
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        from_label:
          description: A label representing the sender of this message.
          readOnly: true
          title: From Label
          type: string
        from_email:
          description: A label representing the email of the sender of this message.
          readOnly: true
          title: From Email
          type: string
        subject:
          description: The subject of this message.
          readOnly: true
          title: Subject
          type: string
        message:
          description: The plain-text content of the message.
          readOnly: true
          title: Message
          type: string
        read:
          description: Whether this message has been marked as read.
          title: Read
          type: boolean
        timestamp:
          description: The date and time the message was either sent or received in
            ISO 8601 format.
          format: date-time
          readOnly: true
          title: Timestamp
          type: string
      title: Last Message
      type: object
    Segment_Options:
      description: An object representing all segmentation options.
      example:
        match: any
        saved_segment_id: 6
        conditions:
        - "{}"
        - "{}"
      properties:
        saved_segment_id:
          description: The id for an existing saved segment.
          title: Saved Segment ID
          type: integer
        match:
          description: Segment match type.
          enum:
          - any
          - all
          title: Match Type
          type: string
        conditions:
          description: "Segment match conditions. There are multiple possible types,\
            \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
          items:
            type: object
            x-oneOf:
            - type: object
              title: Aim Segment
              description: Segment by interaction with a specific campaign.
              properties:
                condition_type:
                  type: string
                  x-value: Aim
                  enum:
                  - Aim
                field:
                  type: string
                  enum:
                  - aim
                  title: Segment Field
                  description: Segment by interaction with a specific campaign.
                  example: aim
                op:
                  type: string
                  enum:
                  - open
                  - click
                  - sent
                  - noopen
                  - noclick
                  - nosent
                  title: Segment Operator
                  description: "The status of the member with regard to their campaign\
                    \ interaction. One of the following: opened, clicked, was sent,\
                    \ didn't open, didn't click, or was not sent."
                  example: open
                value:
                  type: string
                  title: Segment Data
                  description: Either the web id value for a specific campaign or
                    'any' to account for subscribers who have/have not interacted
                    with any campaigns.
                  example: any
            - type: object
              title: Automation Segment
              description: Segment by interaction with an Automation workflow.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Automation
                  enum:
                  - Automation
                field:
                  type: string
                  enum:
                  - automation
                  title: Segment Field
                  description: Segment by interaction with an Automation workflow.
                  example: automation
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the automation\
                    \ workflow. One of the following: has started the workflow, has\
                    \ completed the workflow, has not started the workflow, or has\
                    \ not completed the workflow."
                  example: started
                value:
                  type: string
                  title: Segment Data
                  description: The web id for the automation workflow to segment against.
                  example: "2135217"
            - type: object
              title: Poll Activity Segment
              description: Segment by poll activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: CampaignPoll
                  enum:
                  - CampaignPoll
                field:
                  type: string
                  enum:
                  - poll
                  title: Segment Field
                  description: Segment by poll activity.
                  example: poll
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members have/have not interacted with a specific poll
                    in a Mailchimp email.
                  example: member
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the poll.
                  example: 409
            - type: object
              title: Conversation Segment
              description: Segment by interaction with a campaign via Conversations.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Conversation
                  enum:
                  - Conversation
                field:
                  type: string
                  enum:
                  - conversation
                  title: Segment Field
                  description: Segment by interaction with a campaign via Conversations.
                  example: conversation
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: "The status of a member's interaction with a conversation.\
                    \ One of the following: has replied or has not replied."
                  example: member
                value:
                  type: string
                  title: Segment Data
                  description: The web id value for a specific campaign or 'any' to
                    account for subscribers who have/have not interacted with any
                    campaigns.
                  example: any
            - type: object
              title: Date Segment
              description: Segment by a specific date field.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Date
                  enum:
                  - Date
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  - info_changed
                  - ecomm_date
                  title: Segment Field
                  description: "The type of date field to segment on: The opt-in time\
                    \ for a signup, the date the subscriber was last updated, or the\
                    \ date of their last ecomm purchase."
                  example: timestamp_opt
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  - not
                  - blank
                  - blank_not
                  - within
                  - notwithin
                  title: Segment Operator
                  description: "When the event took place:  Before, after, is a specific\
                    \ date, is not a specific date, is blank, or is not blank."
                  example: greater
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
                  example: date
                extra:
                  type: string
                  title: Segment Extra Value
                  description: "When segmenting on 'date' or 'campaign', the date\
                    \ for the segment formatted as YYYY-MM-DD or the web id for the\
                    \ campaign."
                  example: 2015-01-30
            - type: object
              title: Email Client Segment
              description: Segment by use of a particular email client.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EmailClient
                  enum:
                  - EmailClient
                field:
                  type: string
                  enum:
                  - email_client
                  title: Segment Field
                  description: Segment by use of a particular email client.
                  example: email_client
                op:
                  type: string
                  enum:
                  - client_is
                  - client_not
                  title: Segment Operator
                  description: "The operation to determine whether we select clients\
                    \ that match the value, or clients that do not match the value."
                  example: client_is
                value:
                  type: string
                  title: Segment Data
                  description: The name of the email client.
                  example: Gmail
            - type: object
              title: Language Segment
              description: Segment by language.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Language
                  enum:
                  - Language
                field:
                  type: string
                  enum:
                  - language
                  title: Segment Field
                  description: Segmenting based off of a subscriber's language.
                  example: language
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Whether the member's language is or is not set to a
                    specific language.
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: A two-letter language identifier.
                  example: en
            - type: object
              title: Member Rating Segment
              description: Segment by member rating.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: MemberRating
                  enum:
                  - MemberRating
                field:
                  type: string
                  enum:
                  - rating
                  title: Segment Field
                  description: Segment by member rating.
                  example: rating
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have have a rating that is/not exactly
                    a given number or members who have a rating greater/less than
                    a given number.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The star rating number to segment against.
                  example: 4
            - type: object
              title: Signup Source Segment
              description: Segment by signup source.
              required:
              - field
              - condition_type
              - op
              properties:
                condition_type:
                  type: string
                  enum:
                  - SignupSource
                  x-value: SignupSource
                  title: Type
                field:
                  type: string
                  enum:
                  - source
                  title: Segment Field
                  example: source
                op:
                  type: string
                  enum:
                  - source_is
                  - source_not
                  title: Segment Operator
                  description: Whether the member's signup source was/was not a particular
                    value.
                  example: source_is
                value:
                  type: string
                  title: Segment Data
                  description: The signup source.
                  example: List Import
            - type: object
              title: Survey Monkey Segment
              description: Segment by interaction with a SurveyMonkey survey.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SurveyMonkey
                  enum:
                  - SurveyMonkey
                field:
                  type: string
                  enum:
                  - survey_monkey
                  title: Segment Field
                  description: Segment by interaction with a SurveyMonkey survey.
                  example: survey_monkey
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the survey.One\
                    \ of the following: has started the survey, has completed the\
                    \ survey, has not started the survey, or has not completed the\
                    \ survey."
                  example: started
                value:
                  type: string
                  title: Survey ID
                  description: The unique ID of the survey monkey survey.
                  example: "32179586"
            - type: object
              title: VIP Segment
              description: Segment by VIP status.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: VIP
                  enum:
                  - VIP
                field:
                  type: string
                  enum:
                  - gmonkey
                  title: Segment Field
                  description: Segment by VIP status.
                  example: gmonkey
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Whether the member is or is not marked as VIP.
                  example: member
            - type: object
              title: Interests Segment
              description: Segment by an interest group merge field.
              properties:
                condition_type:
                  type: string
                  x-value: Interests
                  enum:
                  - Interests
                field:
                  type: string
                  title: Segment Field
                  description: Segmenting based on interest group information. This
                    should start with 'interests-' followed by the grouping id. Ex.
                    'interests-123'.
                  example: interests-123
                op:
                  type: string
                  enum:
                  - interestcontains
                  - interestcontainsall
                  - interestnotcontains
                  title: Segment Operator
                  description: "Whether the member is a part of one, all, or none\
                    \ of the groups."
                  example: interestcontains
                value:
                  type: array
                  title: Segment Value
                  description: "An array containing strings, each representing a group\
                    \ id."
                  items:
                    type: string
                    example:
                    - "44401"
                    - "44405"
                    - "44409"
            - type: object
              title: Ecommerce Category Segment
              description: Segment by purchases in specific items or categories.
              properties:
                condition_type:
                  type: string
                  x-value: EcommCategory
                  enum:
                  - EcommCategory
                field:
                  type: string
                  enum:
                  - ecomm_cat
                  - ecomm_prod
                  title: Segment Field
                  description: Segment by purchases in specific items or categories.
                  example: ecomm_cat
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "A member who has purchased from a category/specific\
                    \ item that is/is not a specific name, where the category/item\
                    \ name contains/doesn't contain a specific phrase or string, or\
                    \ a category/item name that starts/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: The ecommerce category/item information.
                  example: Product
            - type: object
              title: Ecommerce Number Segment
              description: "Segment by average spent total, number of orders, total\
                \ number of products purchased, or average number of products per\
                \ order."
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EcommNumber
                  enum:
                  - EcommNumber
                field:
                  type: string
                  enum:
                  - ecomm_spent_avg
                  - ecomm_orders
                  - ecomm_prod_all
                  - ecomm_avg_ord
                  title: Segment Field
                  description: "Segment by average spent total, number of orders,\
                    \ total number of products purchased, or average number of products\
                    \ per order."
                  example: ecomm_orders
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than the segment value."
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than this amount."
                  example: 42
            - type: object
              title: Ecommerce Purchased Segment
              description: Segment by whether someone has purchased anything.
              properties:
                condition_type:
                  type: string
                  x-value: EcommPurchased
                  enum:
                  - EcommPurchased
                field:
                  type: string
                  enum:
                  - ecomm_purchased
                  title: Segment Field
                  description: Segment by whether someone has purchased anything.
                  example: ecomm_purchased
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who have have ('member') or have not ('notmember')
                    purchased.
                  example: member
            - type: object
              title: Ecommerce Spent Segment
              description: Segment by amount spent on a single order or across all
                orders.
              properties:
                condition_type:
                  type: string
                  x-value: EcommSpent
                  enum:
                  - EcommSpent
                field:
                  type: string
                  enum:
                  - ecomm_spent_one
                  - ecomm_spent_all
                  title: Segment Field
                  description: Segment by amount spent on a single order or across
                    all orders.
                  example: ecomm_spent_one
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have spent 'more' or 'less' than then specified
                    value.
                  example: greater
                value:
                  type: integer
                  title: Segment Data
                  description: The total amount a member spent.
                  example: 42
            - type: object
              title: Ecommerce Purchased Store Segment
              description: Segment by purchases from a specific store.
              properties:
                condition_type:
                  type: string
                  x-value: EcommStore
                  enum:
                  - EcommStore
                field:
                  type: string
                  enum:
                  - ecomm_store
                  title: Segment Field
                  description: Segment by purchases from a specific store.
                  example: ecomm_store
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who have or have not purchased from a specific
                    store.
                  example: is
                value:
                  type: string
                  title: Segment Operator
                  description: The store id to segment against.
                  example: "289"
            - type: object
              title: Goal Activity Segment
              description: Segment by Goal activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalActivity
                  enum:
                  - GoalActivity
                field:
                  type: string
                  enum:
                  - goal
                  title: Segment Field
                  description: Segment by Goal activity.
                  example: goal
                op:
                  type: string
                  enum:
                  - is
                  - goal_not
                  - contains
                  - goal_notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "Whether the website URL is/not exactly, contains/doesn't\
                    \ contain, starts with/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The URL to check Goal activity against.
            - type: object
              title: Goal Timestamp Segment
              description: Segment by most recent interaction with a website.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalTimestamp
                  enum:
                  - GoalTimestamp
                field:
                  type: string
                  enum:
                  - goal_last_visited
                  title: Segment Field
                  description: Segment by most recent interaction with a website.
                  example: goal_last_visited
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  title: Segment Operator
                  description: "Whether the website activity happened after, before,\
                    \ or at a given timestamp."
                  example: greater
                value:
                  type: string
                  title: Segment Value
                  description: The date to check Goal activity against.
                  example: 2015-07-20 19:45:21
            - type: object
              title: Similar Subscribers Segment Member Segment
              description: Segment by similar subscribers.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: FuzzySegment
                  enum:
                  - FuzzySegment
                field:
                  type: string
                  enum:
                  - fuzzy_segment
                  title: Segment Field
                  description: Segment by similar subscribers.
                  example: fuzzy_segment
                op:
                  type: string
                  enum:
                  - fuzzy_is
                  - fuzzy_not
                  title: Segment Operator
                  description: Members who are/are not apart of a 'similar subscribers'
                    segment.
                  example: fuzzy_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the 'similar subscribers' segment.
                  example: 48433
            - type: object
              title: Static Segment Member Segment
              description: Segment by a given static segment.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: StaticSegment
                  enum:
                  - StaticSegment
                field:
                  type: string
                  enum:
                  - static_segment
                  title: Segment Field
                  description: Segment by a given static segment.
                  example: static_segment
                op:
                  type: string
                  enum:
                  - static_is
                  - static_not
                  title: Segment Operator
                  description: Members who are/are not apart of a static segment.
                  example: static_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the static segment.
                  example: 48433
            - type: object
              title: Location-Based Segment
              description: Segment by a specific country or US state.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoCountryState
                  enum:
                  - IPGeoCountryState
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeocountry
                  - ipgeonotcountry
                  - ipgeostate
                  - ipgeonotstate
                  title: Segment Operator
                  description: Segment members who are within a specific country or
                    US state.
                  example: ipgeocountry
                value:
                  type: string
                  title: Segment Data
                  description: The two-letter country code or US state abbreviation.
                  example: US
            - type: object
              title: Geolocation Segment
              description: Segment by a specific geographic region.
              required:
              - field
              - op
              - value
              - addr
              - lat
              - lng
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoIn
                  enum:
                  - IPGeoIn
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoin
                  - ipgeonotin
                  title: Segment Operator
                  description: Segment members who are within a specific geographic
                    region.
                  example: ipgeoin
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 42
                addr:
                  type: string
                  title: Segment Location Address
                  description: The address of the target location.
                  example: "Atlanta, GA, USA"
                lat:
                  type: string
                  title: Segment Location Latitude
                  description: The latitude of the target location.
                  example: "33.7489954"
                lng:
                  type: string
                  title: Segment Location Longitude
                  description: The longitude of the target location.
                  example: "-84.3879824"
            - type: object
              title: US Zip Code Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoInZip
                  enum:
                  - IPGeoInZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoinzip
                  title: Segment Operator
                  description: Segment members who are within a specific US zip code.
                  example: ipgeoinzip
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 25
                extra:
                  type: integer
                  title: Extra Data
                  description: The zip code to segment against.
                  example: 30318
            - type: object
              title: Unknown Location-Based Segment
              description: Segment members whose location information is unknown.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoUnknown
                  enum:
                  - IPGeoUnknown
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeounknown
                  title: Segment Operator
                  description: Segment members for which location information is unknown.
                  example: ipgeounknown
            - type: object
              title: Zip Code Location-Based Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoZip
                  enum:
                  - IPGeoZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoiszip
                  - ipgeonotzip
                  title: Segment Operator
                  description: Segment members who are/are not within a specific US
                    zip code.
                  example: ipgeonotzip
                value:
                  type: integer
                  title: Segment Data
                  description: The 5-digit zip code.
                  example: 30318
            - type: object
              title: Social Profiles Age Segment
              description: Segment by age ranges in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialAge
                  enum:
                  - SocialAge
                field:
                  type: string
                  enum:
                  - social_age
                  title: Segment Field
                  description: Segment by age ranges in Social Profiles data.
                  example: social_age
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-54
                  - 55+
                  title: Segment Operator
                  description: The age range to segment.
                  example: 35-54
            - type: object
              title: Social Profiles Gender Segment
              description: Segment by listed gender in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialGender
                  enum:
                  - SocialGender
                field:
                  type: string
                  enum:
                  - social_gender
                  title: Segment Field
                  description: Segment by listed gender in Social Profiles data.
                  example: social_gender
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The Social Profiles gender to segment.
                  example: female
            - type: object
              title: Social Profiles Influence Segment
              description: Segment by influence rating in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialInfluence
                  enum:
                  - SocialInfluence
                field:
                  type: string
                  enum:
                  - social_influence
                  title: Segment Field
                  description: Segment by influence rating in Social Profiles data.
                  example: social_influence
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have a rating that is/not or greater/less
                    than the rating provided.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The Social Profiles influence rating to segment.
                  example: 2
            - type: object
              title: Social Profiles Social Network Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkMember
                  enum:
                  - SocialNetworkMember
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who are/not on a given social network.
                  example: member
                value:
                  type: string
                  enum:
                  - twitter
                  - facebook
                  - linkedin
                  - flickr
                  - foursquare
                  - lastfm
                  - myspace
                  - quora
                  - vimeo
                  - yelp
                  - youtube
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter
            - type: object
              title: Social Profiles Social Network Follow Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkFollow
                  enum:
                  - SocialNetworkFollow
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - follow
                  - notfollow
                  title: Segment Operator
                  description: Members who are/not following a linked account on a
                    given social network.
                  example: follow
                value:
                  type: string
                  enum:
                  - twitter_follow
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter_follow
            - type: object
              title: Address Merge Field Segment
              description: Segment by an address-type merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: AddressMerge
                  enum:
                  - AddressMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address-type merge field to segment.
                  example: MMERGE3
                op:
                  type: string
                  enum:
                  - contains
                  - notcontain
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's address merge field contains/does
                    not contain a value or is/is not blank.
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Atlanta
            - type: object
              title: Address/Zip Merge Field Segment
              description: Segment by an address-type merge field within a given distance.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: ZipMerge
                  enum:
                  - ZipMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address or zip-type merge field to segment.
                  example: MMERGE2
                op:
                  type: string
                  enum:
                  - geoin
                  title: Segment Operator
                  description: Whether the member's address merge field is within
                    a given distance from a city or zip.
                  example: geoin
                value:
                  type: string
                  title: Segment Value
                  description: The distance from the city/zip.
                  example: "25"
                extra:
                  type: string
                  title: Segment Extra
                  description: The city or the zip being used to segment against.
                  example: "30318"
            - type: object
              title: Birthday Merge Field Segment
              description: Segment by a contact's birthday.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: BirthdayMerge
                  enum:
                  - BirthdayMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE4
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's birthday merge information is/is
                    not a certain date or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against (mm/dd).
                  example: 01/30
            - type: object
              title: Date Merge Field Segment
              description: Segment by a given date merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: DateMerge
                  enum:
                  - DateMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE5
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - less
                  - blank
                  - blank_not
                  - greater
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ is greater/less than a value or is/is not blank."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against.
                  example: 01/30/2015
            - type: object
              title: Dropdown/Radio Merge Field Segment
              description: An individual segment condition
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: SelectMerge
                  enum:
                  - SelectMerge
                field:
                  type: string
                  title: Segment Field
                  description: A merge field to segment.
                  example: MMERGE6
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  - notcontain
                  - contains
                  title: Segment Operator
                  description: Whether the member's merge information is/is not a
                    value or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Second Choice
            - type: object
              title: Text or Number Merge Field Segment
              description: Segment by a given text or number merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: TextMerge
                  enum:
                  - TextMerge
                field:
                  type: string
                  title: Segment Field
                  description: A text or number merge field to segment.
                  example: MMERGE7
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ contains/does not contain, starts/ends with, or is greater/less\
                    \ than a value"
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text or number merge field with.
                  example: Freddie's Jokes
            - type: object
              title: Email Segment
              description: Segment by email address.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: EmailAddress
                  enum:
                  - EmailAddress
                field:
                  type: string
                  enum:
                  - merge0
                  - EMAIL
                  title: Segment Field
                  description: Segmenting based off of a subscriber's email address.
                  example: EMAIL
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  title: Segment Operator
                  description: "Whether the email address is/not exactly, contains/doesn't\
                    \ contain, starts/ends with a string."
                value:
                  type: string
                  title: Segment Value
                  description: The value to compare the email against.
                  example: urist.mcvankab@freddiesjokes.com
            - type: object
              title: Predicted Gender Segment
              description: Segment by predicted gender.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedGender
                  enum:
                  - PredictedGender
                field:
                  type: string
                  enum:
                  - predicted_gender
                  title: Segment Field
                  description: Segment by predicted gender.
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The predicted gender to segment.
                  example: female
            - type: object
              title: Predicted Age Segment
              description: Segment by predicted age.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedAge
                  enum:
                  - PredictedAge
                field:
                  type: string
                  enum:
                  - predicted_age_range
                  title: Segment Field
                  description: Segment by predicted age.
                op:
                  type: string
                  enum:
                  - is
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-44
                  - 45-54
                  - 55-64
                  - 65+
                  title: Segment Operator
                  description: The predicted age to segment.
                  example: female
            - type: object
              title: New Subscribers Prebuilt Segment
              description: Segment by when people subscribed.
              properties:
                condition_type:
                  type: string
                  x-value: NewSubscribers
                  enum:
                  - NewSubscribers
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  title: Segment Field
                  description: Segment by when people subscribed.
                op:
                  type: string
                  enum:
                  - date_within
                  title: Segment Operator
                  description: "Whe the event took place, namely within a time frame."
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
            x-discriminator:
              type: string
              propertyName: condition_type
          title: Segment Type
          type: array
      title: Segment Options
      type: object
    Automation_Workflow_Email:
      description: A summary of an individual Automation workflow email.
      example:
        archive_url: archive_url
        settings:
          auto_footer: true
          subject_line: subject_line
          preview_text: preview_text
          authenticate: true
          title: title
          from_name: from_name
          auto_tweet: true
          auto_fb_post:
          - auto_fb_post
          - auto_fb_post
          fb_comments: true
          drag_and_drop: true
          reply_to: reply_to
          inline_css: true
          template_id: 2
        workflow_id: workflow_id
        create_time: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        trigger_settings:
          runtime:
            hours:
              type: send_asap
            days:
            - sunday
            - sunday
          workflow_emails_count: 1
          workflow_type: abandonedBrowse
          workflow_title: workflow_title
        web_id: 33345484
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: clicktale
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: google_analytics
          html_clicks: true
        needs_block_refresh: true
        start_time: 2000-01-23T04:56:07.000+00:00
        delay:
          amount: 6
          full_description: 1 day after subscribers purchase anything from your store
          action_description: subscribers purchase anything from your store
          action: previous_campaign_sent
          type: now
          direction: before
        send_time: 2000-01-23T04:56:07.000+00:00
        content_type: content_type
        social_card:
          image_url: image_url
          description: description
          title: title
        recipients:
          segment_opts:
            prebuilt_segment_id: subscribers-female
            match: any
            saved_segment_id: 5
            conditions:
            - "{}"
            - "{}"
          list_id: list_id
          segment_text: segment_text
          recipient_count: 5
          list_name: list_name
          list_is_active: true
        emails_sent: 1
        id: id
        position: 0
        has_logo_merge_tag: true
        status: save
        report_summary:
          subscriber_clicks: 4
          click_rate: 7.386281948385884
          opens: 7
          clicks: 2
          unique_opens: 9
          open_rate: 3.616076749251911
      properties:
        id:
          description: A string that uniquely identifies the Automation email.
          readOnly: true
          title: Automation Email ID
          type: string
        web_id:
          description: "The ID used in the Mailchimp web application. View this automation\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
          example: 33345484
          readOnly: true
          title: Automation Web ID
          type: integer
        workflow_id:
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
          title: Workflow ID
          type: string
        position:
          description: The position of an Automation email in a workflow.
          readOnly: true
          title: Email Position
          type: integer
        delay:
          $ref: '#/components/schemas/Automation_Delay'
        create_time:
          description: The date and time the campaign was created in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Create Time
          type: string
        start_time:
          description: The date and time the campaign was started in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Start Time
          type: string
        archive_url:
          description: The link to the campaign's archive version in ISO 8601 format.
          readOnly: true
          title: Archive URL
          type: string
        status:
          description: The current status of the campaign.
          enum:
          - save
          - paused
          - sending
          readOnly: true
          title: Campaign Status
          type: string
        emails_sent:
          description: The total number of emails sent for this campaign.
          readOnly: true
          title: Emails Sent
          type: integer
        send_time:
          description: ' The date and time a campaign was sent in ISO 8601 format'
          format: date-time
          readOnly: true
          title: Send Time
          type: string
        content_type:
          description: "How the campaign's content is put together ('template', 'drag_and_drop',\
            \ 'html', 'url')."
          readOnly: true
          title: Content Type
          type: string
        needs_block_refresh:
          description: Determines if the automation email needs its blocks refreshed
            by opening the web-based campaign editor.
          example: true
          readOnly: true
          title: Needs Block Refresh
          type: boolean
        has_logo_merge_tag:
          description: Determines if the campaign contains the *|BRAND:LOGO|* merge
            tag.
          example: true
          readOnly: true
          title: Has Logo Merge Tag
          type: boolean
        recipients:
          $ref: '#/components/schemas/List_2'
        settings:
          $ref: '#/components/schemas/Campaign_Settings'
        tracking:
          $ref: '#/components/schemas/Campaign_Tracking_Options'
        social_card:
          $ref: '#/components/schemas/Campaign_Social_Card'
        trigger_settings:
          $ref: '#/components/schemas/Automation_Trigger'
        report_summary:
          $ref: '#/components/schemas/Campaign_Report_Summary_1'
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Automation Workflow Email
      type: object
    Batch_Operations:
      description: A summary of batch requests that have been made.
      example:
        batches:
        - finished_operations: 6
          completed_at: 2000-01-23T04:56:07.000+00:00
          submitted_at: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          total_operations: 0
          errored_operations: 1
          id: id
          response_body_url: response_body_url
          status: pending
        - finished_operations: 6
          completed_at: 2000-01-23T04:56:07.000+00:00
          submitted_at: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          total_operations: 0
          errored_operations: 1
          id: id
          response_body_url: response_body_url
          status: pending
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 5
      properties:
        batches:
          description: An array of objects representing batch calls.
          items:
            $ref: '#/components/schemas/Batch'
          title: Batches
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Batch Operations
      type: object
    Collection_of_Conversation_Messages:
      description: Messages from a specific conversation.
      example:
        conversation_messages:
        - from_email: from_email
          read: true
          list_id: 0
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          conversation_id: conversation_id
          subject: subject
          id: id
          message: message
          from_label: from_label
          timestamp: 2000-01-23T04:56:07.000+00:00
        - from_email: from_email
          read: true
          list_id: 0
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          conversation_id: conversation_id
          subject: subject
          id: id
          message: message
          from_label: from_label
          timestamp: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        conversation_id: conversation_id
        total_items: 6
      properties:
        conversation_messages:
          description: "An array of objects, each representing a conversation messages\
            \ resources."
          items:
            $ref: '#/components/schemas/Conversation_Message'
          title: Conversation Messages
          type: array
        conversation_id:
          description: A string that identifies this conversation.
          title: Conversation ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Collection of Conversation Messages
      type: object
    List_9:
      description: Information about a specific list segment.
      properties:
        name:
          description: The name of the segment.
          title: Segment Name
          type: string
        static_segment:
          description: An array of emails to be used for a static segment. Any emails
            provided that are not present on the list will be ignored. Passing an
            empty array for an existing static segment will reset that segment and
            remove all members. This field cannot be provided with the `options` field.
          items:
            type: string
          title: Static Segment
          type: array
        options:
          $ref: '#/components/schemas/Conditions_2'
      required:
      - name
      title: List
      type: object
    Upload_Archive:
      description: "Available when uploading an archive to create campaign content.\
        \ The archive should include all campaign content and images. [Learn more](https://mailchimp.com/help/import-a-custom-html-template/)."
      properties:
        archive_content:
          description: The base64-encoded representation of the archive file.
          title: Archive Content
          type: string
        archive_type:
          description: The type of encoded file. Defaults to zip.
          enum:
          - zip
          - tar.gz
          - tar.bz2
          - tar
          - tgz
          - tbz
          title: Archive Type
          type: string
      required:
      - archive_content
      title: Upload Archive
      type: object
    List_6:
      description: List settings for the campaign.
      example:
        segment_opts:
          prebuilt_segment_id: subscribers-female
          match: any
          saved_segment_id: 5
          conditions:
          - "{}"
          - "{}"
        list_id: list_id
        segment_text: segment_text
        recipient_count: 1
        list_name: list_name
      properties:
        list_id:
          description: The unique list id.
          title: List ID
          type: string
        list_name:
          description: The name of the list.
          readOnly: true
          title: List Name
          type: string
        segment_text:
          description: "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/)\
            \ used for the campaign. Formatted as a string marked up with HTML."
          readOnly: true
          title: Segment Text
          type: string
        recipient_count:
          description: Count of the recipients on the associated list. Formatted as
            an integer.
          readOnly: true
          title: Recipient Count
          type: integer
        segment_opts:
          $ref: '#/components/schemas/Segment_Options_1'
      required:
      - list_id
      title: List
      type: object
    List_5:
      description: List settings for the campaign.
      properties:
        list_id:
          description: The unique list id.
          title: List ID
          type: string
        segment_opts:
          $ref: '#/components/schemas/Segment_Options_1'
      required:
      - list_id
      title: List
      type: object
    List_8:
      description: Information about a specific list segment.
      properties:
        name:
          description: The name of the segment.
          title: Segment Name
          type: string
        static_segment:
          description: An array of emails to be used for a static segment. Any emails
            provided that are not present on the list will be ignored. Passing an
            empty array will create a static segment without any subscribers. This
            field cannot be provided with the options field.
          items:
            type: string
          title: Static Segment
          type: array
        options:
          $ref: '#/components/schemas/Conditions_1'
      required:
      - name
      title: List
      type: object
    Automation_Tracking_Options:
      description: The tracking options for the Automation.
      example:
        salesforce:
          notes: true
          campaign: true
        goal_tracking: true
        capsule:
          notes: true
        clicktale: clicktale
        text_clicks: true
        ecomm360: true
        opens: true
        google_analytics: google_analytics
        html_clicks: true
      properties:
        opens:
          description: "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/).\
            \ Defaults to `true`."
          title: Opens
          type: boolean
        html_clicks:
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the HTML version of the Automation. Defaults to `true`."
          title: HTML Click Tracking
          type: boolean
        text_clicks:
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the plain-text version of the Automation. Defaults to `true`."
          title: Plain-Text Click Tracking
          type: boolean
        goal_tracking:
          description: Deprecated
          title: Mailchimp Goal Tracking
          type: boolean
        ecomm360:
          description: Whether to enable e-commerce tracking.
          title: E-commerce Tracking
          type: boolean
        google_analytics:
          description: "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/)\
            \ tracking (max of 50 bytes)."
          title: Google Analytics Tracking
          type: string
        clicktale:
          description: "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/)\
            \ tracking (max of 50 bytes)."
          title: ClickTale Analytics Tracking
          type: string
        salesforce:
          $ref: '#/components/schemas/Salesforce_CRM_Tracking'
        capsule:
          $ref: '#/components/schemas/Capsule_CRM_Tracking'
      title: Automation Tracking Options
      type: object
    List_7:
      description: Information about a specific segment.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        options:
          match: any
          conditions:
          - "{}"
          - "{}"
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        member_count: 6
        type: saved
      properties:
        id:
          description: The unique id for the segment.
          readOnly: true
          title: Segment ID
          type: integer
        name:
          description: The name of the segment.
          title: Segment Name
          type: string
        member_count:
          description: The number of active subscribers currently included in the
            segment.
          readOnly: true
          title: Member Count
          type: integer
        type:
          description: "The type of segment. Static segments are now known as tags.\
            \ Learn more about [tags](https://mailchimp.com/help/getting-started-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
          enum:
          - saved
          - static
          - fuzzy
          readOnly: true
          title: Type
          type: string
        created_at:
          description: The date and time the segment was created in ISO 8601 format.
          format: date-time
          readOnly: true
          title: Date Created
          type: string
        updated_at:
          description: The date and time the segment was last updated in ISO 8601
            format.
          format: date-time
          readOnly: true
          title: Date Updated
          type: string
        options:
          $ref: '#/components/schemas/Conditions'
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: List
      type: object
    Collection_of_Tags:
      description: A list of tags assigned to a list member.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
        tags:
        - date_added: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
        - date_added: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
      properties:
        tags:
          description: A list of tags assigned to the list member.
          items:
            $ref: '#/components/schemas/Tags_inner_2'
          title: Tags
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Collection of Tags
      type: object
    List_2:
      description: List settings for the campaign.
      example:
        segment_opts:
          prebuilt_segment_id: subscribers-female
          match: any
          saved_segment_id: 5
          conditions:
          - "{}"
          - "{}"
        list_id: list_id
        segment_text: segment_text
        recipient_count: 5
        list_name: list_name
        list_is_active: true
      properties:
        list_id:
          description: The unique list id.
          title: List ID
          type: string
        list_is_active:
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
          title: List Status
          type: boolean
        list_name:
          description: The name of the list.
          readOnly: true
          title: List Name
          type: string
        segment_text:
          description: "A description of the [segment](https://mailchimp.com/help/getting-started-with-groups/)\
            \ used for the campaign. Formatted as a string marked up with HTML."
          readOnly: true
          title: Segment Text
          type: string
        recipient_count:
          description: Count of the recipients on the associated list. Formatted as
            an integer.
          readOnly: true
          title: Recipient Count
          type: integer
        segment_opts:
          $ref: '#/components/schemas/Segment_Options_1'
      title: List
      type: object
    List_1:
      description: List settings for the Automation.
      properties:
        list_id:
          description: The id of the List.
          example: 1a2df69xxx
          title: List ID
          type: string
        store_id:
          description: The id of the store.
          example: 1a2df69xxx
          title: Store ID
          type: string
      title: List
      type: object
    List_4:
      description: List settings for the campaign.
      properties:
        list_id:
          description: The unique list id.
          title: List ID
          type: string
        segment_opts:
          $ref: '#/components/schemas/Segment_Options_2'
      required:
      - list_id
      title: List
      type: object
    List_3:
      description: List settings for the campaign.
      example:
        segment_opts:
          prebuilt_segment_id: subscribers-female
          match: any
          saved_segment_id: 5
          conditions:
          - "{}"
          - "{}"
        list_id: list_id
        segment_text: segment_text
        recipient_count: 1
        list_name: list_name
        list_is_active: true
      properties:
        list_id:
          description: The unique list id.
          title: List ID
          type: string
        list_is_active:
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
          title: List Status
          type: boolean
        list_name:
          description: The name of the list.
          readOnly: true
          title: List Name
          type: string
        segment_text:
          description: "A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/)\
            \ used for the campaign. Formatted as a string marked up with HTML."
          readOnly: true
          title: Segment Text
          type: string
        recipient_count:
          description: Count of the recipients on the associated list. Formatted as
            an integer.
          readOnly: true
          title: Recipient Count
          type: integer
        segment_opts:
          $ref: '#/components/schemas/Segment_Options_1'
      title: List
      type: object
    E_commerce_Cart:
      description: Information about a specific cart.
      example:
        checkout_url: checkout_url
        tax_total: 6.027456183070403
        updated_at: 2015-07-15T19:28:00Z
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        created_at: 2015-07-15T19:28:00Z
        order_total: 0.8008281904610115
        id: id
        lines:
        - product_variant_title: product_variant_title
          quantity: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 5.962133916683182
          product_id: product_id
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        - product_variant_title: product_variant_title
          quantity: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 5.962133916683182
          product_id: product_id
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        campaign_id: 839488a60b
        currency_code: currency_code
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: email_address
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            province_code: GA
            postal_code: "30308"
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          last_name: last_name
          created_at: 2015-07-15T19:28:00Z
          opt_in_status: true
          company: company
          id: id
          first_name: first_name
      properties:
        id:
          description: A unique identifier for the cart.
          readOnly: true
          title: Cart Foreign ID
          type: string
        customer:
          $ref: '#/components/schemas/E_commerce_Customer'
        campaign_id:
          description: A string that uniquely identifies the campaign associated with
            a cart.
          example: 839488a60b
          title: Campaign ID
          type: string
        checkout_url:
          description: "The URL for the cart. This parameter is required for [Abandoned\
            \ Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
          title: Checkout URL
          type: string
        currency_code:
          description: The three-letter ISO 4217 code for the currency that the cart
            uses.
          title: Currency Code
          type: string
        order_total:
          description: The order total for the cart.
          title: Order Total
          type: number
        tax_total:
          description: The total tax for the cart.
          title: Tax Total
          type: number
        lines:
          description: An array of the cart's line items.
          items:
            $ref: '#/components/schemas/E_commerce_Cart_Line_Item'
          title: Cart Line Items
          type: array
        created_at:
          description: The date and time the cart was created in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          readOnly: true
          title: Creation Time
          type: string
        updated_at:
          description: The date and time the cart was last updated in ISO 8601 format.
          example: 2015-07-15T19:28:00Z
          format: date-time
          readOnly: true
          title: Update Time
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: E-commerce Cart
      type: object
    List_Location:
      example:
        cc: cc
        country: country
        total: 6
        percent: 0.8008281904610115
      properties:
        country:
          description: The name of the country.
          readOnly: true
          title: Country Name
          type: string
        cc:
          description: The ISO 3166 2 digit country code.
          readOnly: true
          title: cc
          type: string
        percent:
          description: The percent of subscribers in the country.
          readOnly: true
          title: percent
          type: number
        total:
          description: The total number of subscribers in the country.
          readOnly: true
          title: total
          type: integer
      title: List Location
      type: object
    Removed_Subscribers:
      description: A summary of the subscribers who were removed from an Automation
        workflow.
      example:
        workflow_id: workflow_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        subscribers:
        - workflow_id: workflow_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
        - workflow_id: workflow_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
        total_items: 0
      properties:
        workflow_id:
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
          title: Workflow ID
          type: string
        subscribers:
          description: "An array of objects, each representing a subscriber who was\
            \ removed from an Automation workflow."
          items:
            $ref: '#/components/schemas/Subscriber_Removed_from_Automation_Workflow'
          readOnly: true
          title: Trigger
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Removed Subscribers
      type: object
    Send_Checklist:
      description: The send checklist for the campaign.
      example:
        is_ready: true
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        items:
        - heading: heading
          details: details
          id: 0
          type: success
        - heading: heading
          details: details
          id: 0
          type: success
      properties:
        is_ready:
          description: Whether the campaign is ready to send.
          title: Ready?
          type: boolean
        items:
          description: A list of feedback items to review before sending your campaign.
          items:
            $ref: '#/components/schemas/Items_inner'
          title: Items
          type: array
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Send Checklist
      type: object
    Ecommerce_Product_Variants:
      description: A collection of a product's variants.
      example:
        store_id: store_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        product_id: product_id
        variants:
        - inventory_quantity: 6
          visibility: visibility
          updated_at: 2015-07-15T19:28:00Z
          backorders: backorders
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 0.8008281904610115
          image_url: image_url
          created_at: 2015-07-15T19:28:00Z
          id: id
          title: Cat Hat
          sku: sku
          url: url
        - inventory_quantity: 6
          visibility: visibility
          updated_at: 2015-07-15T19:28:00Z
          backorders: backorders
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 0.8008281904610115
          image_url: image_url
          created_at: 2015-07-15T19:28:00Z
          id: id
          title: Cat Hat
          sku: sku
          url: url
        total_items: 0
      properties:
        store_id:
          description: The store id.
          title: Store ID
          type: string
        product_id:
          description: The product id.
          title: Product ID
          type: string
        variants:
          description: "An array of objects, each representing a product's variants."
          items:
            $ref: '#/components/schemas/E_commerce_Product_Variant'
          title: Ecommerce Product Variants
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Ecommerce Product Variants
      type: object
    Verified_Domains_2:
      description: The verified domains currently on the account.
      properties:
        verification_email:
          description: The e-mail address at the domain you want to verify. This will
            receive a two-factor challenge to be used in the verify action.
          title: Verification Email
          type: string
      required:
      - verification_email
      title: Verified Domains
      type: object
    Verified_Domains_1:
      description: The verified domains currently on the account.
      example:
        domains:
        - authenticated: true
          domain: domain
          verified: true
          verification_email: verification_email
          verification_sent: 2000-01-23T04:56:07.000+00:00
        - authenticated: true
          domain: domain
          verified: true
          verification_email: verification_email
          verification_sent: 2000-01-23T04:56:07.000+00:00
        total_items: 0
      properties:
        domains:
          description: The domains on the account
          items:
            $ref: '#/components/schemas/Verified_Domains'
          readOnly: true
          title: Domains
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
      title: Verified Domains
      type: object
    Tag:
      example:
        tag_name: tag_name
        tag_id: 3
      properties:
        tag_id:
          description: The unique id for the tag.
          readOnly: true
          title: Tag ID
          type: integer
        tag_name:
          description: The name of the tag.
          readOnly: true
          title: Tag Name
          type: string
      title: Tag
      type: object
    Sources_1:
      description: The possible sources of any events that can trigger the webhook
        and whether they are enabled.
      properties:
        user:
          description: Whether the webhook is triggered by subscriber-initiated actions.
          example: true
          title: User
          type: boolean
        admin:
          description: Whether the webhook is triggered by admin-initiated actions
            in the web interface.
          example: true
          title: Admin
          type: boolean
        api:
          description: Whether the webhook is triggered by actions initiated via the
            API.
          example: true
          title: API
          type: boolean
      title: Sources
      type: object
    Create_an_account_export:
      description: Creates an account export with the given parameters.
      properties:
        include_stages:
          description: The stages of an account export to include.
          example: "[\"audiences\", \"gallery_files\"]"
          items:
            enum:
            - audiences
            - campaigns
            - events
            - gallery_files
            - reports
            - templates
            type: string
          title: Include Stages
          type: array
        since_timestamp:
          description: "An ISO 8601 date that will limit the export to only records\
            \ created after a given time. For instance, the reports stage will contain\
            \ any campaign sent after the given timestamp. Audiences, however, are\
            \ excluded from this limit."
          example: 2021-08-23T14:15:09Z
          format: date-time
          title: Since Timestamp
          type: string
      required:
      - include_stages
      title: Create an account export
      type: object
    Members_to_Subscribe_Unsubscribe_to_from_a_List_in_batch:
      description: Members to subscribe to or unsubscribe from a list.
      properties:
        members:
          description: "An array of objects, each representing an email address and\
            \ the subscription status for a specific list. Up to 500 members may be\
            \ added or updated with each API call."
          items:
            $ref: '#/components/schemas/Add_List_Members'
          title: List Members
          type: array
        sync_tags:
          description: Whether this batch operation will replace all existing tags
            with tags in request.
          title: Sync Tags
          type: boolean
        update_existing:
          description: Whether this batch operation will change existing members'
            subscription status.
          title: Update Existing Members
          type: boolean
      required:
      - members
      title: Members to Subscribe/Unsubscribe to/from a List in batch
      type: object
    Recipients:
      description: High level audience information for who the outreach targets.
      properties:
        list_id:
          description: The unique list id.
          title: List ID
          type: string
        list_is_active:
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
          title: List Status
          type: boolean
        list_name:
          description: The name of the list.
          readOnly: true
          title: List Name
          type: string
        segment_text:
          description: "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/)\
            \ used for the campaign. Formatted as a string marked up with HTML."
          readOnly: true
          title: Segment Text
          type: string
        recipient_count:
          description: Count of the recipients on the associated list. Formatted as
            an integer.
          readOnly: true
          title: Recipient Count
          type: integer
        segment_opts:
          $ref: '#/components/schemas/Segment_Options_1'
      title: Recipients
      type: object
    getReportingFacebookAds_200_response_facebook_ads_inner_allOf_report_summary_average_order_amount:
      properties:
        amount:
          type: number
        currency_code:
          type: string
      type: object
    RSS_Options_1:
      description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
        \ options, specific to an RSS campaign."
      properties:
        feed_url:
          description: The URL for the RSS feed.
          format: uri
          title: Feed URL
          type: string
        frequency:
          description: The frequency of the RSS Campaign.
          enum:
          - daily
          - weekly
          - monthly
          title: Frequency
          type: string
        schedule:
          $ref: '#/components/schemas/Sending_Schedule'
        constrain_rss_img:
          description: Whether to add CSS to images in the RSS feed to constrain their
            width in campaigns.
          title: Constrain RSS Images
          type: boolean
      required:
      - feed_url
      - frequency
      title: RSS Options
      type: object
    RSS_Options_3:
      description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
        \ options for a campaign."
      example:
        schedule:
          hour: 16
          weekly_send_day: sunday
          daily_send:
            sunday: true
            saturday: true
            tuesday: true
            wednesday: true
            thursday: true
            friday: true
            monday: true
          monthly_send_date: 28.834477156190985
        last_sent: 2000-01-23T04:56:07.000+00:00
        constrain_rss_img: true
        feed_url: https://openapi-generator.tech
        frequency: daily
      properties:
        feed_url:
          description: The URL for the RSS feed.
          format: uri
          title: Feed URL
          type: string
        frequency:
          description: The frequency of the RSS Campaign.
          enum:
          - daily
          - weekly
          - monthly
          title: Frequency
          type: string
        schedule:
          $ref: '#/components/schemas/Sending_Schedule_1'
        last_sent:
          description: The date the campaign was last sent.
          format: date-time
          readOnly: true
          title: Last Sent
          type: string
        constrain_rss_img:
          description: Whether to add CSS to images in the RSS feed to constrain their
            width in campaigns.
          title: Constrain RSS Images
          type: boolean
      required:
      - feed_url
      - frequency
      title: RSS Options
      type: object
    Campaign_Reports_1:
      description: A list of reports containing campaigns marked as Sent.
      example:
        reports:
        - forwards:
            forwards_count: 7
            forwards_opens: 9
          share_report:
            share_url: share_url
            share_password: share_password
          preview_text: preview_text
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          rss_last_send: 2000-01-23T04:56:07.000+00:00
          list_name: list_name
          type: type
          list_is_active: true
          industry_stats:
            unopen_rate: 9.369310271410669
            click_rate: 5.025004791520295
            bounce_rate: 9.965781217890562
            unsub_rate: 6.683562403749608
            type: type
            abuse_rate: 8.762042012749001
            open_rate: 4.965218492984954
          list_stats:
            sub_rate: 9.018348186070783
            click_rate: 6.965117697638846
            unsub_rate: 6.438423552598547
            open_rate: 3.5571952270680973
          campaign_title: campaign_title
          facebook_likes:
            facebook_likes: 1
            unique_likes: 7
            recipient_likes: 6
          timeseries:
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          emails_sent: 0
          ecommerce:
            total_spent: 4.678947989005849
            total_revenue: 7.260521264802104
            total_orders: 1
            currency_code: USD
          id: id
          bounces:
            hard_bounces: 5
            syntax_errors: 2
            soft_bounces: 5
          subject_line: subject_line
          ab_split:
            a:
              forwards: 5
              unsubs: 6
              opens: 3
              bounces: 1
              recipient_clicks: 6
              forwards_opens: 6
              last_open: last_open
              abuse_reports: 2
              unique_opens: 3
            b:
              forwards: 0
              unsubs: 7
              opens: 8
              bounces: 7
              recipient_clicks: 6
              forwards_opens: 4
              last_open: last_open
              abuse_reports: 0
              unique_opens: 7
          timewarp:
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          unsubscribed: 1
          send_time: 2000-01-23T04:56:07.000+00:00
          opens:
            opens_total: 3
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 2
            open_rate: 4.145608029883936
          clicks:
            clicks_total: 7
            unique_clicks: 1
            click_rate: 1.4894159098541704
            last_click: 2000-01-23T04:56:07.000+00:00
            unique_subscriber_clicks: 1
          abuse_reports: 6
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
        - forwards:
            forwards_count: 7
            forwards_opens: 9
          share_report:
            share_url: share_url
            share_password: share_password
          preview_text: preview_text
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          rss_last_send: 2000-01-23T04:56:07.000+00:00
          list_name: list_name
          type: type
          list_is_active: true
          industry_stats:
            unopen_rate: 9.369310271410669
            click_rate: 5.025004791520295
            bounce_rate: 9.965781217890562
            unsub_rate: 6.683562403749608
            type: type
            abuse_rate: 8.762042012749001
            open_rate: 4.965218492984954
          list_stats:
            sub_rate: 9.018348186070783
            click_rate: 6.965117697638846
            unsub_rate: 6.438423552598547
            open_rate: 3.5571952270680973
          campaign_title: campaign_title
          facebook_likes:
            facebook_likes: 1
            unique_likes: 7
            recipient_likes: 6
          timeseries:
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          emails_sent: 0
          ecommerce:
            total_spent: 4.678947989005849
            total_revenue: 7.260521264802104
            total_orders: 1
            currency_code: USD
          id: id
          bounces:
            hard_bounces: 5
            syntax_errors: 2
            soft_bounces: 5
          subject_line: subject_line
          ab_split:
            a:
              forwards: 5
              unsubs: 6
              opens: 3
              bounces: 1
              recipient_clicks: 6
              forwards_opens: 6
              last_open: last_open
              abuse_reports: 2
              unique_opens: 3
            b:
              forwards: 0
              unsubs: 7
              opens: 8
              bounces: 7
              recipient_clicks: 6
              forwards_opens: 4
              last_open: last_open
              abuse_reports: 0
              unique_opens: 7
          timewarp:
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          unsubscribed: 1
          send_time: 2000-01-23T04:56:07.000+00:00
          opens:
            opens_total: 3
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 2
            open_rate: 4.145608029883936
          clicks:
            clicks_total: 7
            unique_clicks: 1
            click_rate: 1.4894159098541704
            last_click: 2000-01-23T04:56:07.000+00:00
            unique_subscriber_clicks: 1
          abuse_reports: 6
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 9
      properties:
        reports:
          description: "An array of objects, each representing a report resource."
          items:
            $ref: '#/components/schemas/Campaign_Report'
          title: Lists
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaign Reports
      type: object
    RSS_Options_2:
      description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
        \ options for a campaign."
      properties:
        feed_url:
          description: The URL for the RSS feed.
          format: uri
          title: Feed URL
          type: string
        frequency:
          description: The frequency of the RSS Campaign.
          enum:
          - daily
          - weekly
          - monthly
          title: Frequency
          type: string
        schedule:
          $ref: '#/components/schemas/Sending_Schedule'
        constrain_rss_img:
          description: Whether to add CSS to images in the RSS feed to constrain their
            width in campaigns.
          title: Constrain RSS Images
          type: boolean
      required:
      - feed_url
      - frequency
      title: RSS Options
      type: object
    getReportingSurveys_200_response:
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        surveys:
        - list_id: list_id
          updated_at: 2017-08-04T11:09:01Z
          created_at: 2017-08-04T11:09:01Z
          total_responses: 810
          id: 040d2c2e1f0
          web_id: 165
          list_name: list_name
          title: New product ideas
          published_at: 2017-08-04T11:09:01Z
          url: url
          status: published
        - list_id: list_id
          updated_at: 2017-08-04T11:09:01Z
          created_at: 2017-08-04T11:09:01Z
          total_responses: 810
          id: 040d2c2e1f0
          web_id: 165
          list_name: list_name
          title: New product ideas
          published_at: 2017-08-04T11:09:01Z
          url: url
          status: published
        total_items: 0
      properties:
        surveys:
          description: The surveys that have reports available.
          items:
            $ref: '#/components/schemas/Survey_Report'
          title: Surveys
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    Update_information_about_a_specific_workflow_email:
      description: Update information about an individual Automation workflow email.
      properties:
        settings:
          $ref: '#/components/schemas/Campaign_Settings_1'
        delay:
          $ref: '#/components/schemas/Automation_Delay_1'
      title: Update information about a specific workflow email
      type: object
    E_commerce_Cart_Line_Item_2:
      description: Information about a specific cart line item.
      properties:
        product_id:
          description: A unique identifier for the product associated with the cart
            line item.
          title: Cart Line Product Foreign ID
          type: string
        product_variant_id:
          description: A unique identifier for the product variant associated with
            the cart line item.
          title: Cart Line Product Variant Foreign ID
          type: string
        quantity:
          description: The quantity of a cart line item.
          title: Quantity
          type: integer
        price:
          description: The price of a cart line item.
          title: Price
          type: number
      title: E-commerce Cart Line Item
      type: object
    E_commerce_Cart_Line_Item_1:
      description: Information about a specific cart line item.
      properties:
        id:
          description: A unique identifier for the cart line item.
          title: Cart Line Item Foreign ID
          type: string
        product_id:
          description: A unique identifier for the product associated with the cart
            line item.
          title: Cart Line Product Foreign ID
          type: string
        product_variant_id:
          description: A unique identifier for the product variant associated with
            the cart line item.
          title: Cart Line Product Variant Foreign ID
          type: string
        quantity:
          description: The quantity of a cart line item.
          title: Quantity
          type: integer
        price:
          description: The price of a cart line item.
          title: Price
          type: number
      required:
      - id
      - price
      - product_id
      - product_variant_id
      - quantity
      title: E-commerce Cart Line Item
      type: object
    Survey_Question_Answer:
      description: The details of a survey question's answer.
      example:
        submitted_at: 2000-01-23T04:56:07.000+00:00
        response_id: response_id
        contact:
          email_id: email_id
          full_name: full_name
          avatar_url: avatar_url
          phone: phone
          contact_id: contact_id
          email: email
          status: Subscribed
          consents_to_one_to_one_messaging: true
        is_new_contact: true
        id: id
        value: value
      properties:
        id:
          description: The ID of the answer.
          readOnly: true
          title: Answer ID
          type: string
        value:
          description: The raw text answer.
          readOnly: true
          title: Value
          type: string
        response_id:
          description: The ID of the survey response.
          readOnly: true
          title: Response ID
          type: string
        submitted_at:
          description: The date and time when the survey response was submitted in
            ISO 8601 format.
          format: date-time
          readOnly: true
          title: Submitted At
          type: string
        contact:
          $ref: '#/components/schemas/Contact'
        is_new_contact:
          description: If this contact was added to the Mailchimp audience via this
            survey.
          title: Is New Contact
          type: boolean
      title: Survey Question Answer
      type: object
    Abandoned_Browse_Automation:
      description: abandonedBrowse automation details. abandonedBrowse is also known
        as Product Retargeting Email or Retarget Site Visitors on the web.
      example:
        is_supported: false
        id: 355a72bfc3
        status: sending
      properties:
        is_supported:
          description: Whether this store supports the abandonedBrowse automation.
          example: false
          readOnly: true
          title: Is Supported
          type: boolean
        id:
          description: Unique ID of automation parent campaign.
          example: 355a72bfc3
          readOnly: true
          title: ID
          type: string
        status:
          description: Status of the abandonedBrowse automation.
          enum:
          - save
          - sending
          - paused
          example: sending
          readOnly: true
          title: Status
          type: string
      readOnly: true
      title: Abandoned Browse Automation
      type: object
    Script:
      description: The script used to connect your site with Mailchimp.
      example:
        fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
          script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
          );</script>"
        url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
      properties:
        url:
          description: The URL used for any integrations that offer built-in support
            for connected sites.
          example: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
          title: Script URL
          type: string
        fragment:
          description: A pre-built script that you can copy-and-paste into your site
            to integrate it with Mailchimp.
          example: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
          title: Script Fragment
          type: string
      readOnly: true
      title: Script
      type: object
    getReportingFacebookAds_200_response_facebook_ads_inner_allOf_audience_activity:
      properties:
        clicks:
          items:
            $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_audience_activity_clicks_inner'
          type: array
        impressions:
          items:
            $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_audience_activity_impressions_inner'
          type: array
        revenue:
          items:
            $ref: '#/components/schemas/getReportingFacebookAds_200_response_facebook_ads_inner_allOf_audience_activity_revenue_inner'
          type: array
      type: object
    postCampaignsIdActionsSchedule_request:
      properties:
        schedule_time:
          description: "The UTC date and time to schedule the campaign for delivery\
            \ in ISO 8601 format. Campaigns may only be scheduled to send on the quarter-hour\
            \ (:00, :15, :30, :45)."
          format: date-time
          title: Schedule Time
          type: string
        timewarp:
          description: "Choose whether the campaign should use [Timewarp](https://mailchimp.com/help/use-timewarp/)\
            \ when sending. Campaigns scheduled with Timewarp are localized based\
            \ on the recipients' time zones. For example, a Timewarp campaign with\
            \ a `schedule_time` of 13:00 will be sent to each recipient at 1:00pm\
            \ in their local time. Cannot be set to `true` for campaigns using [Batch\
            \ Delivery](https://mailchimp.com/help/schedule-batch-delivery/)."
          title: Timewarp
          type: boolean
        batch_delivery:
          $ref: '#/components/schemas/Batch_Delivery'
      required:
      - schedule_time
      type: object
    Daily_clicks_and_visits_data:
      description: The clicks and visits data from the last seven days.
      example:
        unique_visits:
        - date: 2018-04-25
          val: 1
        - date: 2018-04-25
          val: 1
        visits:
        - date: 2018-04-25
          val: 11
        - date: 2018-04-25
          val: 11
        clicks:
        - date: 2018-04-25
          val: 13
        - date: 2018-04-25
          val: 13
      properties:
        clicks:
          items:
            $ref: '#/components/schemas/Clicks_1_inner'
          title: Clicks
          type: array
        visits:
          items:
            $ref: '#/components/schemas/Visits_inner'
          title: Visits
          type: array
        unique_visits:
          items:
            $ref: '#/components/schemas/Unique_Visits_inner'
          title: Unique Visits
          type: array
      readOnly: true
      title: Daily clicks and visits data
      type: object
    Customers:
      description: A collection of the store's customers.
      example:
        store_id: store_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        customers:
        - total_spent: 100.0
          orders_count: 4
          email_address: email_address
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            province_code: GA
            postal_code: "30308"
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          last_name: last_name
          created_at: 2015-07-15T19:28:00Z
          opt_in_status: true
          company: company
          id: id
          first_name: first_name
        - total_spent: 100.0
          orders_count: 4
          email_address: email_address
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            province_code: GA
            postal_code: "30308"
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          last_name: last_name
          created_at: 2015-07-15T19:28:00Z
          opt_in_status: true
          company: company
          id: id
          first_name: first_name
        total_items: 0
      properties:
        store_id:
          description: The store id.
          title: Store ID
          type: string
        customers:
          description: "An array of objects, each representing a customer of a store."
          items:
            $ref: '#/components/schemas/E_commerce_Customer'
          title: Customers
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Customers
      type: object
    Timewarp_Stats_inner:
      example:
        unique_clicks: 3
        opens: 3
        clicks: 5
        last_click: 2000-01-23T04:56:07.000+00:00
        gmt_offset: 3
        bounces: 4
        last_open: 2000-01-23T04:56:07.000+00:00
        unique_opens: 7
      properties:
        gmt_offset:
          description: "For campaigns sent with timewarp, the time zone group the\
            \ member is apart of."
          title: GMT Offset
          type: integer
        opens:
          description: The number of opens.
          title: Opens
          type: integer
        last_open:
          description: The date and time of the last open in ISO 8601 format.
          format: date-time
          title: Last Open
          type: string
        unique_opens:
          description: The number of unique opens.
          title: Unique Opens
          type: integer
        clicks:
          description: The number of clicks.
          title: Clicks
          type: integer
        last_click:
          description: The date and time of the last click in ISO 8601 format.
          format: date-time
          title: Last Click
          type: string
        unique_clicks:
          description: The number of unique clicks.
          title: Unique Clicks
          type: integer
        bounces:
          description: The number of bounces.
          title: Bounces
          type: integer
      type: object
    Sending_Schedule:
      description: The schedule for sending the RSS Campaign.
      example:
        hour: 2
        weekly_send_day: sunday
        daily_send:
          sunday: true
          saturday: true
          tuesday: true
          wednesday: true
          thursday: true
          friday: true
          monday: true
        monthly_send_date: 3.1764016704468894
      properties:
        hour:
          description: "The hour to send the campaign in local time. Acceptable hours\
            \ are 0-23. For example, '4' would be 4am in [your account's default time\
            \ zone](https://mailchimp.com/help/set-account-defaults/)."
          maximum: 23
          minimum: 0
          title: Sending Hour
          type: integer
        daily_send:
          $ref: '#/components/schemas/Daily_Sending_Days'
        weekly_send_day:
          description: The day of the week to send a weekly RSS Campaign.
          enum:
          - sunday
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          title: Weekly Sending Day
          type: string
        monthly_send_date:
          description: "The day of the month to send a monthly RSS Campaign. Acceptable\
            \ days are 0-31, where '0' is always the last day of a month. Months with\
            \ fewer than the selected number of days will not have an RSS campaign\
            \ sent out that day. For example, RSS Campaigns set to send on the 30th\
            \ will not go out in February."
          maximum: 31
          minimum: 0
          title: Monthly Sending Day
          type: number
      title: Sending Schedule
      type: object
    Campaign_Reports:
      description: A summary of the comment feedback for a specific campaign.
      example:
        feedback:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          parent_id: 6
          feedback_id: 0
          created_at: 2000-01-23T04:56:07.000+00:00
          is_complete: true
          source: api
          message: message
          created_by: created_by
          block_id: 1
          campaign_id: campaign_id
        - updated_at: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          parent_id: 6
          feedback_id: 0
          created_at: 2000-01-23T04:56:07.000+00:00
          is_complete: true
          source: api
          message: message
          created_by: created_by
          block_id: 1
          campaign_id: campaign_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 5
        campaign_id: campaign_id
      properties:
        feedback:
          description: A collection of feedback items for a campaign.
          items:
            $ref: '#/components/schemas/Campaign_Feedback'
          title: Campaign Feedback
          type: array
        campaign_id:
          description: The unique id for the campaign.
          readOnly: true
          title: Campaign ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Campaign Reports
      type: object
    Opens:
      description: An object describing the open activity for the campaign.
      example:
        opens_total: 3
        last_open: 2000-01-23T04:56:07.000+00:00
        unique_opens: 2
        open_rate: 4.145608029883936
      properties:
        opens_total:
          description: The total number of opens for a campaign.
          title: Total Opens
          type: integer
        unique_opens:
          description: The total number of unique opens.
          title: Unique Opens
          type: integer
        open_rate:
          description: The number of unique opens divided by the total number of successful
            deliveries.
          title: Open Rate
          type: number
        last_open:
          description: The date and time of the last recorded open in ISO 8601 format.
          format: date-time
          title: Last Open
          type: string
      title: Opens
      type: object
    Promos_inner:
      example:
        code: code
        amount_discounted: 5.637376656633329
        type: fixed
      properties:
        code:
          description: The Promo Code
          title: Code
          type: string
        amount_discounted:
          description: "The amount of discount applied on the total price. For example\
            \ if the total cost was $100 and the customer paid $95.5, amount_discounted\
            \ will be 4.5 For free shipping set amount_discounted to 0"
          title: Amount Discounted
          type: number
        type:
          description: Type of discount. For free shipping set type to fixed
          enum:
          - fixed
          - percentage
          title: Type
          type: string
      type: object
    Member_Activity_Events_1:
      description: The member activity events for a given member.
      example:
        email_id: email_id
        activity:
        - "{}"
        - "{}"
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
      properties:
        activity:
          description: "An array of objects, each representing a contact event. There\
            \ are multiple possible types, see the [activity schema documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#activity-schemas)."
          items:
            type: object
            x-oneOf:
            - type: object
              title: Email Opens
              description: Activity feed item representing opening an email.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: open
                  enum:
                  - open
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Title
                  description: The title of the campaign.
            - type: object
              title: Email Clicks
              description: Activity feed item representing having a link clicked by
                a contact.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: click
                  enum:
                  - click
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Title
                  description: The title of the campaign.
                link_clicked:
                  type: string
                  title: Link Clicked
                  description: The URL of the link that was clicked.
            - type: object
              title: Email Bounced
              description: Activity feed item representing an email to this contact
                bouncing.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: bounce
                  enum:
                  - bounce
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Title
                  description: The title of the campaign.
                bounce_type:
                  type: string
                  title: Bounce Type
                  description: The type of bounce.
                  enum:
                  - hard
                  - soft
                bounce_has_open_activity:
                  type: boolean
                  title: Bounce Has Open Activity
                  description: Indicates if the email associated with this bounce
                    also has open activity on the same campaign.
            - type: object
              title: List Unsubscribed
              description: Activity feed item representing this contact unsubscribing
                from a list.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: unsub
                  enum:
                  - unsub
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Text
                  description: The title of the campaign.
                is_admin_unsubscribed:
                  type: boolean
                  title: Is Admin Unsubscribed
                  description: Indicates if an admin unsubscribed a contact.
                unsubscribe_reason:
                  type: string
                  title: Unsubscribe Reason
                  description: Indicates the reason that the contact was unsubscribed.
            - type: object
              title: Email Sent
              description: Activity feed item representing having an email sent to
                the contact.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: sent
                  enum:
                  - sent
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Title
                  description: The title of the campaign.
            - type: object
              title: Email Conversation
              description: Activity feed item representing an individual reply in
                a conversation.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: conversation
                  enum:
                  - conversation
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Title
                  description: The title of the campaign.
                thread_id:
                  type: string
                  title: Thread ID
                  description: The thread's unique id of the conversation referenced
                    in this event.
                message_text:
                  type: string
                  title: Message Text
                  description: The body of the message in this conversation.
                created_by:
                  type: string
                  title: Created By
                  description: The username of the person who created this event.
                is_user:
                  type: boolean
                  title: Is User
                  description: Indicates that the message created by a user (as opposed
                    to a contact).
                has_read:
                  type: boolean
                  title: Has Read
                  description: Indicates that the message has been read.
                from_email:
                  type: string
                  title: From Email
                  description: The email of the contact who sent the reply.
                avatar_url:
                  type: string
                  title: Avatar URL
                  description: The gravatar URL of the contact who sent the reply.
            - type: object
              title: Note
              description: Activity feed item representing a note on the contact record.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: note
                  enum:
                  - note
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                updated_at_timestamp:
                  type: string
                  title: Updated At Timestamp
                  format: date-time
                  description: The updated at timestamp in ISO8601.
                note_id:
                  type: string
                  title: Note ID
                  description: The note's unique id.
                note_text:
                  type: string
                  title: Note Text
                  description: The note's text.
                created_by:
                  type: string
                  title: Created By
                  description: The person who created the note.
                avatar_url:
                  type: string
                  title: Avatar URL
                  description: The URL of the contact's profile gravatar image.
            - type: object
              title: Marketing Permission
              description: Activity feed item indicating if a marketing permission
                was added or updated.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: marketing_permission
                  enum:
                  - marketing_permission
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                marketing_permisson_text:
                  type: string
                  title: Marketing Permission Text
                  description: The text describing this marketing permission.
                updated_by:
                  type: string
                  title: Updated By
                  description: The name of the contact who updated this permission.
                marketing_permission_opted_in:
                  type: boolean
                  title: Marketing Permission Opted In
                  description: Indicates if the marketing permission is enabled or
                    not.
            - type: object
              title: Postcard Sent
              description: Activity feed item representing a time when a contact was
                sent a particular postcard.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: postcard_sent
                  enum:
                  - postcard_sent
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                outreach_id:
                  type: string
                  title: Outreach ID
                  description: The outreach's unique id.
                outreach_title:
                  type: string
                  title: Outreach Title
                  description: The title of the outreach.
            - type: object
              title: Squatter Signup
              description: Activity feed item to representing a contact signing up
                for the audience from a squatter page.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: squatter_signup
                  enum:
                  - squatter_signup
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                outreach_id:
                  type: string
                  title: Outreach ID
                  description: The outreach's unique id.
                outreach_title:
                  type: string
                  title: Outreach Title
                  description: The title of the outreach.
            - type: object
              title: Website Signup
              description: Activity feed item to representing a contact signing up
                for the contact through a website page.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: website_signup
                  enum:
                  - website_signup
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                outreach_id:
                  type: string
                  title: Outreach ID
                  description: The outreach's unique id.
                outreach_title:
                  type: string
                  title: Outreach Title
                  description: The title of the outreach.
            - type: object
              title: Landing Page Signup
              description: Activity feed item to representing a contact signing up
                for the list via a landing page.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: landing_page_signup
                  enum:
                  - landing_page_signup
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                outreach_id:
                  type: string
                  title: Outreach ID
                  description: The outreach's unique id.
                outreach_title:
                  type: string
                  title: Outreach Title
                  description: The title of the outreach.
            - type: object
              title: Ecommerce Signup
              description: Activity feed item to representing a contact signing up
                for the list via a ecommerce store.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: ecommerce_signup
                  enum:
                  - ecommerce_signup
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                store_name:
                  type: string
                  title: Store Name
                  description: The name of the store.
            - type: object
              title: Generic Signup
              description: "Activity feed item that represents a contact signing up\
                \ for the audience via a generic some generic method (specifically,\
                \ one we can't link to)."
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: generic_signup
                  enum:
                  - generic_signup
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                signup_category:
                  type: string
                  title: Signup Category
                  description: How was this user added to the list.
            - type: object
              title: Ecommerce Order
              description: Activity feed item that represents an order.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: order
                  enum:
                  - order
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                outreach_id:
                  type: string
                  title: Outreach ID
                  description: The outreach's unique id.
                outreach_type:
                  type: string
                  title: Outreach Type
                  description: The type of outreach that triggered the event.
                outreach_title:
                  type: string
                  title: Outreach Title
                  description: The title of the outreach.
                order_id:
                  type: string
                  title: Order ID
                  description: The unique order id.
                order_total:
                  type: string
                  title: Order Total
                  description: The order total formatted as a string.
                order_items:
                  type: array
                  title: Order Items
                  description: An array of items that have been ordered.
                  items:
                    type: object
                    title: E-commerce Order Line Item
                    description: Information about a specific order line.
                    properties:
                      id:
                        type: string
                        title: Order Line Item Foreign ID
                        description: A unique identifier for an order line item.
                        readOnly: true
                      product_id:
                        type: string
                        title: Order Line Item Product Foreign ID
                        description: A unique identifier for the product associated
                          with an order line item.
                      product_title:
                        type: string
                        title: Order Line Item Product Title
                        description: The name of the product for an order line item.
                        readOnly: true
                      product_variant_id:
                        type: string
                        title: Order Line Item Product Variant Foreign ID
                        description: A unique identifier for the product variant associated
                          with an order line item.
                      product_variant_title:
                        type: string
                        title: Order Line Item Product Variant Title
                        description: The name of the product variant for an order
                          line item.
                        readOnly: true
                      image_url:
                        type: string
                        title: Product Image URL
                        description: The image URL for a product.
                        readOnly: true
                      quantity:
                        type: integer
                        title: Quantity
                        description: The order line item quantity.
                      price:
                        type: number
                        title: Price
                        description: The order line item price.
                      discount:
                        type: number
                        title: Discount
                        description: The total discount amount applied to a line item.
                      _links:
                        title: Links
                        description: A list of link types and descriptions for the
                          API schema documents.
                        type: array
                        items:
                          type: object
                          title: Resource Link
                          description: This object represents a link from the resource
                            where it is found to another resource or action that may
                            be performed.
                          properties:
                            rel:
                              type: string
                              title: Rel
                              description: "As with an HTML 'rel' attribute, this\
                                \ describes the type of link."
                              readOnly: true
                            href:
                              type: string
                              title: Href
                              description: This property contains a fully-qualified
                                URL that can be called to retrieve the linked resource
                                or perform the linked action.
                              readOnly: true
                            method:
                              type: string
                              title: Method
                              description: The HTTP method that should be used when
                                accessing the URL defined in 'href'.
                              enum:
                              - GET
                              - POST
                              - PUT
                              - PATCH
                              - DELETE
                              - OPTIONS
                              - HEAD
                              readOnly: true
                            targetSchema:
                              type: string
                              title: Target Schema
                              description: "For GETs, this is a URL representing the\
                                \ schema that the response should conform to."
                              readOnly: true
                            schema:
                              type: string
                              title: Schema
                              description: "For HTTP methods that can receive bodies\
                                \ (POST and PUT), this is a URL representing the schema\
                                \ that the body should conform to."
                              readOnly: true
                        readOnly: true
                store_name:
                  type: string
                  title: Store Name
                  description: The name of the store for an order.
                order_url:
                  type: string
                  title: Order URL
                  description: The order URL.
            - type: object
              title: Contact Activity Event
              description: Activity feed item that represents a generic event.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: event
                  enum:
                  - event
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                event_name:
                  type: string
                  title: Event Name
                  description: The name of the event.
                event_properties:
                  type: array
                  title: Event Properties
                  items:
                    x-skip-validation: true
                    type: string
                  description: An arbitrary datastore containing properties for the
                    given event.
            - type: object
              title: Survey response
              description: Represents when a contact completes and submits a survey
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: survey_response
                  enum:
                  - survey_response
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                survey_id:
                  type: string
                  title: Survey ID
                  description: The survey's unique id.
                survey_title:
                  type: string
                  title: Survey Title
                  description: The title of the survey.
            - type: object
              title: SMS Bulk Sent
              description: Activity feed item representing an SMS campaign sent to
                the contact.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: sms_bulk_sent
                  enum:
                  - sms_bulk_sent
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Title
                  description: The title of the SMS campaign.
            x-discriminator:
              propertyName: activity_type
              type: string
          readOnly: true
          title: Activity
          type: array
        email_id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Member Activity Events
      type: object
      x-hidden: false
    Signup_Form:
      description: List signup form.
      example:
        list_id: 4ca5becb8d
        contents:
        - section: signup_message
          value: Signup message goes here
        - section: signup_message
          value: Signup message goes here
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        header:
          image_height: "200"
          image_link: gotothisimage.com
          image_align: center
          image_border_color: '#896d6d'
          image_url: http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png
          image_border_style: solid
          image_alt: This is an image
          text: Header Text goes here
          image_width: "800"
          image_target: _blank
          image_border_width: "2"
        signup_form_url: signup_form_url
        styles:
        - options:
          - property: background-color
            value: '#111111'
          - property: background-color
            value: '#111111'
          selector: page_background
        - options:
          - property: background-color
            value: '#111111'
          - property: background-color
            value: '#111111'
          selector: page_background
      properties:
        header:
          $ref: '#/components/schemas/Signup_form_header_options'
        contents:
          description: The signup form body content.
          items:
            $ref: '#/components/schemas/Collection_of_Content_for_List_Signup_Forms'
          title: Signup form body content
          type: array
        styles:
          description: "An array of objects, each representing an element style for\
            \ the signup form."
          items:
            $ref: '#/components/schemas/Collection_of_Element_style_for_List_Signup_Forms'
          title: Signup Form element style
          type: array
        signup_form_url:
          description: Signup form URL.
          title: Signup form URL
          type: string
        list_id:
          description: The signup form's list id.
          example: 4ca5becb8d
          readOnly: true
          title: List ID
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Signup Form
      type: object
    Member_Activity:
      description: Member activity events.
      example:
        parent_campaign: parent_campaign
        action: action
        type: type
        title: title
        url: url
        campaign_id: campaign_id
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        action:
          description: The type of action recorded for the subscriber.
          title: Action Type
          type: string
        timestamp:
          description: The date and time recorded for the action.
          format: date-time
          title: Timestamp
          type: string
        url:
          description: "For clicks, the URL the subscriber clicked on."
          title: URL
          type: string
        type:
          description: The type of campaign that was sent.
          title: Campaign Type
          type: string
        campaign_id:
          description: The web-based ID for the campaign.
          title: Campaign ID
          type: string
        title:
          description: "If set, the campaign's title."
          title: Campaign Title
          type: string
        parent_campaign:
          description: The ID of the parent campaign.
          title: Parent Campaign ID
          type: string
      title: Member Activity
      type: object
    ChimpChatter:
      description: A Chimp Chatter message
      example:
        update_time: 2017-08-04T11:09:01Z
        list_id: 2017-08-04T11:09:01+00:00
        title: 1 new subscriber to Your New Campaign!
        message: People are telling their friends about your campaign!
        type: campaigns:forward-to-friend
        url: http://dev.mailchimp.com/reports/summary?id=1
        campaign_id: 2017-08-04T11:09:01+00:00
      properties:
        title:
          example: 1 new subscriber to Your New Campaign!
          readOnly: true
          title: Title
          type: string
        message:
          example: People are telling their friends about your campaign!
          readOnly: true
          title: Message
          type: string
        type:
          description: The type of activity
          enum:
          - lists:new-subscriber
          - lists:unsubscribes
          - lists:profile-updates
          - campaigns:facebook-likes
          - campaigns:forward-to-friend
          - lists:imports
          example: campaigns:forward-to-friend
          readOnly: true
          title: Type
          type: string
        update_time:
          description: The date and time this activity was updated.
          example: 2017-08-04T11:09:01Z
          format: date-time
          readOnly: true
          title: Update Time
          type: string
        url:
          description: URL to a report that includes this activity
          example: http://dev.mailchimp.com/reports/summary?id=1
          readOnly: true
          title: URL
          type: string
        list_id:
          description: "If it exists, list ID for the associated list"
          example: 2017-08-04T11:09:01+00:00
          readOnly: true
          title: List ID
          type: string
        campaign_id:
          description: "If it exists, campaign ID for the associated campaign"
          example: 2017-08-04T11:09:01+00:00
          readOnly: true
          title: Campaign ID
          type: string
      title: ChimpChatter
      type: object
    getAllFacebookAds_200_response_facebook_ads_inner:
      allOf:
      - properties:
          id:
            description: Unique ID of an Outreach.
            title: ID
            type: string
          web_id:
            description: "The ID used in the Mailchimp web application. For example,\
              \ for a `regular` outreach, you can view this campaign in your Mailchimp\
              \ account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
            title: Web ID
            type: integer
          name:
            description: Title or name of an Outreach.
            title: Name
            type: string
          type:
            description: The type of outreach this object is.
            enum:
            - regular
            - email-touchpoint
            - plaintext
            - rss
            - reconfirm
            - variate
            - absplit
            - automation
            - facebook
            - google
            - autoresponder
            - transactional
            - page
            - website
            - social_post
            - survey
            - customer_journey
            title: Outreach Type
            type: string
          status:
            description: The status of this outreach.
            enum:
            - save
            - paused
            - schedule
            - scheduled
            - sending
            - sent
            - canceled
            - canceling
            - active
            - disconnected
            - somepaused
            - draft
            - completed
            - partialRejected
            - pending
            - rejected
            - published
            - unpublished
            title: Outreach Status
            type: string
          show_report:
            description: "Outreach report availability. Note: This property is hotly\
              \ debated in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371)\
              \ for more context."
            title: Show Report
            type: boolean
          create_time:
            description: The date and time the outreach was created in ISO 8601 format.
            format: date-time
            title: Create Time
            type: string
          start_time:
            description: The date and time the outreach was started in ISO 8601 format.
            format: date-time
            title: Start Time
            type: string
          updated_at:
            description: The date and time the outreach was last updated in ISO 8601
              format.
            format: date-time
            title: Updated At
            type: string
          canceled_at:
            description: The date and time the outreach was canceled in ISO 8601 format.
            format: date-time
            title: Canceled At
            type: string
          published_time:
            description: The date and time the outreach was (or will be) published
              in ISO 8601 format.
            format: date-time
            title: Publish Time
            type: string
          has_segment:
            description: If this outreach targets a segment of your audience.
            title: Has Segment
            type: boolean
          report_summary:
            $ref: '#/components/schemas/Report_Summary'
          recipients:
            $ref: '#/components/schemas/Recipients'
          thumbnail:
            description: The URL of the thumbnail for this outreach.
            title: Thumbnail
            type: string
        type: object
      - properties:
          email_source_name:
            title: "Ad: Email Source Name"
            type: string
          paused_at:
            description: The date and time the ad was paused in ISO 8601 format.
            format: date-time
            title: "Ad: Paused At"
            type: string
          end_time:
            description: The date and time the ad was ended in ISO 8601 format.
            format: date-time
            title: "Ad: End Time"
            type: string
          needs_attention:
            description: If the ad has a problem and needs attention.
            title: "Ad: Needs Attention"
            type: boolean
          was_canceled_by_facebook:
            title: "Ad: Was Canceled By Facebook"
            type: boolean
        type: object
      - description: A facebook ad.
        properties:
          is_connected:
            description: Check if this ad is connected to a facebook page
            type: boolean
          has_audience:
            description: Check if this ad has audience setup
            type: boolean
          has_content:
            description: Check if this ad has content
            type: boolean
          channel:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_channel'
          feedback:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_feedback'
          site:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_site'
          audience:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_audience'
          budget:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_budget'
          content:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner_allOf_content'
        type: object
      - properties:
          _links:
            description: A list of link types and descriptions for the API schema
              documents.
            items:
              $ref: '#/components/schemas/Resource_Link'
            readOnly: true
            title: Links
            type: array
        type: object
      type: object
    getAllFacebookAds_200_response:
      description: Contains an array of facebook ads.
      example:
        facebook_ads:
        - null
        - null
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
      properties:
        facebook_ads:
          items:
            $ref: '#/components/schemas/getAllFacebookAds_200_response_facebook_ads_inner'
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    Collection_of_Segments:
      description: A list of available segments.
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 1
        segments:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          options:
            match: any
            conditions:
            - "{}"
            - "{}"
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          member_count: 6
          type: saved
        - updated_at: 2000-01-23T04:56:07.000+00:00
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          options:
            match: any
            conditions:
            - "{}"
            - "{}"
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          member_count: 6
          type: saved
      properties:
        segments:
          description: "An array of objects, each representing a list segment."
          items:
            $ref: '#/components/schemas/List_7'
          title: Lists
          type: array
        list_id:
          description: The list id.
          readOnly: true
          title: List ID
          type: string
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Collection of Segments
      type: object
    getAccountExports_200_response:
      description: "An array of objects, each representing an account export."
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        exports:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          size_in_bytes: 6
          download_url: download_url
          started: 2000-01-23T04:56:07.000+00:00
          finished: 2000-01-23T04:56:07.000+00:00
          export_id: 0
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          size_in_bytes: 6
          download_url: download_url
          started: 2000-01-23T04:56:07.000+00:00
          finished: 2000-01-23T04:56:07.000+00:00
          export_id: 0
        total_items: 1
      properties:
        exports:
          description: "An array of objects, each representing an account export."
          items:
            $ref: '#/components/schemas/Account_Exports_inner'
          title: Account Exports
          type: array
        total_items:
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
          title: Item Count
          type: integer
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      type: object
    A_B_Testing_Options:
      description: "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/)\
        \ options for a campaign."
      example:
        pick_winner: opens
        wait_time: 1
        wait_units: hours
        subject_b: subject_b
        subject_a: subject_a
        split_test: subject
        from_name_a: from_name_a
        from_name_b: from_name_b
        send_time_winner: send_time_winner
        reply_email_b: reply_email_b
        reply_email_a: reply_email_a
        send_time_a: 2000-01-23T04:56:07.000+00:00
        send_time_b: 2000-01-23T04:56:07.000+00:00
        split_size: 34
      properties:
        split_test:
          description: The type of AB split to run.
          enum:
          - subject
          - from_name
          - schedule
          title: Split Test
          type: string
        pick_winner:
          description: "How we should evaluate a winner. Based on 'opens', 'clicks',\
            \ or 'manual'."
          enum:
          - opens
          - clicks
          - manual
          title: Pick Winner
          type: string
        wait_units:
          description: How unit of time for measuring the winner ('hours' or 'days').
            This cannot be changed after a campaign is sent.
          enum:
          - hours
          - days
          title: Wait Time
          type: string
        wait_time:
          description: The amount of time to wait before picking a winner. This cannot
            be changed after a campaign is sent.
          title: Wait Time
          type: integer
        split_size:
          description: The size of the split groups. Campaigns split based on 'schedule'
            are forced to have a 50/50 split. Valid split integers are between 1-50.
          maximum: 50
          minimum: 1
          title: Split Size
          type: integer
        from_name_a:
          description: "For campaigns split on 'From Name', the name for Group A."
          title: From Name Group A
          type: string
        from_name_b:
          description: "For campaigns split on 'From Name', the name for Group B."
          title: From Name Group B
          type: string
        reply_email_a:
          description: "For campaigns split on 'From Name', the reply-to address for\
            \ Group A."
          title: Reply Email Group A
          type: string
        reply_email_b:
          description: "For campaigns split on 'From Name', the reply-to address for\
            \ Group B."
          title: Reply Email Group B
          type: string
        subject_a:
          description: "For campaigns split on 'Subject Line', the subject line for\
            \ Group A."
          title: Subject Line Group A
          type: string
        subject_b:
          description: "For campaigns split on 'Subject Line', the subject line for\
            \ Group B."
          title: Subject Line Group B
          type: string
        send_time_a:
          description: The send time for Group A.
          format: date-time
          title: Send Time Group A
          type: string
        send_time_b:
          description: The send time for Group B.
          format: date-time
          title: Send Time Group B
          type: string
        send_time_winner:
          description: The send time for the winning version.
          title: Send Time Winner
          type: string
      readOnly: true
      title: A/B Testing Options
      type: object
    Contact:
      description: Information about the contact.
      example:
        email_id: email_id
        full_name: full_name
        avatar_url: avatar_url
        phone: phone
        contact_id: contact_id
        email: email
        status: Subscribed
        consents_to_one_to_one_messaging: true
      properties:
        email_id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email ID
          type: string
        contact_id:
          description: The ID of this contact.
          readOnly: true
          title: Contact ID
          type: string
        status:
          description: The contact's current status.
          enum:
          - Subscribed
          - Unsubscribed
          - Non-Subscribed
          - Cleaned
          - Archived
          readOnly: true
          title: Contact Status
          type: string
        email:
          description: The contact's email address.
          readOnly: true
          title: Contact Email
          type: string
        phone:
          description: The contact's sms phone number.
          readOnly: true
          title: Contact SMS Phone
          type: string
        full_name:
          description: The contact's full name.
          readOnly: true
          title: Full Name
          type: string
        consents_to_one_to_one_messaging:
          description: Indicates whether a contact consents to 1:1 messaging.
          readOnly: true
          title: Messaging Consent
          type: boolean
        avatar_url:
          description: URL for the contact's avatar or profile image.
          readOnly: true
          title: Avatar URL
          type: string
      readOnly: true
      title: Contact
      type: object
    Response:
      description: A single question and the response to that question.
      example:
        answer: answer
        question_type: pickOne
        query: query
        question_id: question_id
      properties:
        question_id:
          description: The unique ID for this question.
          title: Question ID
          type: string
        question_type:
          description: The type of question this is.
          enum:
          - pickOne
          - pickMany
          - range
          - text
          - email
          title: Question Type
          type: string
        query:
          description: The survey question.
          title: Question Query
          type: string
        answer:
          description: The answer to this survey question.
          title: Answer
          type: string
      title: Response
      type: object
    Tags_inner:
      example:
        name: name
        id: 2
      properties:
        id:
          description: The tag id.
          readOnly: true
          title: Tag ID
          type: integer
        name:
          description: The name of the tag
          readOnly: true
          title: Tag Name
          type: string
      type: object
    Subscriber_in_Automation_Queue_1:
      description: Information about subscribers in an Automation email queue.
      properties:
        email_address:
          description: The list member's email address.
          title: Email Address
          type: string
      required:
      - email_address
      title: Subscriber in Automation Queue
      type: object
    Gallery_Folder_1:
      description: An individual folder listed in the File Manager.
      properties:
        name:
          description: The name of the folder.
          title: Folder Name
          type: string
      required:
      - name
      title: Gallery Folder
      type: object
    Subscriber_in_Automation_Queue_2:
      description: Information about subscribers in an Automation email queue.
      example:
        email_id: email_id
        workflow_id: workflow_id
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        next_send: 2000-01-23T04:56:07.000+00:00
        id: id
        list_is_active: true
      properties:
        id:
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
          title: Email Hash
          type: string
        workflow_id:
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
          title: Workflow ID
          type: string
        email_id:
          description: A string that uniquely identifies an email in an Automation
            workflow.
          readOnly: true
          title: Automation Email ID
          type: string
        list_id:
          description: A string that uniquely identifies a list.
          readOnly: true
          title: List ID
          type: string
        list_is_active:
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
          title: List Status
          type: boolean
        email_address:
          description: The list member's email address.
          title: Email Address
          type: string
        next_send:
          description: The date and time of the next send for the workflow email in
            ISO 8601 format.
          format: date-time
          readOnly: true
          title: Next Send
          type: string
        _links:
          description: A list of link types and descriptions for the API schema documents.
          items:
            $ref: '#/components/schemas/Resource_Link'
          readOnly: true
          title: Links
          type: array
      title: Subscriber in Automation Queue
      type: object
    Interest_1:
      description: Assign subscribers to interests to group them together. Interests
        are referred to as 'group names' in the Mailchimp application.
      properties:
        name:
          description: The name of the interest. This can be shown publicly on a subscription
            form.
          title: Interest Name
          type: string
        display_order:
          description: The display order for interests.
          title: Display Order
          type: integer
      required:
      - name
      title: Interest
      type: object
    Report_Summary:
      description: High level reporting stats for an outreach.
      properties:
        opens:
          type: integer
        unique_opens:
          type: integer
        open_rate:
          type: number
        clicks:
          type: integer
        subscriber_clicks:
          type: integer
        click_rate:
          type: number
        visits:
          type: integer
        unique_visits:
          type: integer
        conversion_rate:
          type: number
        subscribes:
          type: integer
        ecommerce:
          $ref: '#/components/schemas/Report_Summary_ecommerce'
        impressions:
          type: number
        reach:
          type: integer
        engagements:
          type: integer
        total_sent:
          type: integer
      title: Report Summary
      type: object
    getReportingFacebookAds_200_response_facebook_ads_inner_allOf_audience_activity_impressions_inner:
      properties:
        date:
          type: string
        impressions:
          type: integer
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
x-doc-structure:
  resources:
    root:
      title: API Root
      description: The API root resource links to all other resources available in
        the API. Calling the root directory also returns details about the Mailchimp
        user account.
      paths:
      - /
      subResources: []
    chimp-chatter:
      title: Chimp Chatter Activity
      description: Get the latest Chimp Chatter activity from your account.
      paths:
      - /activity-feed/chimp-chatter
    authorized-apps:
      title: Authorized Apps
      description: "Manage registered, connected apps for your Mailchimp account with\
        \ the Authorized Apps endpoints."
      paths:
      - /authorized-apps
      - "/authorized-apps/{app_id}"
    automation:
      title: Automations
      description: "Mailchimp's classic automations feature lets you build a series\
        \ of emails that send to subscribers when triggered by a specific date, activity,\
        \ or event. Use the API to manage Automation workflows, emails, and queues.\
        \ Does not include Customer Journeys."
      paths:
      - /automations
      - "/automations/{workflow_id}"
      - "/automations/{workflow_id}/actions/start-all-emails"
      - "/automations/{workflow_id}/actions/pause-all-emails"
      - "/automations/{workflow_id}/actions/archive"
      subResources:
      - automation-email
      - automation-removed-subscribers
    automation-email:
      title: Emails
      description: Manage individual emails in a classic automation workflow.
      paths:
      - "/automations/{workflow_id}/emails"
      - "/automations/{workflow_id}/emails/{workflow_email_id}"
      - "/automations/{workflow_id}/emails/{workflow_email_id}/actions/pause"
      - "/automations/{workflow_id}/emails/{workflow_email_id}/actions/start"
      subResources:
      - automation-email-queue
    automation-email-queue:
      title: Queue
      description: Manage list member queues for classic automation emails.
      paths:
      - "/automations/{workflow_id}/emails/{workflow_email_id}/queue"
      - "/automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}"
      subResources: []
    automation-removed-subscribers:
      title: Removed Subscribers
      description: Remove subscribers from a classic automation workflow.
      paths:
      - "/automations/{workflow_id}/removed-subscribers"
      - "/automations/{workflow_id}/removed-subscribers/{subscriber_hash}"
      subResources: []
    batch-operations:
      title: Batch Operations
      description: Use batch operations to complete multiple operations with a single
        call.
      paths:
      - /batches
      - "/batches/{batch_id}"
    batch-webhooks:
      title: Batch Webhooks
      description: 'Manage webhooks for batch operations. '
      paths:
      - /batch-webhooks
      - "/batch-webhooks/{batch_webhook_id}"
    account-exports:
      title: Account Exports
      description: Generate a new export or download a finished export.
      paths:
      - /account-exports
      - "/account-exports/{export_id}"
    campaigns:
      title: Campaigns
      description: Campaigns are how you send emails to your Mailchimp list. Use the
        Campaigns API calls to manage campaigns in your Mailchimp account.
      paths:
      - /campaigns
      - "/campaigns/{campaign_id}"
      - "/campaigns/{campaign_id}/actions/cancel-send"
      - "/campaigns/{campaign_id}/actions/send"
      - "/campaigns/{campaign_id}/actions/schedule"
      - "/campaigns/{campaign_id}/actions/unschedule"
      - "/campaigns/{campaign_id}/actions/pause"
      - "/campaigns/{campaign_id}/actions/resume"
      - "/campaigns/{campaign_id}/actions/replicate"
      - "/campaigns/{campaign_id}/actions/test"
      - "/campaigns/{campaign_id}/actions/create-resend"
      subResources:
      - campaign-feedback
      - campaign-checklist
      - campaign-content
    campaign-feedback:
      title: Feedback
      description: "Post comments, reply to team feedback, and send test emails while\
        \ you're working together on a Mailchimp campaign."
      paths:
      - "/campaigns/{campaign_id}/feedback"
      - "/campaigns/{campaign_id}/feedback/{feedback_id}"
    campaign-checklist:
      title: Send Checklist
      description: "Review the send checklist for your campaign, and resolve any issues\
        \ before sending."
      paths:
      - "/campaigns/{campaign_id}/send-checklist"
    campaign-content:
      title: Content
      description: "Manage the HTML, plain-text, and template content for your Mailchimp\
        \ campaigns."
      paths:
      - "/campaigns/{campaign_id}/content"
    connected-sites:
      title: Connected Sites
      description: Manage sites you've connected to your Mailchimp account.
      paths:
      - /connected-sites
      - "/connected-sites/{connected_site_id}"
      - "/connected-sites/{connected_site_id}/actions/verify-script-installation"
    conversations:
      title: Conversations
      description: Conversation tracking lets you view subscribers' replies to your
        campaigns in your Mailchimp account.
      paths:
      - /conversations
      - "/conversations/{conversation_id}"
      subResources:
      - conversation-messages
    conversation-messages:
      title: Messages
      description: Manage messages in a specific campaign conversation.
      paths:
      - "/conversations/{conversation_id}/messages"
      - "/conversations/{conversation_id}/messages/{message_id}"
    customer-journeys-journeys-steps-actions:
      title: Customer Journeys
      description: Manage Customer Journey automated workflows
      paths:
      - "/customer-journeys/journeys/{journey_id}/steps/{step_id}/actions/trigger"
      subResources: []
    file-manager:
      title: File Manager
      description: "Manage files for your Mailchimp account. The File Manager is a\
        \ place to store images, documents, and other files you include or link to\
        \ in your campaigns, templates, or signup forms."
      paths: []
      subResources:
      - file-manager-folders
      - file-manager-files
    file-manager-folders:
      title: File Manager Folders
      description: Manage specific folders in the File Manager for your Mailchimp
        account.
      paths:
      - /file-manager/folders
      - "/file-manager/folders/{folder_id}"
      subResources:
      - file-manager-folders-files
    file-manager-files:
      title: File Manager Files
      description: Manage specific files in the File Manager for your Mailchimp account.
      paths:
      - /file-manager/files
      - "/file-manager/files/{file_id}"
    file-manager-folders-files:
      title: Files in Folder
      description: Manage specific files in a folder.
      paths:
      - "/file-manager/folders/{folder_id}/files"
    landing-pages:
      title: Landing Pages
      description: "Manage your Landing Pages, including publishing and unpublishing."
      paths:
      - /landing-pages
      - "/landing-pages/{page_id}"
      - "/landing-pages/{page_id}/actions/publish"
      - "/landing-pages/{page_id}/actions/unpublish"
      subResources:
      - landing-pages_content
    landing-pages_content:
      title: Content
      description: The HTML content for your Mailchimp landing pages.
      paths:
      - "/landing-pages/{page_id}/content"
    lists:
      title: Lists/Audiences
      description: "Your Mailchimp list, also known as your audience, is where you\
        \ store and manage all of your contacts."
      paths:
      - /lists
      - "/lists/{list_id}"
      subResources:
      - interest-categories
      - list-segments
      - abuse-reports
      - list-activity
      - list-clients
      - list-growth-history
      - list-imports
      - list-members
      - list-merges
      - list-webhooks
      - list-signup-forms
      - list-locations
      - lists-tags-search
      - prebuilt-segments
      - list-preview-segment
      - list-surveys
    list-members:
      title: Members
      description: "Manage members of a specific Mailchimp list, including currently\
        \ subscribed, unsubscribed, and bounced members."
      paths:
      - "/lists/{list_id}/members"
      - "/lists/{list_id}/members/{subscriber_hash}"
      - "/lists/{list_id}/members/{subscriber_hash}/actions/delete-permanent"
      subResources:
      - list-member-activity
      - list-member-activity-feed
      - list-member-goal
      - list-member-notes
      - list-member-tags
      - list-member-events
    list-merges:
      title: Merge Fields
      description: "Manage merge fields for an audience. See [Merge Field documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for more."
      paths:
      - "/lists/{list_id}/merge-fields"
      - "/lists/{list_id}/merge-fields/{merge_id}"
      subResources: []
    abuse-reports:
      title: Abuse Reports
      description: Manage abuse complaints for a specific list. An abuse complaint
        occurs when your recipient reports an email as spam in their mail program.
      paths:
      - "/lists/{list_id}/abuse-reports"
      - "/lists/{list_id}/abuse-reports/{report_id}"
    list-activity:
      title: Activity
      description: "Get recent daily, aggregated activity stats for your list. For\
        \ example, view unsubscribes, signups, total emails sent, opens, clicks, and\
        \ more, for up to 180 days."
      paths:
      - "/lists/{list_id}/activity"
    list-clients:
      title: Clients
      description: Get information about the most popular email clients for subscribers
        in a specific Mailchimp list.
      paths:
      - "/lists/{list_id}/clients"
    list-growth-history:
      title: Growth History
      description: View a summary of the month-by-month growth activity for a specific
        list.
      paths:
      - "/lists/{list_id}/growth-history"
      - "/lists/{list_id}/growth-history/{month}"
    list-webhooks:
      title: Webhooks
      description: Manage webhooks for a specific Mailchimp list.
      paths:
      - "/lists/{list_id}/webhooks"
      - "/lists/{list_id}/webhooks/{webhook_id}"
    list-surveys:
      title: Surveys
      description: Get survey data for this audience.
      paths:
      - "/lists/{list_id}/surveys"
      - "/lists/{list_id}/surveys/{survey_id}"
      - "/lists/{list_id}/surveys/{survey_id}/actions/publish"
      - "/lists/{list_id}/surveys/{survey_id}/actions/unpublish"
      - "/lists/{list_id}/surveys/{survey_id}/actions/create-email"
    interest-categories:
      title: Interest Categories
      description: "Manage interest categories for a specific list. Interest categories\
        \ organize interests, which are used to group subscribers based on their preferences.\
        \ These correspond to 'group titles' in the Mailchimp application."
      paths:
      - "/lists/{list_id}/interest-categories"
      - "/lists/{list_id}/interest-categories/{interest_category_id}"
      subResources:
      - interests
    interests:
      title: Interests
      description: Manage interests for a specific Mailchimp list. Assign subscribers
        to interests to group them together. Interests are referred to as 'group names'
        in the Mailchimp application.
      paths:
      - "/lists/{list_id}/interest-categories/{interest_category_id}/interests"
      - "/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}"
    lists-tags-search:
      title: Tag Search
      description: Search for tags on a list by name.
      paths:
      - "/lists/{list_id}/tag-search"
    list-segments:
      title: Segments
      description: Manage segments and tags for a specific Mailchimp list. A segment
        is a section of your list that includes only those subscribers who share specific
        common field information. Tags are labels you create to help organize your
        contacts.
      paths:
      - "/lists/{list_id}/segments"
      - "/lists/{list_id}/segments/{segment_id}"
      subResources:
      - list-segment-members
    list-segment-members:
      title: Segment Members
      description: Manage list members in a saved segment.
      paths:
      - "/lists/{list_id}/segments/{segment_id}/members"
      - "/lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}"
    list-member-activity:
      title: Member Activity
      description: Get details about a subscriber's recent activity. Use the new activity-feed
        endpoint to access more events for a given contact.
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/activity"
    list-member-activity-feed:
      title: Member Activity Feed
      description: Get details about a subscriber's recent activity.
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/activity-feed"
    list-member-goal:
      title: Member Goals
      description: Get information about recent goal events for a specific list member.
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/goals"
    list-member-notes:
      title: Member Notes
      description: Retrieve recent notes for a specific list member.
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/notes"
      - "/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}"
    list-member-tags:
      title: Member Tags
      description: Manage all the tags that have been assigned to a contact.
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/tags"
    list-member-events:
      title: Events
      description: 'Use the Events endpoint to collect website or in-app actions and
        trigger targeted automations. '
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/events"
    list-signup-forms:
      title: Signup Forms
      description: Manage list signup forms.
      paths:
      - "/lists/{list_id}/signup-forms"
    list-locations:
      title: Locations
      description: Get the locations (countries) that the list's subscribers have
        been tagged to based on geocoding their IP address.
      paths:
      - "/lists/{list_id}/locations"
    reports:
      title: Reports
      description: "Manage campaign reports for your Mailchimp account. All Reports\
        \ endpoints are read-only. Mailchimp's campaign and automation reports analyze\
        \ clicks, opens, subscribers' social activity, e-commerce data, and more.\
        \ Note: Campaign IDs for A/B Testing Campaigns are available through the Campaign\
        \ API Endpoint's Read method."
      paths:
      - /reports
      - "/reports/{campaign_id}"
      subResources:
      - campaign-abuse
      - campaign-advice
      - click-reports
      - domain-performance-reports
      - eepurl-reports
      - email-activity-reports
      - location-reports
      - sent-to-reports
      - sub-reports
      - unsub-reports
      - open-reports
      - campaign-ecommerce-product-activity
    campaign-abuse:
      title: Campaign Abuse
      description: Get information about campaign abuse complaints.
      paths:
      - "/reports/{campaign_id}/abuse-reports"
      - "/reports/{campaign_id}/abuse-reports/{report_id}"
    campaign-advice:
      title: Campaign Advice
      description: Get recent feedback based on a campaign's statistics.
      paths:
      - "/reports/{campaign_id}/advice"
    open-reports:
      title: Campaign Open Reports
      description: 'Get a detailed report about any emails in a specific campaign
        that were opened by the recipient. '
      paths:
      - "/reports/{campaign_id}/open-details"
      - "/reports/{campaign_id}/open-details/{subscriber_hash}"
    click-reports:
      title: Click Reports
      description: Get detailed information about links clicked in campaigns.
      paths:
      - "/reports/{campaign_id}/click-details"
      - "/reports/{campaign_id}/click-details/{link_id}"
      subResources:
      - link-clickers
    campaign-ecommerce-product-activity:
      title: Ecommerce Product Activity
      description: Ecommerce product activity report for a campaign.
      paths:
      - "/reports/{campaign_id}/ecommerce-product-activity"
    link-clickers:
      title: Click Reports Members
      description: Get information about specific subscribers who clicked on links
        in a campaign.
      paths:
      - "/reports/{campaign_id}/click-details/{link_id}/members"
      - "/reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}"
    domain-performance-reports:
      title: Domain Performance
      description: Get statistics for the top-performing domains from a campaign.
      paths:
      - "/reports/{campaign_id}/domain-performance"
    eepurl-reports:
      title: EepURL Reports
      description: "Get a summary of social activity for the campaign, tracked by\
        \ EepURL."
      paths:
      - "/reports/{campaign_id}/eepurl"
    email-activity-reports:
      title: Email Activity
      description: Get list member activity for a specific campaign.
      paths:
      - "/reports/{campaign_id}/email-activity"
      - "/reports/{campaign_id}/email-activity/{subscriber_hash}"
    location-reports:
      title: Location
      description: Get top open locations for a specific campaign.
      paths:
      - "/reports/{campaign_id}/locations"
    sent-to-reports:
      title: Sent To
      description: Get details about campaign recipients.
      paths:
      - "/reports/{campaign_id}/sent-to"
      - "/reports/{campaign_id}/sent-to/{subscriber_hash}"
    sub-reports:
      title: Sub-Reports
      description: "A list of reports for child campaigns of a specific parent campaign.\
        \ For example, use this endpoint to view Multivariate, RSS, and A/B Testing\
        \ Campaign reports."
      paths:
      - "/reports/{campaign_id}/sub-reports"
    unsub-reports:
      title: Unsubscribes
      description: Get information about list members who unsubscribed from a specific
        campaign.
      paths:
      - "/reports/{campaign_id}/unsubscribed"
      - "/reports/{campaign_id}/unsubscribed/{subscriber_hash}"
    templates:
      title: Templates
      description: 'Manage your Mailchimp templates. A template is an HTML file used
        to create the layout and basic design for a campaign. '
      paths:
      - /templates
      - "/templates/{template_id}"
      subResources:
      - template-default-content
    template-default-content:
      title: Default Content
      description: Manage the default content for a Mailchimp template.
      paths:
      - "/templates/{template_id}/default-content"
    template-folders:
      title: Template Folders
      description: Organize your templates using folders.
      paths:
      - /template-folders
      - "/template-folders/{folder_id}"
    campaign-folders:
      title: Campaign Folders
      description: Organize your campaigns using folders.
      paths:
      - /campaign-folders
      - "/campaign-folders/{folder_id}"
    ecommerce-stores:
      title: E-commerce Stores
      description: Connect your E-commerce Store to Mailchimp to take advantage of
        powerful reporting and personalization features and to learn more about your
        customers.
      paths:
      - /ecommerce/stores
      - "/ecommerce/stores/{store_id}"
      subResources:
      - ecommerce-customers
      - ecommerce-orders
      - ecommerce-products
      - ecommerce-carts
      - ecommerce-promo-rules
    ecommerce-customers:
      title: Customers
      description: "Add Customers to your Store to track their orders and to view\
        \ E-Commerce Data for your Mailchimp lists and campaigns. Each Customer is\
        \ connected to a Mailchimp list member, so adding a Customer can also add\
        \ or update a list member."
      paths:
      - "/ecommerce/stores/{store_id}/customers"
      - "/ecommerce/stores/{store_id}/customers/{customer_id}"
    ecommerce-promo-rules:
      title: Promo Rules
      description: "Promo Rules help you create promo codes for your campaigns. Promo\
        \ Rules define generic information about promo codes like expiration time,\
        \ start time, amount of discount being offered etc. For a given promo rule\
        \ you can define if it's a percentage discount or a fixed amount and if it\
        \ applies for the order as a whole or if it's per item or free shipping. You\
        \ can then create promo codes for this price rule. Promo codes contain the\
        \ actual code that is applied at checkout along with some other information.\
        \ Price Rules have one to many relationship with promo codes."
      paths:
      - "/ecommerce/stores/{store_id}/promo-rules"
      - "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}"
      subResources:
      - ecommerce-promo-codes
    ecommerce-promo-codes:
      title: Promo Codes
      description: "Promo codes can be created for a given price rule. All the promo\
        \ codes under a price rule share the generic information defined for that\
        \ rule like the amount, type, expiration date etc. Promo code defines the\
        \ more specific information about a promo code like the actual code, redemption_url,\
        \ usage_count, etc that's unique to a code. Promo Code must be defined under\
        \ a promo rule."
      paths:
      - "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes"
      - "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}"
    ecommerce-orders:
      title: Orders
      description: "Orders represent successful e-commerce transactions, and this\
        \ data can be used to provide more detailed campaign reports, track sales,\
        \ and personalize emails to your targeted consumers, and view other e-commerce\
        \ data in your Mailchimp account."
      paths:
      - /ecommerce/orders
      - "/ecommerce/stores/{store_id}/orders"
      - "/ecommerce/stores/{store_id}/orders/{order_id}"
      subResources:
      - ecommerce-order-lines
    ecommerce-order-lines:
      title: Order Lines
      description: "Each Order contains one or more Order Lines, which represent a\
        \ specific Product Variant that a Customer purchases."
      paths:
      - "/ecommerce/stores/{store_id}/orders/{order_id}/lines"
      - "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}"
    ecommerce-products:
      title: Products
      description: E-commerce items for sale in your store need to be created as Products
        so you can add the items to a Cart or an Order. Each Product requires at least
        one Product Variant.
      paths:
      - "/ecommerce/stores/{store_id}/products"
      - "/ecommerce/stores/{store_id}/products/{product_id}"
      subResources:
      - ecommerce-product-variants
      - ecommerce-product-images
    ecommerce-product-variants:
      title: Product Variants
      description: "A Product Variant represents a specific item for purchase, and\
        \ is contained within a parent Product. At least one Product Variant is required\
        \ for each Product."
      paths:
      - "/ecommerce/stores/{store_id}/products/{product_id}/variants"
      - "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}"
    ecommerce-product-images:
      title: Product Images
      description: A Product Image represents a specific product image.
      paths:
      - "/ecommerce/stores/{store_id}/products/{product_id}/images"
      - "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}"
    ecommerce-carts:
      title: Carts
      description: "Use Carts to represent unfinished e-commerce transactions. This\
        \ can be used to create an Abandoned Cart workflow, or to save a consumer’\
        s shopping cart pending a successful Order."
      paths:
      - "/ecommerce/stores/{store_id}/carts"
      - "/ecommerce/stores/{store_id}/carts/{cart_id}"
      subResources:
      - ecommerce-cart-lines
    ecommerce-cart-lines:
      title: Cart Lines
      description: "Each Cart contains one or more Cart Lines, which represent a specific\
        \ Product Variant that a Customer has added to their shopping cart."
      paths:
      - "/ecommerce/stores/{store_id}/carts/{cart_id}/lines"
      - "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}"
    facebook-ads:
      title: Facebook Ads
      description: Get information about Facebook Ads.
      paths:
      - /facebook-ads
      - "/facebook-ads/{outreach_id}"
    ping:
      title: Ping
      description: A health check endpoint for Mailchimp API 3.0.
      paths:
      - /ping
    reporting:
      title: Reporting
      description: Reporting for various campaign types.
      paths: []
      subResources:
      - reporting-facebook-ads
      - reporting-google-ads
      - reporting-landing-pages
      - reporting-postcards
      - reporting-social-posts
      - reporting-surveys
      - reporting-websites
    reporting-facebook-ads:
      title: Facebook Ads
      description: 'Get information about Facebook Ad reports. '
      paths:
      - /reporting/facebook-ads
      - "/reporting/facebook-ads/{outreach_id}"
      - "/reporting/facebook-ads/{outreach_id}/ecommerce-product-activity"
    reporting-landing-pages:
      title: Landing Pages
      description: Get information about Landing Page reports.
      paths:
      - /reporting/landing-pages
      - "/reporting/landing-pages/{outreach_id}"
    reporting-surveys:
      title: Surveys
      description: "Get an overall report for a [hosted survey](https://mailchimp.com/help/create-a-survey/)."
      paths:
      - /reporting/surveys
      - "/reporting/surveys/{outreach_id}"
      subResources:
      - reporting-surveys-questions
      - reporting-surveys-responses
    reporting-surveys-questions:
      title: Survey Questions
      description: "Get reports by question on a [hosted survey](https://mailchimp.com/help/create-a-survey/)."
      paths:
      - "/reporting/surveys/{outreach_id}/questions"
      - "/reporting/surveys/{outreach_id}/questions/{question_id}"
      subResources:
      - reporting-surveys-questions-answers
    reporting-surveys-questions-answers:
      title: Survey Question Answers
      description: "Answers to specific questions on a [hosted survey](https://mailchimp.com/help/create-a-survey/)."
      paths:
      - "/reporting/surveys/{outreach_id}/questions/{question_id}/answers"
    reporting-surveys-responses:
      title: Survey Responses
      description: "Get survey response reports for a [hosted survey](https://mailchimp.com/help/create-a-survey/)."
      paths:
      - "/reporting/surveys/{outreach_id}/responses"
      - "/reporting/surveys/{outreach_id}/responses/{response_id}"
    search-campaigns:
      title: Search Campaigns
      description: Search all of an account's campaigns for the specified query terms.
      paths:
      - /search-campaigns
    search-members:
      title: Search Members
      description: Search the account or a specific list for members that match the
        specified query terms.
      paths:
      - /search-members
    verified-domains:
      x-hidden: false
      title: Verified Domains
      description: Manage the domains on your account that can be used for sending
        email campaigns.
      paths:
      - /verified-domains
      - "/verified-domains/{domain_name}"
      - "/verified-domains/{domain_name}/actions/verify"
      subresources: []
x-original-swagger-version: "2.0"

/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CampaignTrackingOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignTrackingOptions{}

// CampaignTrackingOptions The tracking options for a campaign.
type CampaignTrackingOptions struct {
	// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`.
	Opens *bool `json:"opens,omitempty"`
	// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`.
	HtmlClicks *bool `json:"html_clicks,omitempty"`
	// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`.
	TextClicks *bool `json:"text_clicks,omitempty"`
	// Deprecated
	GoalTracking *bool `json:"goal_tracking,omitempty"`
	// Whether to enable e-commerce tracking.
	Ecomm360 *bool `json:"ecomm360,omitempty"`
	// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
	GoogleAnalytics *string `json:"google_analytics,omitempty"`
	// The custom slug for [Click Tale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
	Clicktale *string `json:"clicktale,omitempty"`
	Salesforce *SalesforceCRMTracking `json:"salesforce,omitempty"`
	Capsule *CapsuleCRMTracking1 `json:"capsule,omitempty"`
}

// NewCampaignTrackingOptions instantiates a new CampaignTrackingOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignTrackingOptions() *CampaignTrackingOptions {
	this := CampaignTrackingOptions{}
	return &this
}

// NewCampaignTrackingOptionsWithDefaults instantiates a new CampaignTrackingOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignTrackingOptionsWithDefaults() *CampaignTrackingOptions {
	this := CampaignTrackingOptions{}
	return &this
}

// GetOpens returns the Opens field value if set, zero value otherwise.
func (o *CampaignTrackingOptions) GetOpens() bool {
	if o == nil || IsNil(o.Opens) {
		var ret bool
		return ret
	}
	return *o.Opens
}

// GetOpensOk returns a tuple with the Opens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignTrackingOptions) GetOpensOk() (*bool, bool) {
	if o == nil || IsNil(o.Opens) {
		return nil, false
	}
	return o.Opens, true
}

// HasOpens returns a boolean if a field has been set.
func (o *CampaignTrackingOptions) HasOpens() bool {
	if o != nil && !IsNil(o.Opens) {
		return true
	}

	return false
}

// SetOpens gets a reference to the given bool and assigns it to the Opens field.
func (o *CampaignTrackingOptions) SetOpens(v bool) {
	o.Opens = &v
}

// GetHtmlClicks returns the HtmlClicks field value if set, zero value otherwise.
func (o *CampaignTrackingOptions) GetHtmlClicks() bool {
	if o == nil || IsNil(o.HtmlClicks) {
		var ret bool
		return ret
	}
	return *o.HtmlClicks
}

// GetHtmlClicksOk returns a tuple with the HtmlClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignTrackingOptions) GetHtmlClicksOk() (*bool, bool) {
	if o == nil || IsNil(o.HtmlClicks) {
		return nil, false
	}
	return o.HtmlClicks, true
}

// HasHtmlClicks returns a boolean if a field has been set.
func (o *CampaignTrackingOptions) HasHtmlClicks() bool {
	if o != nil && !IsNil(o.HtmlClicks) {
		return true
	}

	return false
}

// SetHtmlClicks gets a reference to the given bool and assigns it to the HtmlClicks field.
func (o *CampaignTrackingOptions) SetHtmlClicks(v bool) {
	o.HtmlClicks = &v
}

// GetTextClicks returns the TextClicks field value if set, zero value otherwise.
func (o *CampaignTrackingOptions) GetTextClicks() bool {
	if o == nil || IsNil(o.TextClicks) {
		var ret bool
		return ret
	}
	return *o.TextClicks
}

// GetTextClicksOk returns a tuple with the TextClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignTrackingOptions) GetTextClicksOk() (*bool, bool) {
	if o == nil || IsNil(o.TextClicks) {
		return nil, false
	}
	return o.TextClicks, true
}

// HasTextClicks returns a boolean if a field has been set.
func (o *CampaignTrackingOptions) HasTextClicks() bool {
	if o != nil && !IsNil(o.TextClicks) {
		return true
	}

	return false
}

// SetTextClicks gets a reference to the given bool and assigns it to the TextClicks field.
func (o *CampaignTrackingOptions) SetTextClicks(v bool) {
	o.TextClicks = &v
}

// GetGoalTracking returns the GoalTracking field value if set, zero value otherwise.
func (o *CampaignTrackingOptions) GetGoalTracking() bool {
	if o == nil || IsNil(o.GoalTracking) {
		var ret bool
		return ret
	}
	return *o.GoalTracking
}

// GetGoalTrackingOk returns a tuple with the GoalTracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignTrackingOptions) GetGoalTrackingOk() (*bool, bool) {
	if o == nil || IsNil(o.GoalTracking) {
		return nil, false
	}
	return o.GoalTracking, true
}

// HasGoalTracking returns a boolean if a field has been set.
func (o *CampaignTrackingOptions) HasGoalTracking() bool {
	if o != nil && !IsNil(o.GoalTracking) {
		return true
	}

	return false
}

// SetGoalTracking gets a reference to the given bool and assigns it to the GoalTracking field.
func (o *CampaignTrackingOptions) SetGoalTracking(v bool) {
	o.GoalTracking = &v
}

// GetEcomm360 returns the Ecomm360 field value if set, zero value otherwise.
func (o *CampaignTrackingOptions) GetEcomm360() bool {
	if o == nil || IsNil(o.Ecomm360) {
		var ret bool
		return ret
	}
	return *o.Ecomm360
}

// GetEcomm360Ok returns a tuple with the Ecomm360 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignTrackingOptions) GetEcomm360Ok() (*bool, bool) {
	if o == nil || IsNil(o.Ecomm360) {
		return nil, false
	}
	return o.Ecomm360, true
}

// HasEcomm360 returns a boolean if a field has been set.
func (o *CampaignTrackingOptions) HasEcomm360() bool {
	if o != nil && !IsNil(o.Ecomm360) {
		return true
	}

	return false
}

// SetEcomm360 gets a reference to the given bool and assigns it to the Ecomm360 field.
func (o *CampaignTrackingOptions) SetEcomm360(v bool) {
	o.Ecomm360 = &v
}

// GetGoogleAnalytics returns the GoogleAnalytics field value if set, zero value otherwise.
func (o *CampaignTrackingOptions) GetGoogleAnalytics() string {
	if o == nil || IsNil(o.GoogleAnalytics) {
		var ret string
		return ret
	}
	return *o.GoogleAnalytics
}

// GetGoogleAnalyticsOk returns a tuple with the GoogleAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignTrackingOptions) GetGoogleAnalyticsOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleAnalytics) {
		return nil, false
	}
	return o.GoogleAnalytics, true
}

// HasGoogleAnalytics returns a boolean if a field has been set.
func (o *CampaignTrackingOptions) HasGoogleAnalytics() bool {
	if o != nil && !IsNil(o.GoogleAnalytics) {
		return true
	}

	return false
}

// SetGoogleAnalytics gets a reference to the given string and assigns it to the GoogleAnalytics field.
func (o *CampaignTrackingOptions) SetGoogleAnalytics(v string) {
	o.GoogleAnalytics = &v
}

// GetClicktale returns the Clicktale field value if set, zero value otherwise.
func (o *CampaignTrackingOptions) GetClicktale() string {
	if o == nil || IsNil(o.Clicktale) {
		var ret string
		return ret
	}
	return *o.Clicktale
}

// GetClicktaleOk returns a tuple with the Clicktale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignTrackingOptions) GetClicktaleOk() (*string, bool) {
	if o == nil || IsNil(o.Clicktale) {
		return nil, false
	}
	return o.Clicktale, true
}

// HasClicktale returns a boolean if a field has been set.
func (o *CampaignTrackingOptions) HasClicktale() bool {
	if o != nil && !IsNil(o.Clicktale) {
		return true
	}

	return false
}

// SetClicktale gets a reference to the given string and assigns it to the Clicktale field.
func (o *CampaignTrackingOptions) SetClicktale(v string) {
	o.Clicktale = &v
}

// GetSalesforce returns the Salesforce field value if set, zero value otherwise.
func (o *CampaignTrackingOptions) GetSalesforce() SalesforceCRMTracking {
	if o == nil || IsNil(o.Salesforce) {
		var ret SalesforceCRMTracking
		return ret
	}
	return *o.Salesforce
}

// GetSalesforceOk returns a tuple with the Salesforce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignTrackingOptions) GetSalesforceOk() (*SalesforceCRMTracking, bool) {
	if o == nil || IsNil(o.Salesforce) {
		return nil, false
	}
	return o.Salesforce, true
}

// HasSalesforce returns a boolean if a field has been set.
func (o *CampaignTrackingOptions) HasSalesforce() bool {
	if o != nil && !IsNil(o.Salesforce) {
		return true
	}

	return false
}

// SetSalesforce gets a reference to the given SalesforceCRMTracking and assigns it to the Salesforce field.
func (o *CampaignTrackingOptions) SetSalesforce(v SalesforceCRMTracking) {
	o.Salesforce = &v
}

// GetCapsule returns the Capsule field value if set, zero value otherwise.
func (o *CampaignTrackingOptions) GetCapsule() CapsuleCRMTracking1 {
	if o == nil || IsNil(o.Capsule) {
		var ret CapsuleCRMTracking1
		return ret
	}
	return *o.Capsule
}

// GetCapsuleOk returns a tuple with the Capsule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignTrackingOptions) GetCapsuleOk() (*CapsuleCRMTracking1, bool) {
	if o == nil || IsNil(o.Capsule) {
		return nil, false
	}
	return o.Capsule, true
}

// HasCapsule returns a boolean if a field has been set.
func (o *CampaignTrackingOptions) HasCapsule() bool {
	if o != nil && !IsNil(o.Capsule) {
		return true
	}

	return false
}

// SetCapsule gets a reference to the given CapsuleCRMTracking1 and assigns it to the Capsule field.
func (o *CampaignTrackingOptions) SetCapsule(v CapsuleCRMTracking1) {
	o.Capsule = &v
}

func (o CampaignTrackingOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignTrackingOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Opens) {
		toSerialize["opens"] = o.Opens
	}
	if !IsNil(o.HtmlClicks) {
		toSerialize["html_clicks"] = o.HtmlClicks
	}
	if !IsNil(o.TextClicks) {
		toSerialize["text_clicks"] = o.TextClicks
	}
	if !IsNil(o.GoalTracking) {
		toSerialize["goal_tracking"] = o.GoalTracking
	}
	if !IsNil(o.Ecomm360) {
		toSerialize["ecomm360"] = o.Ecomm360
	}
	if !IsNil(o.GoogleAnalytics) {
		toSerialize["google_analytics"] = o.GoogleAnalytics
	}
	if !IsNil(o.Clicktale) {
		toSerialize["clicktale"] = o.Clicktale
	}
	if !IsNil(o.Salesforce) {
		toSerialize["salesforce"] = o.Salesforce
	}
	if !IsNil(o.Capsule) {
		toSerialize["capsule"] = o.Capsule
	}
	return toSerialize, nil
}

type NullableCampaignTrackingOptions struct {
	value *CampaignTrackingOptions
	isSet bool
}

func (v NullableCampaignTrackingOptions) Get() *CampaignTrackingOptions {
	return v.value
}

func (v *NullableCampaignTrackingOptions) Set(val *CampaignTrackingOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignTrackingOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignTrackingOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignTrackingOptions(val *CampaignTrackingOptions) *NullableCampaignTrackingOptions {
	return &NullableCampaignTrackingOptions{value: val, isSet: true}
}

func (v NullableCampaignTrackingOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignTrackingOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



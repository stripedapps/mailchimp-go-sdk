/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RemovedSubscribers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemovedSubscribers{}

// RemovedSubscribers A summary of the subscribers who were removed from an Automation workflow.
type RemovedSubscribers struct {
	// A string that uniquely identifies an Automation workflow.
	WorkflowId *string `json:"workflow_id,omitempty"`
	// An array of objects, each representing a subscriber who was removed from an Automation workflow.
	Subscribers []SubscriberRemovedFromAutomationWorkflow `json:"subscribers,omitempty"`
	// The total number of items matching the query regardless of pagination.
	TotalItems *int32 `json:"total_items,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewRemovedSubscribers instantiates a new RemovedSubscribers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemovedSubscribers() *RemovedSubscribers {
	this := RemovedSubscribers{}
	return &this
}

// NewRemovedSubscribersWithDefaults instantiates a new RemovedSubscribers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemovedSubscribersWithDefaults() *RemovedSubscribers {
	this := RemovedSubscribers{}
	return &this
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *RemovedSubscribers) GetWorkflowId() string {
	if o == nil || IsNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemovedSubscribers) GetWorkflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowId) {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *RemovedSubscribers) HasWorkflowId() bool {
	if o != nil && !IsNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *RemovedSubscribers) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

// GetSubscribers returns the Subscribers field value if set, zero value otherwise.
func (o *RemovedSubscribers) GetSubscribers() []SubscriberRemovedFromAutomationWorkflow {
	if o == nil || IsNil(o.Subscribers) {
		var ret []SubscriberRemovedFromAutomationWorkflow
		return ret
	}
	return o.Subscribers
}

// GetSubscribersOk returns a tuple with the Subscribers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemovedSubscribers) GetSubscribersOk() ([]SubscriberRemovedFromAutomationWorkflow, bool) {
	if o == nil || IsNil(o.Subscribers) {
		return nil, false
	}
	return o.Subscribers, true
}

// HasSubscribers returns a boolean if a field has been set.
func (o *RemovedSubscribers) HasSubscribers() bool {
	if o != nil && !IsNil(o.Subscribers) {
		return true
	}

	return false
}

// SetSubscribers gets a reference to the given []SubscriberRemovedFromAutomationWorkflow and assigns it to the Subscribers field.
func (o *RemovedSubscribers) SetSubscribers(v []SubscriberRemovedFromAutomationWorkflow) {
	o.Subscribers = v
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise.
func (o *RemovedSubscribers) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems) {
		var ret int32
		return ret
	}
	return *o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemovedSubscribers) GetTotalItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItems) {
		return nil, false
	}
	return o.TotalItems, true
}

// HasTotalItems returns a boolean if a field has been set.
func (o *RemovedSubscribers) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given int32 and assigns it to the TotalItems field.
func (o *RemovedSubscribers) SetTotalItems(v int32) {
	o.TotalItems = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *RemovedSubscribers) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemovedSubscribers) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *RemovedSubscribers) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *RemovedSubscribers) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o RemovedSubscribers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemovedSubscribers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WorkflowId) {
		toSerialize["workflow_id"] = o.WorkflowId
	}
	if !IsNil(o.Subscribers) {
		toSerialize["subscribers"] = o.Subscribers
	}
	if !IsNil(o.TotalItems) {
		toSerialize["total_items"] = o.TotalItems
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableRemovedSubscribers struct {
	value *RemovedSubscribers
	isSet bool
}

func (v NullableRemovedSubscribers) Get() *RemovedSubscribers {
	return v.value
}

func (v *NullableRemovedSubscribers) Set(val *RemovedSubscribers) {
	v.value = val
	v.isSet = true
}

func (v NullableRemovedSubscribers) IsSet() bool {
	return v.isSet
}

func (v *NullableRemovedSubscribers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemovedSubscribers(val *RemovedSubscribers) *NullableRemovedSubscribers {
	return &NullableRemovedSubscribers{value: val, isSet: true}
}

func (v NullableRemovedSubscribers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemovedSubscribers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GrowthHistory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GrowthHistory{}

// GrowthHistory A month-by-month summary of a specific list's growth activity.
type GrowthHistory struct {
	// An array of objects, each representing a monthly growth report for a list.
	History []GrowthHistory `json:"history,omitempty"`
	// The list id.
	ListId *string `json:"list_id,omitempty"`
	// The total number of items matching the query regardless of pagination.
	TotalItems *int32 `json:"total_items,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewGrowthHistory instantiates a new GrowthHistory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrowthHistory() *GrowthHistory {
	this := GrowthHistory{}
	return &this
}

// NewGrowthHistoryWithDefaults instantiates a new GrowthHistory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGrowthHistoryWithDefaults() *GrowthHistory {
	this := GrowthHistory{}
	return &this
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *GrowthHistory) GetHistory() []GrowthHistory {
	if o == nil || IsNil(o.History) {
		var ret []GrowthHistory
		return ret
	}
	return o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrowthHistory) GetHistoryOk() ([]GrowthHistory, bool) {
	if o == nil || IsNil(o.History) {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *GrowthHistory) HasHistory() bool {
	if o != nil && !IsNil(o.History) {
		return true
	}

	return false
}

// SetHistory gets a reference to the given []GrowthHistory and assigns it to the History field.
func (o *GrowthHistory) SetHistory(v []GrowthHistory) {
	o.History = v
}

// GetListId returns the ListId field value if set, zero value otherwise.
func (o *GrowthHistory) GetListId() string {
	if o == nil || IsNil(o.ListId) {
		var ret string
		return ret
	}
	return *o.ListId
}

// GetListIdOk returns a tuple with the ListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrowthHistory) GetListIdOk() (*string, bool) {
	if o == nil || IsNil(o.ListId) {
		return nil, false
	}
	return o.ListId, true
}

// HasListId returns a boolean if a field has been set.
func (o *GrowthHistory) HasListId() bool {
	if o != nil && !IsNil(o.ListId) {
		return true
	}

	return false
}

// SetListId gets a reference to the given string and assigns it to the ListId field.
func (o *GrowthHistory) SetListId(v string) {
	o.ListId = &v
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise.
func (o *GrowthHistory) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems) {
		var ret int32
		return ret
	}
	return *o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrowthHistory) GetTotalItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItems) {
		return nil, false
	}
	return o.TotalItems, true
}

// HasTotalItems returns a boolean if a field has been set.
func (o *GrowthHistory) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given int32 and assigns it to the TotalItems field.
func (o *GrowthHistory) SetTotalItems(v int32) {
	o.TotalItems = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GrowthHistory) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrowthHistory) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GrowthHistory) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *GrowthHistory) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o GrowthHistory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GrowthHistory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.History) {
		toSerialize["history"] = o.History
	}
	if !IsNil(o.ListId) {
		toSerialize["list_id"] = o.ListId
	}
	if !IsNil(o.TotalItems) {
		toSerialize["total_items"] = o.TotalItems
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGrowthHistory struct {
	value *GrowthHistory
	isSet bool
}

func (v NullableGrowthHistory) Get() *GrowthHistory {
	return v.value
}

func (v *NullableGrowthHistory) Set(val *GrowthHistory) {
	v.value = val
	v.isSet = true
}

func (v NullableGrowthHistory) IsSet() bool {
	return v.isSet
}

func (v *NullableGrowthHistory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrowthHistory(val *GrowthHistory) *NullableGrowthHistory {
	return &NullableGrowthHistory{value: val, isSet: true}
}

func (v NullableGrowthHistory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrowthHistory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



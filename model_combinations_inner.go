/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CombinationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CombinationsInner{}

// CombinationsInner struct for CombinationsInner
type CombinationsInner struct {
	// Unique ID for the combination.
	Id *string `json:"id,omitempty"`
	// The index of `variate_settings.subject_lines` used.
	SubjectLine *int32 `json:"subject_line,omitempty"`
	// The index of `variate_settings.send_times` used.
	SendTime *int32 `json:"send_time,omitempty"`
	// The index of `variate_settings.from_names` used.
	FromName *int32 `json:"from_name,omitempty"`
	// The index of `variate_settings.reply_to_addresses` used.
	ReplyTo *int32 `json:"reply_to,omitempty"`
	// The index of `variate_settings.contents` used.
	ContentDescription *int32 `json:"content_description,omitempty"`
	// The number of recipients for this combination.
	Recipients *int32 `json:"recipients,omitempty"`
}

// NewCombinationsInner instantiates a new CombinationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCombinationsInner() *CombinationsInner {
	this := CombinationsInner{}
	return &this
}

// NewCombinationsInnerWithDefaults instantiates a new CombinationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCombinationsInnerWithDefaults() *CombinationsInner {
	this := CombinationsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CombinationsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CombinationsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CombinationsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CombinationsInner) SetId(v string) {
	o.Id = &v
}

// GetSubjectLine returns the SubjectLine field value if set, zero value otherwise.
func (o *CombinationsInner) GetSubjectLine() int32 {
	if o == nil || IsNil(o.SubjectLine) {
		var ret int32
		return ret
	}
	return *o.SubjectLine
}

// GetSubjectLineOk returns a tuple with the SubjectLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CombinationsInner) GetSubjectLineOk() (*int32, bool) {
	if o == nil || IsNil(o.SubjectLine) {
		return nil, false
	}
	return o.SubjectLine, true
}

// HasSubjectLine returns a boolean if a field has been set.
func (o *CombinationsInner) HasSubjectLine() bool {
	if o != nil && !IsNil(o.SubjectLine) {
		return true
	}

	return false
}

// SetSubjectLine gets a reference to the given int32 and assigns it to the SubjectLine field.
func (o *CombinationsInner) SetSubjectLine(v int32) {
	o.SubjectLine = &v
}

// GetSendTime returns the SendTime field value if set, zero value otherwise.
func (o *CombinationsInner) GetSendTime() int32 {
	if o == nil || IsNil(o.SendTime) {
		var ret int32
		return ret
	}
	return *o.SendTime
}

// GetSendTimeOk returns a tuple with the SendTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CombinationsInner) GetSendTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.SendTime) {
		return nil, false
	}
	return o.SendTime, true
}

// HasSendTime returns a boolean if a field has been set.
func (o *CombinationsInner) HasSendTime() bool {
	if o != nil && !IsNil(o.SendTime) {
		return true
	}

	return false
}

// SetSendTime gets a reference to the given int32 and assigns it to the SendTime field.
func (o *CombinationsInner) SetSendTime(v int32) {
	o.SendTime = &v
}

// GetFromName returns the FromName field value if set, zero value otherwise.
func (o *CombinationsInner) GetFromName() int32 {
	if o == nil || IsNil(o.FromName) {
		var ret int32
		return ret
	}
	return *o.FromName
}

// GetFromNameOk returns a tuple with the FromName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CombinationsInner) GetFromNameOk() (*int32, bool) {
	if o == nil || IsNil(o.FromName) {
		return nil, false
	}
	return o.FromName, true
}

// HasFromName returns a boolean if a field has been set.
func (o *CombinationsInner) HasFromName() bool {
	if o != nil && !IsNil(o.FromName) {
		return true
	}

	return false
}

// SetFromName gets a reference to the given int32 and assigns it to the FromName field.
func (o *CombinationsInner) SetFromName(v int32) {
	o.FromName = &v
}

// GetReplyTo returns the ReplyTo field value if set, zero value otherwise.
func (o *CombinationsInner) GetReplyTo() int32 {
	if o == nil || IsNil(o.ReplyTo) {
		var ret int32
		return ret
	}
	return *o.ReplyTo
}

// GetReplyToOk returns a tuple with the ReplyTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CombinationsInner) GetReplyToOk() (*int32, bool) {
	if o == nil || IsNil(o.ReplyTo) {
		return nil, false
	}
	return o.ReplyTo, true
}

// HasReplyTo returns a boolean if a field has been set.
func (o *CombinationsInner) HasReplyTo() bool {
	if o != nil && !IsNil(o.ReplyTo) {
		return true
	}

	return false
}

// SetReplyTo gets a reference to the given int32 and assigns it to the ReplyTo field.
func (o *CombinationsInner) SetReplyTo(v int32) {
	o.ReplyTo = &v
}

// GetContentDescription returns the ContentDescription field value if set, zero value otherwise.
func (o *CombinationsInner) GetContentDescription() int32 {
	if o == nil || IsNil(o.ContentDescription) {
		var ret int32
		return ret
	}
	return *o.ContentDescription
}

// GetContentDescriptionOk returns a tuple with the ContentDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CombinationsInner) GetContentDescriptionOk() (*int32, bool) {
	if o == nil || IsNil(o.ContentDescription) {
		return nil, false
	}
	return o.ContentDescription, true
}

// HasContentDescription returns a boolean if a field has been set.
func (o *CombinationsInner) HasContentDescription() bool {
	if o != nil && !IsNil(o.ContentDescription) {
		return true
	}

	return false
}

// SetContentDescription gets a reference to the given int32 and assigns it to the ContentDescription field.
func (o *CombinationsInner) SetContentDescription(v int32) {
	o.ContentDescription = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *CombinationsInner) GetRecipients() int32 {
	if o == nil || IsNil(o.Recipients) {
		var ret int32
		return ret
	}
	return *o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CombinationsInner) GetRecipientsOk() (*int32, bool) {
	if o == nil || IsNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *CombinationsInner) HasRecipients() bool {
	if o != nil && !IsNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given int32 and assigns it to the Recipients field.
func (o *CombinationsInner) SetRecipients(v int32) {
	o.Recipients = &v
}

func (o CombinationsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CombinationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SubjectLine) {
		toSerialize["subject_line"] = o.SubjectLine
	}
	if !IsNil(o.SendTime) {
		toSerialize["send_time"] = o.SendTime
	}
	if !IsNil(o.FromName) {
		toSerialize["from_name"] = o.FromName
	}
	if !IsNil(o.ReplyTo) {
		toSerialize["reply_to"] = o.ReplyTo
	}
	if !IsNil(o.ContentDescription) {
		toSerialize["content_description"] = o.ContentDescription
	}
	if !IsNil(o.Recipients) {
		toSerialize["recipients"] = o.Recipients
	}
	return toSerialize, nil
}

type NullableCombinationsInner struct {
	value *CombinationsInner
	isSet bool
}

func (v NullableCombinationsInner) Get() *CombinationsInner {
	return v.value
}

func (v *NullableCombinationsInner) Set(val *CombinationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCombinationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCombinationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCombinationsInner(val *CombinationsInner) *NullableCombinationsInner {
	return &NullableCombinationsInner{value: val, isSet: true}
}

func (v NullableCombinationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCombinationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



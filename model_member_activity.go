/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the MemberActivity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberActivity{}

// MemberActivity Member activity events.
type MemberActivity struct {
	// The type of action recorded for the subscriber.
	Action *string `json:"action,omitempty"`
	// The date and time recorded for the action.
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// For clicks, the URL the subscriber clicked on.
	Url *string `json:"url,omitempty"`
	// The type of campaign that was sent.
	Type *string `json:"type,omitempty"`
	// The web-based ID for the campaign.
	CampaignId *string `json:"campaign_id,omitempty"`
	// If set, the campaign's title.
	Title *string `json:"title,omitempty"`
	// The ID of the parent campaign.
	ParentCampaign *string `json:"parent_campaign,omitempty"`
}

// NewMemberActivity instantiates a new MemberActivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberActivity() *MemberActivity {
	this := MemberActivity{}
	return &this
}

// NewMemberActivityWithDefaults instantiates a new MemberActivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberActivityWithDefaults() *MemberActivity {
	this := MemberActivity{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *MemberActivity) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *MemberActivity) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *MemberActivity) SetAction(v string) {
	o.Action = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *MemberActivity) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *MemberActivity) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *MemberActivity) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *MemberActivity) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *MemberActivity) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *MemberActivity) SetUrl(v string) {
	o.Url = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MemberActivity) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MemberActivity) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MemberActivity) SetType(v string) {
	o.Type = &v
}

// GetCampaignId returns the CampaignId field value if set, zero value otherwise.
func (o *MemberActivity) GetCampaignId() string {
	if o == nil || IsNil(o.CampaignId) {
		var ret string
		return ret
	}
	return *o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity) GetCampaignIdOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignId) {
		return nil, false
	}
	return o.CampaignId, true
}

// HasCampaignId returns a boolean if a field has been set.
func (o *MemberActivity) HasCampaignId() bool {
	if o != nil && !IsNil(o.CampaignId) {
		return true
	}

	return false
}

// SetCampaignId gets a reference to the given string and assigns it to the CampaignId field.
func (o *MemberActivity) SetCampaignId(v string) {
	o.CampaignId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *MemberActivity) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MemberActivity) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MemberActivity) SetTitle(v string) {
	o.Title = &v
}

// GetParentCampaign returns the ParentCampaign field value if set, zero value otherwise.
func (o *MemberActivity) GetParentCampaign() string {
	if o == nil || IsNil(o.ParentCampaign) {
		var ret string
		return ret
	}
	return *o.ParentCampaign
}

// GetParentCampaignOk returns a tuple with the ParentCampaign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity) GetParentCampaignOk() (*string, bool) {
	if o == nil || IsNil(o.ParentCampaign) {
		return nil, false
	}
	return o.ParentCampaign, true
}

// HasParentCampaign returns a boolean if a field has been set.
func (o *MemberActivity) HasParentCampaign() bool {
	if o != nil && !IsNil(o.ParentCampaign) {
		return true
	}

	return false
}

// SetParentCampaign gets a reference to the given string and assigns it to the ParentCampaign field.
func (o *MemberActivity) SetParentCampaign(v string) {
	o.ParentCampaign = &v
}

func (o MemberActivity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberActivity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.CampaignId) {
		toSerialize["campaign_id"] = o.CampaignId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ParentCampaign) {
		toSerialize["parent_campaign"] = o.ParentCampaign
	}
	return toSerialize, nil
}

type NullableMemberActivity struct {
	value *MemberActivity
	isSet bool
}

func (v NullableMemberActivity) Get() *MemberActivity {
	return v.value
}

func (v *NullableMemberActivity) Set(val *MemberActivity) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberActivity(val *MemberActivity) *NullableMemberActivity {
	return &NullableMemberActivity{value: val, isSet: true}
}

func (v NullableMemberActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



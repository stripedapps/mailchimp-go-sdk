/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SalesforceCRMTracking type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesforceCRMTracking{}

// SalesforceCRMTracking Deprecated
type SalesforceCRMTracking struct {
	// Create a campaign in a connected Salesforce account.
	Campaign *bool `json:"campaign,omitempty"`
	// Update contact notes for a campaign based on a subscriber's email address.
	Notes *bool `json:"notes,omitempty"`
}

// NewSalesforceCRMTracking instantiates a new SalesforceCRMTracking object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesforceCRMTracking() *SalesforceCRMTracking {
	this := SalesforceCRMTracking{}
	return &this
}

// NewSalesforceCRMTrackingWithDefaults instantiates a new SalesforceCRMTracking object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesforceCRMTrackingWithDefaults() *SalesforceCRMTracking {
	this := SalesforceCRMTracking{}
	return &this
}

// GetCampaign returns the Campaign field value if set, zero value otherwise.
func (o *SalesforceCRMTracking) GetCampaign() bool {
	if o == nil || IsNil(o.Campaign) {
		var ret bool
		return ret
	}
	return *o.Campaign
}

// GetCampaignOk returns a tuple with the Campaign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesforceCRMTracking) GetCampaignOk() (*bool, bool) {
	if o == nil || IsNil(o.Campaign) {
		return nil, false
	}
	return o.Campaign, true
}

// HasCampaign returns a boolean if a field has been set.
func (o *SalesforceCRMTracking) HasCampaign() bool {
	if o != nil && !IsNil(o.Campaign) {
		return true
	}

	return false
}

// SetCampaign gets a reference to the given bool and assigns it to the Campaign field.
func (o *SalesforceCRMTracking) SetCampaign(v bool) {
	o.Campaign = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *SalesforceCRMTracking) GetNotes() bool {
	if o == nil || IsNil(o.Notes) {
		var ret bool
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesforceCRMTracking) GetNotesOk() (*bool, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *SalesforceCRMTracking) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given bool and assigns it to the Notes field.
func (o *SalesforceCRMTracking) SetNotes(v bool) {
	o.Notes = &v
}

func (o SalesforceCRMTracking) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesforceCRMTracking) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Campaign) {
		toSerialize["campaign"] = o.Campaign
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	return toSerialize, nil
}

type NullableSalesforceCRMTracking struct {
	value *SalesforceCRMTracking
	isSet bool
}

func (v NullableSalesforceCRMTracking) Get() *SalesforceCRMTracking {
	return v.value
}

func (v *NullableSalesforceCRMTracking) Set(val *SalesforceCRMTracking) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesforceCRMTracking) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesforceCRMTracking) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesforceCRMTracking(val *SalesforceCRMTracking) *NullableSalesforceCRMTracking {
	return &NullableSalesforceCRMTracking{value: val, isSet: true}
}

func (v NullableSalesforceCRMTracking) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesforceCRMTracking) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



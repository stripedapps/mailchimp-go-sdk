/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MergeFieldOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MergeFieldOptions{}

// MergeFieldOptions Extra options for some merge field types.
type MergeFieldOptions struct {
	// In an address field, the default country code if none supplied.
	DefaultCountry *int32 `json:"default_country,omitempty"`
	// In a phone field, the phone number type: US or International.
	PhoneFormat *string `json:"phone_format,omitempty"`
	// In a date or birthday field, the format of the date.
	DateFormat *string `json:"date_format,omitempty"`
	// In a radio or dropdown non-group field, the available options for contacts to pick from.
	Choices []string `json:"choices,omitempty"`
	// In a text field, the default length of the text field.
	Size *int32 `json:"size,omitempty"`
}

// NewMergeFieldOptions instantiates a new MergeFieldOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergeFieldOptions() *MergeFieldOptions {
	this := MergeFieldOptions{}
	return &this
}

// NewMergeFieldOptionsWithDefaults instantiates a new MergeFieldOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergeFieldOptionsWithDefaults() *MergeFieldOptions {
	this := MergeFieldOptions{}
	return &this
}

// GetDefaultCountry returns the DefaultCountry field value if set, zero value otherwise.
func (o *MergeFieldOptions) GetDefaultCountry() int32 {
	if o == nil || IsNil(o.DefaultCountry) {
		var ret int32
		return ret
	}
	return *o.DefaultCountry
}

// GetDefaultCountryOk returns a tuple with the DefaultCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeFieldOptions) GetDefaultCountryOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultCountry) {
		return nil, false
	}
	return o.DefaultCountry, true
}

// HasDefaultCountry returns a boolean if a field has been set.
func (o *MergeFieldOptions) HasDefaultCountry() bool {
	if o != nil && !IsNil(o.DefaultCountry) {
		return true
	}

	return false
}

// SetDefaultCountry gets a reference to the given int32 and assigns it to the DefaultCountry field.
func (o *MergeFieldOptions) SetDefaultCountry(v int32) {
	o.DefaultCountry = &v
}

// GetPhoneFormat returns the PhoneFormat field value if set, zero value otherwise.
func (o *MergeFieldOptions) GetPhoneFormat() string {
	if o == nil || IsNil(o.PhoneFormat) {
		var ret string
		return ret
	}
	return *o.PhoneFormat
}

// GetPhoneFormatOk returns a tuple with the PhoneFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeFieldOptions) GetPhoneFormatOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneFormat) {
		return nil, false
	}
	return o.PhoneFormat, true
}

// HasPhoneFormat returns a boolean if a field has been set.
func (o *MergeFieldOptions) HasPhoneFormat() bool {
	if o != nil && !IsNil(o.PhoneFormat) {
		return true
	}

	return false
}

// SetPhoneFormat gets a reference to the given string and assigns it to the PhoneFormat field.
func (o *MergeFieldOptions) SetPhoneFormat(v string) {
	o.PhoneFormat = &v
}

// GetDateFormat returns the DateFormat field value if set, zero value otherwise.
func (o *MergeFieldOptions) GetDateFormat() string {
	if o == nil || IsNil(o.DateFormat) {
		var ret string
		return ret
	}
	return *o.DateFormat
}

// GetDateFormatOk returns a tuple with the DateFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeFieldOptions) GetDateFormatOk() (*string, bool) {
	if o == nil || IsNil(o.DateFormat) {
		return nil, false
	}
	return o.DateFormat, true
}

// HasDateFormat returns a boolean if a field has been set.
func (o *MergeFieldOptions) HasDateFormat() bool {
	if o != nil && !IsNil(o.DateFormat) {
		return true
	}

	return false
}

// SetDateFormat gets a reference to the given string and assigns it to the DateFormat field.
func (o *MergeFieldOptions) SetDateFormat(v string) {
	o.DateFormat = &v
}

// GetChoices returns the Choices field value if set, zero value otherwise.
func (o *MergeFieldOptions) GetChoices() []string {
	if o == nil || IsNil(o.Choices) {
		var ret []string
		return ret
	}
	return o.Choices
}

// GetChoicesOk returns a tuple with the Choices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeFieldOptions) GetChoicesOk() ([]string, bool) {
	if o == nil || IsNil(o.Choices) {
		return nil, false
	}
	return o.Choices, true
}

// HasChoices returns a boolean if a field has been set.
func (o *MergeFieldOptions) HasChoices() bool {
	if o != nil && !IsNil(o.Choices) {
		return true
	}

	return false
}

// SetChoices gets a reference to the given []string and assigns it to the Choices field.
func (o *MergeFieldOptions) SetChoices(v []string) {
	o.Choices = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *MergeFieldOptions) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeFieldOptions) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *MergeFieldOptions) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *MergeFieldOptions) SetSize(v int32) {
	o.Size = &v
}

func (o MergeFieldOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MergeFieldOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultCountry) {
		toSerialize["default_country"] = o.DefaultCountry
	}
	if !IsNil(o.PhoneFormat) {
		toSerialize["phone_format"] = o.PhoneFormat
	}
	if !IsNil(o.DateFormat) {
		toSerialize["date_format"] = o.DateFormat
	}
	if !IsNil(o.Choices) {
		toSerialize["choices"] = o.Choices
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	return toSerialize, nil
}

type NullableMergeFieldOptions struct {
	value *MergeFieldOptions
	isSet bool
}

func (v NullableMergeFieldOptions) Get() *MergeFieldOptions {
	return v.value
}

func (v *NullableMergeFieldOptions) Set(val *MergeFieldOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableMergeFieldOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableMergeFieldOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergeFieldOptions(val *MergeFieldOptions) *NullableMergeFieldOptions {
	return &NullableMergeFieldOptions{value: val, isSet: true}
}

func (v NullableMergeFieldOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergeFieldOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource{}

// GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource struct for GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource
type GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource struct {
	// Email source name
	Name *string `json:"name,omitempty"`
	// Type of the email source
	Type *string `json:"type,omitempty"`
	// Is the source reference a segment
	IsSegment *bool `json:"is_segment,omitempty"`
	// Segment type if this source is tied to a segment
	SegmentType *string `json:"segment_type,omitempty"`
	// Associated list name to the source
	ListName *string `json:"list_name,omitempty"`
}

// NewGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource instantiates a new GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource() *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource {
	this := GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource{}
	return &this
}

// NewGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSourceWithDefaults instantiates a new GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSourceWithDefaults() *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource {
	this := GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) SetType(v string) {
	o.Type = &v
}

// GetIsSegment returns the IsSegment field value if set, zero value otherwise.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) GetIsSegment() bool {
	if o == nil || IsNil(o.IsSegment) {
		var ret bool
		return ret
	}
	return *o.IsSegment
}

// GetIsSegmentOk returns a tuple with the IsSegment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) GetIsSegmentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSegment) {
		return nil, false
	}
	return o.IsSegment, true
}

// HasIsSegment returns a boolean if a field has been set.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) HasIsSegment() bool {
	if o != nil && !IsNil(o.IsSegment) {
		return true
	}

	return false
}

// SetIsSegment gets a reference to the given bool and assigns it to the IsSegment field.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) SetIsSegment(v bool) {
	o.IsSegment = &v
}

// GetSegmentType returns the SegmentType field value if set, zero value otherwise.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) GetSegmentType() string {
	if o == nil || IsNil(o.SegmentType) {
		var ret string
		return ret
	}
	return *o.SegmentType
}

// GetSegmentTypeOk returns a tuple with the SegmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) GetSegmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SegmentType) {
		return nil, false
	}
	return o.SegmentType, true
}

// HasSegmentType returns a boolean if a field has been set.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) HasSegmentType() bool {
	if o != nil && !IsNil(o.SegmentType) {
		return true
	}

	return false
}

// SetSegmentType gets a reference to the given string and assigns it to the SegmentType field.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) SetSegmentType(v string) {
	o.SegmentType = &v
}

// GetListName returns the ListName field value if set, zero value otherwise.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) GetListName() string {
	if o == nil || IsNil(o.ListName) {
		var ret string
		return ret
	}
	return *o.ListName
}

// GetListNameOk returns a tuple with the ListName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) GetListNameOk() (*string, bool) {
	if o == nil || IsNil(o.ListName) {
		return nil, false
	}
	return o.ListName, true
}

// HasListName returns a boolean if a field has been set.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) HasListName() bool {
	if o != nil && !IsNil(o.ListName) {
		return true
	}

	return false
}

// SetListName gets a reference to the given string and assigns it to the ListName field.
func (o *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) SetListName(v string) {
	o.ListName = &v
}

func (o GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.IsSegment) {
		toSerialize["is_segment"] = o.IsSegment
	}
	if !IsNil(o.SegmentType) {
		toSerialize["segment_type"] = o.SegmentType
	}
	if !IsNil(o.ListName) {
		toSerialize["list_name"] = o.ListName
	}
	return toSerialize, nil
}

type NullableGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource struct {
	value *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource
	isSet bool
}

func (v NullableGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) Get() *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource {
	return v.value
}

func (v *NullableGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) Set(val *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource(val *GetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) *NullableGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource {
	return &NullableGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource{value: val, isSet: true}
}

func (v NullableGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllFacebookAds200ResponseFacebookAdsInnerAllOfAudienceEmailSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResourceLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceLink{}

// ResourceLink This object represents a link from the resource where it is found to another resource or action that may be performed.
type ResourceLink struct {
	// As with an HTML 'rel' attribute, this describes the type of link.
	Rel *string `json:"rel,omitempty"`
	// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
	Href *string `json:"href,omitempty"`
	// The HTTP method that should be used when accessing the URL defined in 'href'.
	Method *string `json:"method,omitempty"`
	// For GETs, this is a URL representing the schema that the response should conform to.
	TargetSchema *string `json:"targetSchema,omitempty"`
	// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
	Schema *string `json:"schema,omitempty"`
}

// NewResourceLink instantiates a new ResourceLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceLink() *ResourceLink {
	this := ResourceLink{}
	return &this
}

// NewResourceLinkWithDefaults instantiates a new ResourceLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceLinkWithDefaults() *ResourceLink {
	this := ResourceLink{}
	return &this
}

// GetRel returns the Rel field value if set, zero value otherwise.
func (o *ResourceLink) GetRel() string {
	if o == nil || IsNil(o.Rel) {
		var ret string
		return ret
	}
	return *o.Rel
}

// GetRelOk returns a tuple with the Rel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLink) GetRelOk() (*string, bool) {
	if o == nil || IsNil(o.Rel) {
		return nil, false
	}
	return o.Rel, true
}

// HasRel returns a boolean if a field has been set.
func (o *ResourceLink) HasRel() bool {
	if o != nil && !IsNil(o.Rel) {
		return true
	}

	return false
}

// SetRel gets a reference to the given string and assigns it to the Rel field.
func (o *ResourceLink) SetRel(v string) {
	o.Rel = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ResourceLink) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLink) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ResourceLink) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ResourceLink) SetHref(v string) {
	o.Href = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *ResourceLink) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLink) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *ResourceLink) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *ResourceLink) SetMethod(v string) {
	o.Method = &v
}

// GetTargetSchema returns the TargetSchema field value if set, zero value otherwise.
func (o *ResourceLink) GetTargetSchema() string {
	if o == nil || IsNil(o.TargetSchema) {
		var ret string
		return ret
	}
	return *o.TargetSchema
}

// GetTargetSchemaOk returns a tuple with the TargetSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLink) GetTargetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.TargetSchema) {
		return nil, false
	}
	return o.TargetSchema, true
}

// HasTargetSchema returns a boolean if a field has been set.
func (o *ResourceLink) HasTargetSchema() bool {
	if o != nil && !IsNil(o.TargetSchema) {
		return true
	}

	return false
}

// SetTargetSchema gets a reference to the given string and assigns it to the TargetSchema field.
func (o *ResourceLink) SetTargetSchema(v string) {
	o.TargetSchema = &v
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *ResourceLink) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLink) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *ResourceLink) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *ResourceLink) SetSchema(v string) {
	o.Schema = &v
}

func (o ResourceLink) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rel) {
		toSerialize["rel"] = o.Rel
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.TargetSchema) {
		toSerialize["targetSchema"] = o.TargetSchema
	}
	if !IsNil(o.Schema) {
		toSerialize["schema"] = o.Schema
	}
	return toSerialize, nil
}

type NullableResourceLink struct {
	value *ResourceLink
	isSet bool
}

func (v NullableResourceLink) Get() *ResourceLink {
	return v.value
}

func (v *NullableResourceLink) Set(val *ResourceLink) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceLink) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceLink(val *ResourceLink) *NullableResourceLink {
	return &NullableResourceLink{value: val, isSet: true}
}

func (v NullableResourceLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



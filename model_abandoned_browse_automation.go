/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AbandonedBrowseAutomation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AbandonedBrowseAutomation{}

// AbandonedBrowseAutomation abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.
type AbandonedBrowseAutomation struct {
	// Whether this store supports the abandonedBrowse automation.
	IsSupported *bool `json:"is_supported,omitempty"`
	// Unique ID of automation parent campaign.
	Id *string `json:"id,omitempty"`
	// Status of the abandonedBrowse automation.
	Status *string `json:"status,omitempty"`
}

// NewAbandonedBrowseAutomation instantiates a new AbandonedBrowseAutomation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbandonedBrowseAutomation() *AbandonedBrowseAutomation {
	this := AbandonedBrowseAutomation{}
	return &this
}

// NewAbandonedBrowseAutomationWithDefaults instantiates a new AbandonedBrowseAutomation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbandonedBrowseAutomationWithDefaults() *AbandonedBrowseAutomation {
	this := AbandonedBrowseAutomation{}
	return &this
}

// GetIsSupported returns the IsSupported field value if set, zero value otherwise.
func (o *AbandonedBrowseAutomation) GetIsSupported() bool {
	if o == nil || IsNil(o.IsSupported) {
		var ret bool
		return ret
	}
	return *o.IsSupported
}

// GetIsSupportedOk returns a tuple with the IsSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbandonedBrowseAutomation) GetIsSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSupported) {
		return nil, false
	}
	return o.IsSupported, true
}

// HasIsSupported returns a boolean if a field has been set.
func (o *AbandonedBrowseAutomation) HasIsSupported() bool {
	if o != nil && !IsNil(o.IsSupported) {
		return true
	}

	return false
}

// SetIsSupported gets a reference to the given bool and assigns it to the IsSupported field.
func (o *AbandonedBrowseAutomation) SetIsSupported(v bool) {
	o.IsSupported = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AbandonedBrowseAutomation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbandonedBrowseAutomation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AbandonedBrowseAutomation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AbandonedBrowseAutomation) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AbandonedBrowseAutomation) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbandonedBrowseAutomation) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AbandonedBrowseAutomation) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AbandonedBrowseAutomation) SetStatus(v string) {
	o.Status = &v
}

func (o AbandonedBrowseAutomation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AbandonedBrowseAutomation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsSupported) {
		toSerialize["is_supported"] = o.IsSupported
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableAbandonedBrowseAutomation struct {
	value *AbandonedBrowseAutomation
	isSet bool
}

func (v NullableAbandonedBrowseAutomation) Get() *AbandonedBrowseAutomation {
	return v.value
}

func (v *NullableAbandonedBrowseAutomation) Set(val *AbandonedBrowseAutomation) {
	v.value = val
	v.isSet = true
}

func (v NullableAbandonedBrowseAutomation) IsSet() bool {
	return v.isSet
}

func (v *NullableAbandonedBrowseAutomation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbandonedBrowseAutomation(val *AbandonedBrowseAutomation) *NullableAbandonedBrowseAutomation {
	return &NullableAbandonedBrowseAutomation{value: val, isSet: true}
}

func (v NullableAbandonedBrowseAutomation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbandonedBrowseAutomation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



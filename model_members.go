/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Members type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Members{}

// Members Members found for given search term
type Members struct {
	ExactMatches *ExactMatches `json:"exact_matches,omitempty"`
	FullSearch *PartialMatches `json:"full_search,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewMembers instantiates a new Members object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembers() *Members {
	this := Members{}
	return &this
}

// NewMembersWithDefaults instantiates a new Members object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembersWithDefaults() *Members {
	this := Members{}
	return &this
}

// GetExactMatches returns the ExactMatches field value if set, zero value otherwise.
func (o *Members) GetExactMatches() ExactMatches {
	if o == nil || IsNil(o.ExactMatches) {
		var ret ExactMatches
		return ret
	}
	return *o.ExactMatches
}

// GetExactMatchesOk returns a tuple with the ExactMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Members) GetExactMatchesOk() (*ExactMatches, bool) {
	if o == nil || IsNil(o.ExactMatches) {
		return nil, false
	}
	return o.ExactMatches, true
}

// HasExactMatches returns a boolean if a field has been set.
func (o *Members) HasExactMatches() bool {
	if o != nil && !IsNil(o.ExactMatches) {
		return true
	}

	return false
}

// SetExactMatches gets a reference to the given ExactMatches and assigns it to the ExactMatches field.
func (o *Members) SetExactMatches(v ExactMatches) {
	o.ExactMatches = &v
}

// GetFullSearch returns the FullSearch field value if set, zero value otherwise.
func (o *Members) GetFullSearch() PartialMatches {
	if o == nil || IsNil(o.FullSearch) {
		var ret PartialMatches
		return ret
	}
	return *o.FullSearch
}

// GetFullSearchOk returns a tuple with the FullSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Members) GetFullSearchOk() (*PartialMatches, bool) {
	if o == nil || IsNil(o.FullSearch) {
		return nil, false
	}
	return o.FullSearch, true
}

// HasFullSearch returns a boolean if a field has been set.
func (o *Members) HasFullSearch() bool {
	if o != nil && !IsNil(o.FullSearch) {
		return true
	}

	return false
}

// SetFullSearch gets a reference to the given PartialMatches and assigns it to the FullSearch field.
func (o *Members) SetFullSearch(v PartialMatches) {
	o.FullSearch = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Members) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Members) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Members) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *Members) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o Members) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Members) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExactMatches) {
		toSerialize["exact_matches"] = o.ExactMatches
	}
	if !IsNil(o.FullSearch) {
		toSerialize["full_search"] = o.FullSearch
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableMembers struct {
	value *Members
	isSet bool
}

func (v NullableMembers) Get() *Members {
	return v.value
}

func (v *NullableMembers) Set(val *Members) {
	v.value = val
	v.isSet = true
}

func (v NullableMembers) IsSet() bool {
	return v.isSet
}

func (v *NullableMembers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembers(val *Members) *NullableMembers {
	return &NullableMembers{value: val, isSet: true}
}

func (v NullableMembers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



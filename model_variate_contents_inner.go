/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VariateContentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariateContentsInner{}

// VariateContentsInner struct for VariateContentsInner
type VariateContentsInner struct {
	// Label used to identify the content option.
	ContentLabel *string `json:"content_label,omitempty"`
	// The plain-text portion of the campaign. If left unspecified, we'll generate this automatically.
	PlainText *string `json:"plain_text,omitempty"`
	// The raw HTML for the campaign.
	Html *string `json:"html,omitempty"`
}

// NewVariateContentsInner instantiates a new VariateContentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariateContentsInner() *VariateContentsInner {
	this := VariateContentsInner{}
	return &this
}

// NewVariateContentsInnerWithDefaults instantiates a new VariateContentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariateContentsInnerWithDefaults() *VariateContentsInner {
	this := VariateContentsInner{}
	return &this
}

// GetContentLabel returns the ContentLabel field value if set, zero value otherwise.
func (o *VariateContentsInner) GetContentLabel() string {
	if o == nil || IsNil(o.ContentLabel) {
		var ret string
		return ret
	}
	return *o.ContentLabel
}

// GetContentLabelOk returns a tuple with the ContentLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariateContentsInner) GetContentLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ContentLabel) {
		return nil, false
	}
	return o.ContentLabel, true
}

// HasContentLabel returns a boolean if a field has been set.
func (o *VariateContentsInner) HasContentLabel() bool {
	if o != nil && !IsNil(o.ContentLabel) {
		return true
	}

	return false
}

// SetContentLabel gets a reference to the given string and assigns it to the ContentLabel field.
func (o *VariateContentsInner) SetContentLabel(v string) {
	o.ContentLabel = &v
}

// GetPlainText returns the PlainText field value if set, zero value otherwise.
func (o *VariateContentsInner) GetPlainText() string {
	if o == nil || IsNil(o.PlainText) {
		var ret string
		return ret
	}
	return *o.PlainText
}

// GetPlainTextOk returns a tuple with the PlainText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariateContentsInner) GetPlainTextOk() (*string, bool) {
	if o == nil || IsNil(o.PlainText) {
		return nil, false
	}
	return o.PlainText, true
}

// HasPlainText returns a boolean if a field has been set.
func (o *VariateContentsInner) HasPlainText() bool {
	if o != nil && !IsNil(o.PlainText) {
		return true
	}

	return false
}

// SetPlainText gets a reference to the given string and assigns it to the PlainText field.
func (o *VariateContentsInner) SetPlainText(v string) {
	o.PlainText = &v
}

// GetHtml returns the Html field value if set, zero value otherwise.
func (o *VariateContentsInner) GetHtml() string {
	if o == nil || IsNil(o.Html) {
		var ret string
		return ret
	}
	return *o.Html
}

// GetHtmlOk returns a tuple with the Html field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariateContentsInner) GetHtmlOk() (*string, bool) {
	if o == nil || IsNil(o.Html) {
		return nil, false
	}
	return o.Html, true
}

// HasHtml returns a boolean if a field has been set.
func (o *VariateContentsInner) HasHtml() bool {
	if o != nil && !IsNil(o.Html) {
		return true
	}

	return false
}

// SetHtml gets a reference to the given string and assigns it to the Html field.
func (o *VariateContentsInner) SetHtml(v string) {
	o.Html = &v
}

func (o VariateContentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariateContentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContentLabel) {
		toSerialize["content_label"] = o.ContentLabel
	}
	if !IsNil(o.PlainText) {
		toSerialize["plain_text"] = o.PlainText
	}
	if !IsNil(o.Html) {
		toSerialize["html"] = o.Html
	}
	return toSerialize, nil
}

type NullableVariateContentsInner struct {
	value *VariateContentsInner
	isSet bool
}

func (v NullableVariateContentsInner) Get() *VariateContentsInner {
	return v.value
}

func (v *NullableVariateContentsInner) Set(val *VariateContentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVariateContentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVariateContentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariateContentsInner(val *VariateContentsInner) *NullableVariateContentsInner {
	return &NullableVariateContentsInner{value: val, isSet: true}
}

func (v NullableVariateContentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariateContentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



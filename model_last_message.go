/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the LastMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LastMessage{}

// LastMessage The most recent message in the conversation.
type LastMessage struct {
	// A label representing the sender of this message.
	FromLabel *string `json:"from_label,omitempty"`
	// A label representing the email of the sender of this message.
	FromEmail *string `json:"from_email,omitempty"`
	// The subject of this message.
	Subject *string `json:"subject,omitempty"`
	// The plain-text content of the message.
	Message *string `json:"message,omitempty"`
	// Whether this message has been marked as read.
	Read *bool `json:"read,omitempty"`
	// The date and time the message was either sent or received in ISO 8601 format.
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

// NewLastMessage instantiates a new LastMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLastMessage() *LastMessage {
	this := LastMessage{}
	return &this
}

// NewLastMessageWithDefaults instantiates a new LastMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLastMessageWithDefaults() *LastMessage {
	this := LastMessage{}
	return &this
}

// GetFromLabel returns the FromLabel field value if set, zero value otherwise.
func (o *LastMessage) GetFromLabel() string {
	if o == nil || IsNil(o.FromLabel) {
		var ret string
		return ret
	}
	return *o.FromLabel
}

// GetFromLabelOk returns a tuple with the FromLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastMessage) GetFromLabelOk() (*string, bool) {
	if o == nil || IsNil(o.FromLabel) {
		return nil, false
	}
	return o.FromLabel, true
}

// HasFromLabel returns a boolean if a field has been set.
func (o *LastMessage) HasFromLabel() bool {
	if o != nil && !IsNil(o.FromLabel) {
		return true
	}

	return false
}

// SetFromLabel gets a reference to the given string and assigns it to the FromLabel field.
func (o *LastMessage) SetFromLabel(v string) {
	o.FromLabel = &v
}

// GetFromEmail returns the FromEmail field value if set, zero value otherwise.
func (o *LastMessage) GetFromEmail() string {
	if o == nil || IsNil(o.FromEmail) {
		var ret string
		return ret
	}
	return *o.FromEmail
}

// GetFromEmailOk returns a tuple with the FromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastMessage) GetFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.FromEmail) {
		return nil, false
	}
	return o.FromEmail, true
}

// HasFromEmail returns a boolean if a field has been set.
func (o *LastMessage) HasFromEmail() bool {
	if o != nil && !IsNil(o.FromEmail) {
		return true
	}

	return false
}

// SetFromEmail gets a reference to the given string and assigns it to the FromEmail field.
func (o *LastMessage) SetFromEmail(v string) {
	o.FromEmail = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *LastMessage) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastMessage) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *LastMessage) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *LastMessage) SetSubject(v string) {
	o.Subject = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *LastMessage) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastMessage) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *LastMessage) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *LastMessage) SetMessage(v string) {
	o.Message = &v
}

// GetRead returns the Read field value if set, zero value otherwise.
func (o *LastMessage) GetRead() bool {
	if o == nil || IsNil(o.Read) {
		var ret bool
		return ret
	}
	return *o.Read
}

// GetReadOk returns a tuple with the Read field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastMessage) GetReadOk() (*bool, bool) {
	if o == nil || IsNil(o.Read) {
		return nil, false
	}
	return o.Read, true
}

// HasRead returns a boolean if a field has been set.
func (o *LastMessage) HasRead() bool {
	if o != nil && !IsNil(o.Read) {
		return true
	}

	return false
}

// SetRead gets a reference to the given bool and assigns it to the Read field.
func (o *LastMessage) SetRead(v bool) {
	o.Read = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *LastMessage) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastMessage) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *LastMessage) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *LastMessage) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

func (o LastMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LastMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromLabel) {
		toSerialize["from_label"] = o.FromLabel
	}
	if !IsNil(o.FromEmail) {
		toSerialize["from_email"] = o.FromEmail
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Read) {
		toSerialize["read"] = o.Read
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableLastMessage struct {
	value *LastMessage
	isSet bool
}

func (v NullableLastMessage) Get() *LastMessage {
	return v.value
}

func (v *NullableLastMessage) Set(val *LastMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableLastMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableLastMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLastMessage(val *LastMessage) *NullableLastMessage {
	return &NullableLastMessage{value: val, isSet: true}
}

func (v NullableLastMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLastMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



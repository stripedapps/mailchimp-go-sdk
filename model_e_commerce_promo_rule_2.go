/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ECommercePromoRule2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ECommercePromoRule2{}

// ECommercePromoRule2 Information about an Ecommerce Store's specific Promo Rule.
type ECommercePromoRule2 struct {
	// The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.
	Title *string `json:"title,omitempty"`
	// The description of a promotion restricted to UTF-8 characters with max length 255.
	Description *string `json:"description,omitempty"`
	// The date and time when the promotion is in effect in ISO 8601 format.
	StartsAt *time.Time `json:"starts_at,omitempty"`
	// The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format.
	EndsAt *string `json:"ends_at,omitempty"`
	// The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.
	Amount *float32 `json:"amount,omitempty"`
	// Type of discount. For free shipping set type to fixed.
	Type *string `json:"type,omitempty"`
	// The target that the discount applies to.
	Target *string `json:"target,omitempty"`
	// Whether the promo rule is currently enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// The date and time the promotion was created in ISO 8601 format.
	CreatedAtForeign *time.Time `json:"created_at_foreign,omitempty"`
	// The date and time the promotion was updated in ISO 8601 format.
	UpdatedAtForeign *time.Time `json:"updated_at_foreign,omitempty"`
}

// NewECommercePromoRule2 instantiates a new ECommercePromoRule2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewECommercePromoRule2() *ECommercePromoRule2 {
	this := ECommercePromoRule2{}
	return &this
}

// NewECommercePromoRule2WithDefaults instantiates a new ECommercePromoRule2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewECommercePromoRule2WithDefaults() *ECommercePromoRule2 {
	this := ECommercePromoRule2{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ECommercePromoRule2) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoRule2) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ECommercePromoRule2) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ECommercePromoRule2) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ECommercePromoRule2) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoRule2) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ECommercePromoRule2) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ECommercePromoRule2) SetDescription(v string) {
	o.Description = &v
}

// GetStartsAt returns the StartsAt field value if set, zero value otherwise.
func (o *ECommercePromoRule2) GetStartsAt() time.Time {
	if o == nil || IsNil(o.StartsAt) {
		var ret time.Time
		return ret
	}
	return *o.StartsAt
}

// GetStartsAtOk returns a tuple with the StartsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoRule2) GetStartsAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartsAt) {
		return nil, false
	}
	return o.StartsAt, true
}

// HasStartsAt returns a boolean if a field has been set.
func (o *ECommercePromoRule2) HasStartsAt() bool {
	if o != nil && !IsNil(o.StartsAt) {
		return true
	}

	return false
}

// SetStartsAt gets a reference to the given time.Time and assigns it to the StartsAt field.
func (o *ECommercePromoRule2) SetStartsAt(v time.Time) {
	o.StartsAt = &v
}

// GetEndsAt returns the EndsAt field value if set, zero value otherwise.
func (o *ECommercePromoRule2) GetEndsAt() string {
	if o == nil || IsNil(o.EndsAt) {
		var ret string
		return ret
	}
	return *o.EndsAt
}

// GetEndsAtOk returns a tuple with the EndsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoRule2) GetEndsAtOk() (*string, bool) {
	if o == nil || IsNil(o.EndsAt) {
		return nil, false
	}
	return o.EndsAt, true
}

// HasEndsAt returns a boolean if a field has been set.
func (o *ECommercePromoRule2) HasEndsAt() bool {
	if o != nil && !IsNil(o.EndsAt) {
		return true
	}

	return false
}

// SetEndsAt gets a reference to the given string and assigns it to the EndsAt field.
func (o *ECommercePromoRule2) SetEndsAt(v string) {
	o.EndsAt = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ECommercePromoRule2) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoRule2) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ECommercePromoRule2) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *ECommercePromoRule2) SetAmount(v float32) {
	o.Amount = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ECommercePromoRule2) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoRule2) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ECommercePromoRule2) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ECommercePromoRule2) SetType(v string) {
	o.Type = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *ECommercePromoRule2) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoRule2) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *ECommercePromoRule2) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *ECommercePromoRule2) SetTarget(v string) {
	o.Target = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ECommercePromoRule2) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoRule2) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ECommercePromoRule2) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ECommercePromoRule2) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetCreatedAtForeign returns the CreatedAtForeign field value if set, zero value otherwise.
func (o *ECommercePromoRule2) GetCreatedAtForeign() time.Time {
	if o == nil || IsNil(o.CreatedAtForeign) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtForeign
}

// GetCreatedAtForeignOk returns a tuple with the CreatedAtForeign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoRule2) GetCreatedAtForeignOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAtForeign) {
		return nil, false
	}
	return o.CreatedAtForeign, true
}

// HasCreatedAtForeign returns a boolean if a field has been set.
func (o *ECommercePromoRule2) HasCreatedAtForeign() bool {
	if o != nil && !IsNil(o.CreatedAtForeign) {
		return true
	}

	return false
}

// SetCreatedAtForeign gets a reference to the given time.Time and assigns it to the CreatedAtForeign field.
func (o *ECommercePromoRule2) SetCreatedAtForeign(v time.Time) {
	o.CreatedAtForeign = &v
}

// GetUpdatedAtForeign returns the UpdatedAtForeign field value if set, zero value otherwise.
func (o *ECommercePromoRule2) GetUpdatedAtForeign() time.Time {
	if o == nil || IsNil(o.UpdatedAtForeign) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtForeign
}

// GetUpdatedAtForeignOk returns a tuple with the UpdatedAtForeign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommercePromoRule2) GetUpdatedAtForeignOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAtForeign) {
		return nil, false
	}
	return o.UpdatedAtForeign, true
}

// HasUpdatedAtForeign returns a boolean if a field has been set.
func (o *ECommercePromoRule2) HasUpdatedAtForeign() bool {
	if o != nil && !IsNil(o.UpdatedAtForeign) {
		return true
	}

	return false
}

// SetUpdatedAtForeign gets a reference to the given time.Time and assigns it to the UpdatedAtForeign field.
func (o *ECommercePromoRule2) SetUpdatedAtForeign(v time.Time) {
	o.UpdatedAtForeign = &v
}

func (o ECommercePromoRule2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ECommercePromoRule2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.StartsAt) {
		toSerialize["starts_at"] = o.StartsAt
	}
	if !IsNil(o.EndsAt) {
		toSerialize["ends_at"] = o.EndsAt
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.CreatedAtForeign) {
		toSerialize["created_at_foreign"] = o.CreatedAtForeign
	}
	if !IsNil(o.UpdatedAtForeign) {
		toSerialize["updated_at_foreign"] = o.UpdatedAtForeign
	}
	return toSerialize, nil
}

type NullableECommercePromoRule2 struct {
	value *ECommercePromoRule2
	isSet bool
}

func (v NullableECommercePromoRule2) Get() *ECommercePromoRule2 {
	return v.value
}

func (v *NullableECommercePromoRule2) Set(val *ECommercePromoRule2) {
	v.value = val
	v.isSet = true
}

func (v NullableECommercePromoRule2) IsSet() bool {
	return v.isSet
}

func (v *NullableECommercePromoRule2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECommercePromoRule2(val *ECommercePromoRule2) *NullableECommercePromoRule2 {
	return &NullableECommercePromoRule2{value: val, isSet: true}
}

func (v NullableECommercePromoRule2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECommercePromoRule2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



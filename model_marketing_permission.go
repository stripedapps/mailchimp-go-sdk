/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MarketingPermission type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketingPermission{}

// MarketingPermission A single marketing permission a subscriber has either opted-in to or opted-out of.
type MarketingPermission struct {
	// The id for the marketing permission on the list
	MarketingPermissionId *string `json:"marketing_permission_id,omitempty"`
	// The text of the marketing permission.
	Text *string `json:"text,omitempty"`
	// If the subscriber has opted-in to the marketing permission.
	Enabled *bool `json:"enabled,omitempty"`
}

// NewMarketingPermission instantiates a new MarketingPermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketingPermission() *MarketingPermission {
	this := MarketingPermission{}
	return &this
}

// NewMarketingPermissionWithDefaults instantiates a new MarketingPermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketingPermissionWithDefaults() *MarketingPermission {
	this := MarketingPermission{}
	return &this
}

// GetMarketingPermissionId returns the MarketingPermissionId field value if set, zero value otherwise.
func (o *MarketingPermission) GetMarketingPermissionId() string {
	if o == nil || IsNil(o.MarketingPermissionId) {
		var ret string
		return ret
	}
	return *o.MarketingPermissionId
}

// GetMarketingPermissionIdOk returns a tuple with the MarketingPermissionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingPermission) GetMarketingPermissionIdOk() (*string, bool) {
	if o == nil || IsNil(o.MarketingPermissionId) {
		return nil, false
	}
	return o.MarketingPermissionId, true
}

// HasMarketingPermissionId returns a boolean if a field has been set.
func (o *MarketingPermission) HasMarketingPermissionId() bool {
	if o != nil && !IsNil(o.MarketingPermissionId) {
		return true
	}

	return false
}

// SetMarketingPermissionId gets a reference to the given string and assigns it to the MarketingPermissionId field.
func (o *MarketingPermission) SetMarketingPermissionId(v string) {
	o.MarketingPermissionId = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *MarketingPermission) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingPermission) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *MarketingPermission) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *MarketingPermission) SetText(v string) {
	o.Text = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *MarketingPermission) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingPermission) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MarketingPermission) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *MarketingPermission) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o MarketingPermission) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketingPermission) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MarketingPermissionId) {
		toSerialize["marketing_permission_id"] = o.MarketingPermissionId
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableMarketingPermission struct {
	value *MarketingPermission
	isSet bool
}

func (v NullableMarketingPermission) Get() *MarketingPermission {
	return v.value
}

func (v *NullableMarketingPermission) Set(val *MarketingPermission) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketingPermission) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketingPermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketingPermission(val *MarketingPermission) *NullableMarketingPermission {
	return &NullableMarketingPermission{value: val, isSet: true}
}

func (v NullableMarketingPermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketingPermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AutomationCampaignSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutomationCampaignSettings{}

// AutomationCampaignSettings The settings for the Automation workflow.
type AutomationCampaignSettings struct {
	// The title of the Automation.
	Title *string `json:"title,omitempty"`
	// The 'from' name for the Automation (not an email address).
	FromName *string `json:"from_name,omitempty"`
	// The reply-to email address for the Automation.
	ReplyTo *string `json:"reply_to,omitempty"`
	// Whether to use Mailchimp Conversation feature to manage replies
	UseConversation *bool `json:"use_conversation,omitempty"`
	// The Automation's custom 'To' name, typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
	ToName *string `json:"to_name,omitempty"`
	// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the Automation. Defaults to `true`.
	Authenticate *bool `json:"authenticate,omitempty"`
	// Whether to automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the Automation.
	AutoFooter *bool `json:"auto_footer,omitempty"`
	// Whether to automatically inline the CSS included with the Automation content.
	InlineCss *bool `json:"inline_css,omitempty"`
}

// NewAutomationCampaignSettings instantiates a new AutomationCampaignSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutomationCampaignSettings() *AutomationCampaignSettings {
	this := AutomationCampaignSettings{}
	return &this
}

// NewAutomationCampaignSettingsWithDefaults instantiates a new AutomationCampaignSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutomationCampaignSettingsWithDefaults() *AutomationCampaignSettings {
	this := AutomationCampaignSettings{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AutomationCampaignSettings) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationCampaignSettings) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AutomationCampaignSettings) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AutomationCampaignSettings) SetTitle(v string) {
	o.Title = &v
}

// GetFromName returns the FromName field value if set, zero value otherwise.
func (o *AutomationCampaignSettings) GetFromName() string {
	if o == nil || IsNil(o.FromName) {
		var ret string
		return ret
	}
	return *o.FromName
}

// GetFromNameOk returns a tuple with the FromName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationCampaignSettings) GetFromNameOk() (*string, bool) {
	if o == nil || IsNil(o.FromName) {
		return nil, false
	}
	return o.FromName, true
}

// HasFromName returns a boolean if a field has been set.
func (o *AutomationCampaignSettings) HasFromName() bool {
	if o != nil && !IsNil(o.FromName) {
		return true
	}

	return false
}

// SetFromName gets a reference to the given string and assigns it to the FromName field.
func (o *AutomationCampaignSettings) SetFromName(v string) {
	o.FromName = &v
}

// GetReplyTo returns the ReplyTo field value if set, zero value otherwise.
func (o *AutomationCampaignSettings) GetReplyTo() string {
	if o == nil || IsNil(o.ReplyTo) {
		var ret string
		return ret
	}
	return *o.ReplyTo
}

// GetReplyToOk returns a tuple with the ReplyTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationCampaignSettings) GetReplyToOk() (*string, bool) {
	if o == nil || IsNil(o.ReplyTo) {
		return nil, false
	}
	return o.ReplyTo, true
}

// HasReplyTo returns a boolean if a field has been set.
func (o *AutomationCampaignSettings) HasReplyTo() bool {
	if o != nil && !IsNil(o.ReplyTo) {
		return true
	}

	return false
}

// SetReplyTo gets a reference to the given string and assigns it to the ReplyTo field.
func (o *AutomationCampaignSettings) SetReplyTo(v string) {
	o.ReplyTo = &v
}

// GetUseConversation returns the UseConversation field value if set, zero value otherwise.
func (o *AutomationCampaignSettings) GetUseConversation() bool {
	if o == nil || IsNil(o.UseConversation) {
		var ret bool
		return ret
	}
	return *o.UseConversation
}

// GetUseConversationOk returns a tuple with the UseConversation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationCampaignSettings) GetUseConversationOk() (*bool, bool) {
	if o == nil || IsNil(o.UseConversation) {
		return nil, false
	}
	return o.UseConversation, true
}

// HasUseConversation returns a boolean if a field has been set.
func (o *AutomationCampaignSettings) HasUseConversation() bool {
	if o != nil && !IsNil(o.UseConversation) {
		return true
	}

	return false
}

// SetUseConversation gets a reference to the given bool and assigns it to the UseConversation field.
func (o *AutomationCampaignSettings) SetUseConversation(v bool) {
	o.UseConversation = &v
}

// GetToName returns the ToName field value if set, zero value otherwise.
func (o *AutomationCampaignSettings) GetToName() string {
	if o == nil || IsNil(o.ToName) {
		var ret string
		return ret
	}
	return *o.ToName
}

// GetToNameOk returns a tuple with the ToName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationCampaignSettings) GetToNameOk() (*string, bool) {
	if o == nil || IsNil(o.ToName) {
		return nil, false
	}
	return o.ToName, true
}

// HasToName returns a boolean if a field has been set.
func (o *AutomationCampaignSettings) HasToName() bool {
	if o != nil && !IsNil(o.ToName) {
		return true
	}

	return false
}

// SetToName gets a reference to the given string and assigns it to the ToName field.
func (o *AutomationCampaignSettings) SetToName(v string) {
	o.ToName = &v
}

// GetAuthenticate returns the Authenticate field value if set, zero value otherwise.
func (o *AutomationCampaignSettings) GetAuthenticate() bool {
	if o == nil || IsNil(o.Authenticate) {
		var ret bool
		return ret
	}
	return *o.Authenticate
}

// GetAuthenticateOk returns a tuple with the Authenticate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationCampaignSettings) GetAuthenticateOk() (*bool, bool) {
	if o == nil || IsNil(o.Authenticate) {
		return nil, false
	}
	return o.Authenticate, true
}

// HasAuthenticate returns a boolean if a field has been set.
func (o *AutomationCampaignSettings) HasAuthenticate() bool {
	if o != nil && !IsNil(o.Authenticate) {
		return true
	}

	return false
}

// SetAuthenticate gets a reference to the given bool and assigns it to the Authenticate field.
func (o *AutomationCampaignSettings) SetAuthenticate(v bool) {
	o.Authenticate = &v
}

// GetAutoFooter returns the AutoFooter field value if set, zero value otherwise.
func (o *AutomationCampaignSettings) GetAutoFooter() bool {
	if o == nil || IsNil(o.AutoFooter) {
		var ret bool
		return ret
	}
	return *o.AutoFooter
}

// GetAutoFooterOk returns a tuple with the AutoFooter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationCampaignSettings) GetAutoFooterOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoFooter) {
		return nil, false
	}
	return o.AutoFooter, true
}

// HasAutoFooter returns a boolean if a field has been set.
func (o *AutomationCampaignSettings) HasAutoFooter() bool {
	if o != nil && !IsNil(o.AutoFooter) {
		return true
	}

	return false
}

// SetAutoFooter gets a reference to the given bool and assigns it to the AutoFooter field.
func (o *AutomationCampaignSettings) SetAutoFooter(v bool) {
	o.AutoFooter = &v
}

// GetInlineCss returns the InlineCss field value if set, zero value otherwise.
func (o *AutomationCampaignSettings) GetInlineCss() bool {
	if o == nil || IsNil(o.InlineCss) {
		var ret bool
		return ret
	}
	return *o.InlineCss
}

// GetInlineCssOk returns a tuple with the InlineCss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationCampaignSettings) GetInlineCssOk() (*bool, bool) {
	if o == nil || IsNil(o.InlineCss) {
		return nil, false
	}
	return o.InlineCss, true
}

// HasInlineCss returns a boolean if a field has been set.
func (o *AutomationCampaignSettings) HasInlineCss() bool {
	if o != nil && !IsNil(o.InlineCss) {
		return true
	}

	return false
}

// SetInlineCss gets a reference to the given bool and assigns it to the InlineCss field.
func (o *AutomationCampaignSettings) SetInlineCss(v bool) {
	o.InlineCss = &v
}

func (o AutomationCampaignSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutomationCampaignSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.FromName) {
		toSerialize["from_name"] = o.FromName
	}
	if !IsNil(o.ReplyTo) {
		toSerialize["reply_to"] = o.ReplyTo
	}
	if !IsNil(o.UseConversation) {
		toSerialize["use_conversation"] = o.UseConversation
	}
	if !IsNil(o.ToName) {
		toSerialize["to_name"] = o.ToName
	}
	if !IsNil(o.Authenticate) {
		toSerialize["authenticate"] = o.Authenticate
	}
	if !IsNil(o.AutoFooter) {
		toSerialize["auto_footer"] = o.AutoFooter
	}
	if !IsNil(o.InlineCss) {
		toSerialize["inline_css"] = o.InlineCss
	}
	return toSerialize, nil
}

type NullableAutomationCampaignSettings struct {
	value *AutomationCampaignSettings
	isSet bool
}

func (v NullableAutomationCampaignSettings) Get() *AutomationCampaignSettings {
	return v.value
}

func (v *NullableAutomationCampaignSettings) Set(val *AutomationCampaignSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomationCampaignSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomationCampaignSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomationCampaignSettings(val *AutomationCampaignSettings) *NullableAutomationCampaignSettings {
	return &NullableAutomationCampaignSettings{value: val, isSet: true}
}

func (v NullableAutomationCampaignSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomationCampaignSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



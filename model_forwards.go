/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Forwards type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Forwards{}

// Forwards An object describing the forwards and forward activity for the campaign.
type Forwards struct {
	// How many times the campaign has been forwarded.
	ForwardsCount *int32 `json:"forwards_count,omitempty"`
	// How many times the forwarded campaign has been opened.
	ForwardsOpens *int32 `json:"forwards_opens,omitempty"`
}

// NewForwards instantiates a new Forwards object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForwards() *Forwards {
	this := Forwards{}
	return &this
}

// NewForwardsWithDefaults instantiates a new Forwards object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForwardsWithDefaults() *Forwards {
	this := Forwards{}
	return &this
}

// GetForwardsCount returns the ForwardsCount field value if set, zero value otherwise.
func (o *Forwards) GetForwardsCount() int32 {
	if o == nil || IsNil(o.ForwardsCount) {
		var ret int32
		return ret
	}
	return *o.ForwardsCount
}

// GetForwardsCountOk returns a tuple with the ForwardsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Forwards) GetForwardsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ForwardsCount) {
		return nil, false
	}
	return o.ForwardsCount, true
}

// HasForwardsCount returns a boolean if a field has been set.
func (o *Forwards) HasForwardsCount() bool {
	if o != nil && !IsNil(o.ForwardsCount) {
		return true
	}

	return false
}

// SetForwardsCount gets a reference to the given int32 and assigns it to the ForwardsCount field.
func (o *Forwards) SetForwardsCount(v int32) {
	o.ForwardsCount = &v
}

// GetForwardsOpens returns the ForwardsOpens field value if set, zero value otherwise.
func (o *Forwards) GetForwardsOpens() int32 {
	if o == nil || IsNil(o.ForwardsOpens) {
		var ret int32
		return ret
	}
	return *o.ForwardsOpens
}

// GetForwardsOpensOk returns a tuple with the ForwardsOpens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Forwards) GetForwardsOpensOk() (*int32, bool) {
	if o == nil || IsNil(o.ForwardsOpens) {
		return nil, false
	}
	return o.ForwardsOpens, true
}

// HasForwardsOpens returns a boolean if a field has been set.
func (o *Forwards) HasForwardsOpens() bool {
	if o != nil && !IsNil(o.ForwardsOpens) {
		return true
	}

	return false
}

// SetForwardsOpens gets a reference to the given int32 and assigns it to the ForwardsOpens field.
func (o *Forwards) SetForwardsOpens(v int32) {
	o.ForwardsOpens = &v
}

func (o Forwards) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Forwards) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ForwardsCount) {
		toSerialize["forwards_count"] = o.ForwardsCount
	}
	if !IsNil(o.ForwardsOpens) {
		toSerialize["forwards_opens"] = o.ForwardsOpens
	}
	return toSerialize, nil
}

type NullableForwards struct {
	value *Forwards
	isSet bool
}

func (v NullableForwards) Get() *Forwards {
	return v.value
}

func (v *NullableForwards) Set(val *Forwards) {
	v.value = val
	v.isSet = true
}

func (v NullableForwards) IsSet() bool {
	return v.isSet
}

func (v *NullableForwards) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForwards(val *Forwards) *NullableForwards {
	return &NullableForwards{value: val, isSet: true}
}

func (v NullableForwards) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForwards) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SubscriberLists type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriberLists{}

// SubscriberLists A collection of subscriber lists for this account. Lists contain subscribers who have opted-in to receive correspondence from you or your organization.
type SubscriberLists struct {
	// An array of objects, each representing a list.
	Lists []SubscriberList `json:"lists"`
	// The total number of items matching the query regardless of pagination.
	TotalItems *int32 `json:"total_items,omitempty"`
	Constraints *CollectionAuthorization `json:"constraints,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewSubscriberLists instantiates a new SubscriberLists object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriberLists(lists []SubscriberList) *SubscriberLists {
	this := SubscriberLists{}
	this.Lists = lists
	return &this
}

// NewSubscriberListsWithDefaults instantiates a new SubscriberLists object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriberListsWithDefaults() *SubscriberLists {
	this := SubscriberLists{}
	return &this
}

// GetLists returns the Lists field value
func (o *SubscriberLists) GetLists() []SubscriberList {
	if o == nil {
		var ret []SubscriberList
		return ret
	}

	return o.Lists
}

// GetListsOk returns a tuple with the Lists field value
// and a boolean to check if the value has been set.
func (o *SubscriberLists) GetListsOk() ([]SubscriberList, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lists, true
}

// SetLists sets field value
func (o *SubscriberLists) SetLists(v []SubscriberList) {
	o.Lists = v
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise.
func (o *SubscriberLists) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems) {
		var ret int32
		return ret
	}
	return *o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberLists) GetTotalItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItems) {
		return nil, false
	}
	return o.TotalItems, true
}

// HasTotalItems returns a boolean if a field has been set.
func (o *SubscriberLists) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given int32 and assigns it to the TotalItems field.
func (o *SubscriberLists) SetTotalItems(v int32) {
	o.TotalItems = &v
}

// GetConstraints returns the Constraints field value if set, zero value otherwise.
func (o *SubscriberLists) GetConstraints() CollectionAuthorization {
	if o == nil || IsNil(o.Constraints) {
		var ret CollectionAuthorization
		return ret
	}
	return *o.Constraints
}

// GetConstraintsOk returns a tuple with the Constraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberLists) GetConstraintsOk() (*CollectionAuthorization, bool) {
	if o == nil || IsNil(o.Constraints) {
		return nil, false
	}
	return o.Constraints, true
}

// HasConstraints returns a boolean if a field has been set.
func (o *SubscriberLists) HasConstraints() bool {
	if o != nil && !IsNil(o.Constraints) {
		return true
	}

	return false
}

// SetConstraints gets a reference to the given CollectionAuthorization and assigns it to the Constraints field.
func (o *SubscriberLists) SetConstraints(v CollectionAuthorization) {
	o.Constraints = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *SubscriberLists) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberLists) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SubscriberLists) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *SubscriberLists) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o SubscriberLists) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriberLists) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lists"] = o.Lists
	if !IsNil(o.TotalItems) {
		toSerialize["total_items"] = o.TotalItems
	}
	if !IsNil(o.Constraints) {
		toSerialize["constraints"] = o.Constraints
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableSubscriberLists struct {
	value *SubscriberLists
	isSet bool
}

func (v NullableSubscriberLists) Get() *SubscriberLists {
	return v.value
}

func (v *NullableSubscriberLists) Set(val *SubscriberLists) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriberLists) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriberLists) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriberLists(val *SubscriberLists) *NullableSubscriberLists {
	return &NullableSubscriberLists{value: val, isSet: true}
}

func (v NullableSubscriberLists) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriberLists) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



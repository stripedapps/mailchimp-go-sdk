/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CampaignSettings1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignSettings1{}

// CampaignSettings1 Settings for the campaign including the email subject, from name, and from email address.
type CampaignSettings1 struct {
	// The subject line for the campaign.
	SubjectLine *string `json:"subject_line,omitempty"`
	// The preview text for the campaign.
	PreviewText *string `json:"preview_text,omitempty"`
	// The title of the Automation.
	Title *string `json:"title,omitempty"`
	// The 'from' name for the Automation (not an email address).
	FromName *string `json:"from_name,omitempty"`
	// The reply-to email address for the Automation.
	ReplyTo *string `json:"reply_to,omitempty"`
}

// NewCampaignSettings1 instantiates a new CampaignSettings1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignSettings1() *CampaignSettings1 {
	this := CampaignSettings1{}
	return &this
}

// NewCampaignSettings1WithDefaults instantiates a new CampaignSettings1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignSettings1WithDefaults() *CampaignSettings1 {
	this := CampaignSettings1{}
	return &this
}

// GetSubjectLine returns the SubjectLine field value if set, zero value otherwise.
func (o *CampaignSettings1) GetSubjectLine() string {
	if o == nil || IsNil(o.SubjectLine) {
		var ret string
		return ret
	}
	return *o.SubjectLine
}

// GetSubjectLineOk returns a tuple with the SubjectLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSettings1) GetSubjectLineOk() (*string, bool) {
	if o == nil || IsNil(o.SubjectLine) {
		return nil, false
	}
	return o.SubjectLine, true
}

// HasSubjectLine returns a boolean if a field has been set.
func (o *CampaignSettings1) HasSubjectLine() bool {
	if o != nil && !IsNil(o.SubjectLine) {
		return true
	}

	return false
}

// SetSubjectLine gets a reference to the given string and assigns it to the SubjectLine field.
func (o *CampaignSettings1) SetSubjectLine(v string) {
	o.SubjectLine = &v
}

// GetPreviewText returns the PreviewText field value if set, zero value otherwise.
func (o *CampaignSettings1) GetPreviewText() string {
	if o == nil || IsNil(o.PreviewText) {
		var ret string
		return ret
	}
	return *o.PreviewText
}

// GetPreviewTextOk returns a tuple with the PreviewText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSettings1) GetPreviewTextOk() (*string, bool) {
	if o == nil || IsNil(o.PreviewText) {
		return nil, false
	}
	return o.PreviewText, true
}

// HasPreviewText returns a boolean if a field has been set.
func (o *CampaignSettings1) HasPreviewText() bool {
	if o != nil && !IsNil(o.PreviewText) {
		return true
	}

	return false
}

// SetPreviewText gets a reference to the given string and assigns it to the PreviewText field.
func (o *CampaignSettings1) SetPreviewText(v string) {
	o.PreviewText = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CampaignSettings1) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSettings1) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CampaignSettings1) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CampaignSettings1) SetTitle(v string) {
	o.Title = &v
}

// GetFromName returns the FromName field value if set, zero value otherwise.
func (o *CampaignSettings1) GetFromName() string {
	if o == nil || IsNil(o.FromName) {
		var ret string
		return ret
	}
	return *o.FromName
}

// GetFromNameOk returns a tuple with the FromName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSettings1) GetFromNameOk() (*string, bool) {
	if o == nil || IsNil(o.FromName) {
		return nil, false
	}
	return o.FromName, true
}

// HasFromName returns a boolean if a field has been set.
func (o *CampaignSettings1) HasFromName() bool {
	if o != nil && !IsNil(o.FromName) {
		return true
	}

	return false
}

// SetFromName gets a reference to the given string and assigns it to the FromName field.
func (o *CampaignSettings1) SetFromName(v string) {
	o.FromName = &v
}

// GetReplyTo returns the ReplyTo field value if set, zero value otherwise.
func (o *CampaignSettings1) GetReplyTo() string {
	if o == nil || IsNil(o.ReplyTo) {
		var ret string
		return ret
	}
	return *o.ReplyTo
}

// GetReplyToOk returns a tuple with the ReplyTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSettings1) GetReplyToOk() (*string, bool) {
	if o == nil || IsNil(o.ReplyTo) {
		return nil, false
	}
	return o.ReplyTo, true
}

// HasReplyTo returns a boolean if a field has been set.
func (o *CampaignSettings1) HasReplyTo() bool {
	if o != nil && !IsNil(o.ReplyTo) {
		return true
	}

	return false
}

// SetReplyTo gets a reference to the given string and assigns it to the ReplyTo field.
func (o *CampaignSettings1) SetReplyTo(v string) {
	o.ReplyTo = &v
}

func (o CampaignSettings1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignSettings1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubjectLine) {
		toSerialize["subject_line"] = o.SubjectLine
	}
	if !IsNil(o.PreviewText) {
		toSerialize["preview_text"] = o.PreviewText
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.FromName) {
		toSerialize["from_name"] = o.FromName
	}
	if !IsNil(o.ReplyTo) {
		toSerialize["reply_to"] = o.ReplyTo
	}
	return toSerialize, nil
}

type NullableCampaignSettings1 struct {
	value *CampaignSettings1
	isSet bool
}

func (v NullableCampaignSettings1) Get() *CampaignSettings1 {
	return v.value
}

func (v *NullableCampaignSettings1) Set(val *CampaignSettings1) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignSettings1) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignSettings1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignSettings1(val *CampaignSettings1) *NullableCampaignSettings1 {
	return &NullableCampaignSettings1{value: val, isSet: true}
}

func (v NullableCampaignSettings1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignSettings1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



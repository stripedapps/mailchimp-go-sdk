/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SubscriberRemovedFromAutomationWorkflow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriberRemovedFromAutomationWorkflow{}

// SubscriberRemovedFromAutomationWorkflow A summary of a subscriber removed from an Automation workflow.
type SubscriberRemovedFromAutomationWorkflow struct {
	// The MD5 hash of the lowercase version of the list member's email address.
	Id *string `json:"id,omitempty"`
	// A string that uniquely identifies an Automation workflow.
	WorkflowId *string `json:"workflow_id,omitempty"`
	// A string that uniquely identifies a list.
	ListId *string `json:"list_id,omitempty"`
	// The list member's email address.
	EmailAddress *string `json:"email_address,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewSubscriberRemovedFromAutomationWorkflow instantiates a new SubscriberRemovedFromAutomationWorkflow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriberRemovedFromAutomationWorkflow() *SubscriberRemovedFromAutomationWorkflow {
	this := SubscriberRemovedFromAutomationWorkflow{}
	return &this
}

// NewSubscriberRemovedFromAutomationWorkflowWithDefaults instantiates a new SubscriberRemovedFromAutomationWorkflow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriberRemovedFromAutomationWorkflowWithDefaults() *SubscriberRemovedFromAutomationWorkflow {
	this := SubscriberRemovedFromAutomationWorkflow{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SubscriberRemovedFromAutomationWorkflow) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberRemovedFromAutomationWorkflow) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SubscriberRemovedFromAutomationWorkflow) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SubscriberRemovedFromAutomationWorkflow) SetId(v string) {
	o.Id = &v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *SubscriberRemovedFromAutomationWorkflow) GetWorkflowId() string {
	if o == nil || IsNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberRemovedFromAutomationWorkflow) GetWorkflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowId) {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *SubscriberRemovedFromAutomationWorkflow) HasWorkflowId() bool {
	if o != nil && !IsNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *SubscriberRemovedFromAutomationWorkflow) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

// GetListId returns the ListId field value if set, zero value otherwise.
func (o *SubscriberRemovedFromAutomationWorkflow) GetListId() string {
	if o == nil || IsNil(o.ListId) {
		var ret string
		return ret
	}
	return *o.ListId
}

// GetListIdOk returns a tuple with the ListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberRemovedFromAutomationWorkflow) GetListIdOk() (*string, bool) {
	if o == nil || IsNil(o.ListId) {
		return nil, false
	}
	return o.ListId, true
}

// HasListId returns a boolean if a field has been set.
func (o *SubscriberRemovedFromAutomationWorkflow) HasListId() bool {
	if o != nil && !IsNil(o.ListId) {
		return true
	}

	return false
}

// SetListId gets a reference to the given string and assigns it to the ListId field.
func (o *SubscriberRemovedFromAutomationWorkflow) SetListId(v string) {
	o.ListId = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *SubscriberRemovedFromAutomationWorkflow) GetEmailAddress() string {
	if o == nil || IsNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberRemovedFromAutomationWorkflow) GetEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *SubscriberRemovedFromAutomationWorkflow) HasEmailAddress() bool {
	if o != nil && !IsNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *SubscriberRemovedFromAutomationWorkflow) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *SubscriberRemovedFromAutomationWorkflow) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberRemovedFromAutomationWorkflow) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SubscriberRemovedFromAutomationWorkflow) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *SubscriberRemovedFromAutomationWorkflow) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o SubscriberRemovedFromAutomationWorkflow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriberRemovedFromAutomationWorkflow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.WorkflowId) {
		toSerialize["workflow_id"] = o.WorkflowId
	}
	if !IsNil(o.ListId) {
		toSerialize["list_id"] = o.ListId
	}
	if !IsNil(o.EmailAddress) {
		toSerialize["email_address"] = o.EmailAddress
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableSubscriberRemovedFromAutomationWorkflow struct {
	value *SubscriberRemovedFromAutomationWorkflow
	isSet bool
}

func (v NullableSubscriberRemovedFromAutomationWorkflow) Get() *SubscriberRemovedFromAutomationWorkflow {
	return v.value
}

func (v *NullableSubscriberRemovedFromAutomationWorkflow) Set(val *SubscriberRemovedFromAutomationWorkflow) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriberRemovedFromAutomationWorkflow) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriberRemovedFromAutomationWorkflow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriberRemovedFromAutomationWorkflow(val *SubscriberRemovedFromAutomationWorkflow) *NullableSubscriberRemovedFromAutomationWorkflow {
	return &NullableSubscriberRemovedFromAutomationWorkflow{value: val, isSet: true}
}

func (v NullableSubscriberRemovedFromAutomationWorkflow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriberRemovedFromAutomationWorkflow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



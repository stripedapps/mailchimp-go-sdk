/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetActivityFeedChimpChatter200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetActivityFeedChimpChatter200Response{}

// GetActivityFeedChimpChatter200Response An array of Chimp Chatter messages. There's a maximum of 200 messages present for an account.
type GetActivityFeedChimpChatter200Response struct {
	// An array of Chimp Chatter messages. There's a maximum of 200 messages present for an account.
	ChimpChatter []ChimpChatter `json:"chimp_chatter,omitempty"`
	// The total number of items matching the query regardless of pagination.
	TotalItems *int32 `json:"total_items,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewGetActivityFeedChimpChatter200Response instantiates a new GetActivityFeedChimpChatter200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetActivityFeedChimpChatter200Response() *GetActivityFeedChimpChatter200Response {
	this := GetActivityFeedChimpChatter200Response{}
	return &this
}

// NewGetActivityFeedChimpChatter200ResponseWithDefaults instantiates a new GetActivityFeedChimpChatter200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetActivityFeedChimpChatter200ResponseWithDefaults() *GetActivityFeedChimpChatter200Response {
	this := GetActivityFeedChimpChatter200Response{}
	return &this
}

// GetChimpChatter returns the ChimpChatter field value if set, zero value otherwise.
func (o *GetActivityFeedChimpChatter200Response) GetChimpChatter() []ChimpChatter {
	if o == nil || IsNil(o.ChimpChatter) {
		var ret []ChimpChatter
		return ret
	}
	return o.ChimpChatter
}

// GetChimpChatterOk returns a tuple with the ChimpChatter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActivityFeedChimpChatter200Response) GetChimpChatterOk() ([]ChimpChatter, bool) {
	if o == nil || IsNil(o.ChimpChatter) {
		return nil, false
	}
	return o.ChimpChatter, true
}

// HasChimpChatter returns a boolean if a field has been set.
func (o *GetActivityFeedChimpChatter200Response) HasChimpChatter() bool {
	if o != nil && !IsNil(o.ChimpChatter) {
		return true
	}

	return false
}

// SetChimpChatter gets a reference to the given []ChimpChatter and assigns it to the ChimpChatter field.
func (o *GetActivityFeedChimpChatter200Response) SetChimpChatter(v []ChimpChatter) {
	o.ChimpChatter = v
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise.
func (o *GetActivityFeedChimpChatter200Response) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems) {
		var ret int32
		return ret
	}
	return *o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActivityFeedChimpChatter200Response) GetTotalItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItems) {
		return nil, false
	}
	return o.TotalItems, true
}

// HasTotalItems returns a boolean if a field has been set.
func (o *GetActivityFeedChimpChatter200Response) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given int32 and assigns it to the TotalItems field.
func (o *GetActivityFeedChimpChatter200Response) SetTotalItems(v int32) {
	o.TotalItems = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetActivityFeedChimpChatter200Response) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActivityFeedChimpChatter200Response) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetActivityFeedChimpChatter200Response) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *GetActivityFeedChimpChatter200Response) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o GetActivityFeedChimpChatter200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetActivityFeedChimpChatter200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChimpChatter) {
		toSerialize["chimp_chatter"] = o.ChimpChatter
	}
	if !IsNil(o.TotalItems) {
		toSerialize["total_items"] = o.TotalItems
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetActivityFeedChimpChatter200Response struct {
	value *GetActivityFeedChimpChatter200Response
	isSet bool
}

func (v NullableGetActivityFeedChimpChatter200Response) Get() *GetActivityFeedChimpChatter200Response {
	return v.value
}

func (v *NullableGetActivityFeedChimpChatter200Response) Set(val *GetActivityFeedChimpChatter200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetActivityFeedChimpChatter200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetActivityFeedChimpChatter200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetActivityFeedChimpChatter200Response(val *GetActivityFeedChimpChatter200Response) *NullableGetActivityFeedChimpChatter200Response {
	return &NullableGetActivityFeedChimpChatter200Response{value: val, isSet: true}
}

func (v NullableGetActivityFeedChimpChatter200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetActivityFeedChimpChatter200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



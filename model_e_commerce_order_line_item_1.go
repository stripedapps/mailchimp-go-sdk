/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ECommerceOrderLineItem1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ECommerceOrderLineItem1{}

// ECommerceOrderLineItem1 Information about a specific order line.
type ECommerceOrderLineItem1 struct {
	// A unique identifier for the order line item.
	Id string `json:"id"`
	// A unique identifier for the product associated with the order line item.
	ProductId string `json:"product_id"`
	// A unique identifier for the product variant associated with the order line item.
	ProductVariantId string `json:"product_variant_id"`
	// The quantity of an order line item.
	Quantity int32 `json:"quantity"`
	// The price of an order line item.
	Price float32 `json:"price"`
	// The total discount amount applied to this line item.
	Discount *float32 `json:"discount,omitempty"`
}

// NewECommerceOrderLineItem1 instantiates a new ECommerceOrderLineItem1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewECommerceOrderLineItem1(id string, productId string, productVariantId string, quantity int32, price float32) *ECommerceOrderLineItem1 {
	this := ECommerceOrderLineItem1{}
	this.Id = id
	this.ProductId = productId
	this.ProductVariantId = productVariantId
	this.Quantity = quantity
	this.Price = price
	return &this
}

// NewECommerceOrderLineItem1WithDefaults instantiates a new ECommerceOrderLineItem1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewECommerceOrderLineItem1WithDefaults() *ECommerceOrderLineItem1 {
	this := ECommerceOrderLineItem1{}
	return &this
}

// GetId returns the Id field value
func (o *ECommerceOrderLineItem1) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ECommerceOrderLineItem1) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ECommerceOrderLineItem1) SetId(v string) {
	o.Id = v
}

// GetProductId returns the ProductId field value
func (o *ECommerceOrderLineItem1) GetProductId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *ECommerceOrderLineItem1) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *ECommerceOrderLineItem1) SetProductId(v string) {
	o.ProductId = v
}

// GetProductVariantId returns the ProductVariantId field value
func (o *ECommerceOrderLineItem1) GetProductVariantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductVariantId
}

// GetProductVariantIdOk returns a tuple with the ProductVariantId field value
// and a boolean to check if the value has been set.
func (o *ECommerceOrderLineItem1) GetProductVariantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductVariantId, true
}

// SetProductVariantId sets field value
func (o *ECommerceOrderLineItem1) SetProductVariantId(v string) {
	o.ProductVariantId = v
}

// GetQuantity returns the Quantity field value
func (o *ECommerceOrderLineItem1) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *ECommerceOrderLineItem1) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *ECommerceOrderLineItem1) SetQuantity(v int32) {
	o.Quantity = v
}

// GetPrice returns the Price field value
func (o *ECommerceOrderLineItem1) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *ECommerceOrderLineItem1) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *ECommerceOrderLineItem1) SetPrice(v float32) {
	o.Price = v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *ECommerceOrderLineItem1) GetDiscount() float32 {
	if o == nil || IsNil(o.Discount) {
		var ret float32
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceOrderLineItem1) GetDiscountOk() (*float32, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *ECommerceOrderLineItem1) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float32 and assigns it to the Discount field.
func (o *ECommerceOrderLineItem1) SetDiscount(v float32) {
	o.Discount = &v
}

func (o ECommerceOrderLineItem1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ECommerceOrderLineItem1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["product_id"] = o.ProductId
	toSerialize["product_variant_id"] = o.ProductVariantId
	toSerialize["quantity"] = o.Quantity
	toSerialize["price"] = o.Price
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	return toSerialize, nil
}

type NullableECommerceOrderLineItem1 struct {
	value *ECommerceOrderLineItem1
	isSet bool
}

func (v NullableECommerceOrderLineItem1) Get() *ECommerceOrderLineItem1 {
	return v.value
}

func (v *NullableECommerceOrderLineItem1) Set(val *ECommerceOrderLineItem1) {
	v.value = val
	v.isSet = true
}

func (v NullableECommerceOrderLineItem1) IsSet() bool {
	return v.isSet
}

func (v *NullableECommerceOrderLineItem1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECommerceOrderLineItem1(val *ECommerceOrderLineItem1) *NullableECommerceOrderLineItem1 {
	return &NullableECommerceOrderLineItem1{value: val, isSet: true}
}

func (v NullableECommerceOrderLineItem1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECommerceOrderLineItem1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



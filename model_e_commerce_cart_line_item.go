/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ECommerceCartLineItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ECommerceCartLineItem{}

// ECommerceCartLineItem Information about a specific cart line item.
type ECommerceCartLineItem struct {
	// A unique identifier for the cart line item.
	Id *string `json:"id,omitempty"`
	// A unique identifier for the product associated with the cart line item.
	ProductId *string `json:"product_id,omitempty"`
	// The name of the product for the cart line item.
	ProductTitle *string `json:"product_title,omitempty"`
	// A unique identifier for the product variant associated with the cart line item.
	ProductVariantId *string `json:"product_variant_id,omitempty"`
	// The name of the product variant for the cart line item.
	ProductVariantTitle *string `json:"product_variant_title,omitempty"`
	// The quantity of a cart line item.
	Quantity *int32 `json:"quantity,omitempty"`
	// The price of a cart line item.
	Price *float32 `json:"price,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewECommerceCartLineItem instantiates a new ECommerceCartLineItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewECommerceCartLineItem() *ECommerceCartLineItem {
	this := ECommerceCartLineItem{}
	return &this
}

// NewECommerceCartLineItemWithDefaults instantiates a new ECommerceCartLineItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewECommerceCartLineItemWithDefaults() *ECommerceCartLineItem {
	this := ECommerceCartLineItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ECommerceCartLineItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceCartLineItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ECommerceCartLineItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ECommerceCartLineItem) SetId(v string) {
	o.Id = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ECommerceCartLineItem) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceCartLineItem) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ECommerceCartLineItem) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *ECommerceCartLineItem) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductTitle returns the ProductTitle field value if set, zero value otherwise.
func (o *ECommerceCartLineItem) GetProductTitle() string {
	if o == nil || IsNil(o.ProductTitle) {
		var ret string
		return ret
	}
	return *o.ProductTitle
}

// GetProductTitleOk returns a tuple with the ProductTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceCartLineItem) GetProductTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTitle) {
		return nil, false
	}
	return o.ProductTitle, true
}

// HasProductTitle returns a boolean if a field has been set.
func (o *ECommerceCartLineItem) HasProductTitle() bool {
	if o != nil && !IsNil(o.ProductTitle) {
		return true
	}

	return false
}

// SetProductTitle gets a reference to the given string and assigns it to the ProductTitle field.
func (o *ECommerceCartLineItem) SetProductTitle(v string) {
	o.ProductTitle = &v
}

// GetProductVariantId returns the ProductVariantId field value if set, zero value otherwise.
func (o *ECommerceCartLineItem) GetProductVariantId() string {
	if o == nil || IsNil(o.ProductVariantId) {
		var ret string
		return ret
	}
	return *o.ProductVariantId
}

// GetProductVariantIdOk returns a tuple with the ProductVariantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceCartLineItem) GetProductVariantIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductVariantId) {
		return nil, false
	}
	return o.ProductVariantId, true
}

// HasProductVariantId returns a boolean if a field has been set.
func (o *ECommerceCartLineItem) HasProductVariantId() bool {
	if o != nil && !IsNil(o.ProductVariantId) {
		return true
	}

	return false
}

// SetProductVariantId gets a reference to the given string and assigns it to the ProductVariantId field.
func (o *ECommerceCartLineItem) SetProductVariantId(v string) {
	o.ProductVariantId = &v
}

// GetProductVariantTitle returns the ProductVariantTitle field value if set, zero value otherwise.
func (o *ECommerceCartLineItem) GetProductVariantTitle() string {
	if o == nil || IsNil(o.ProductVariantTitle) {
		var ret string
		return ret
	}
	return *o.ProductVariantTitle
}

// GetProductVariantTitleOk returns a tuple with the ProductVariantTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceCartLineItem) GetProductVariantTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ProductVariantTitle) {
		return nil, false
	}
	return o.ProductVariantTitle, true
}

// HasProductVariantTitle returns a boolean if a field has been set.
func (o *ECommerceCartLineItem) HasProductVariantTitle() bool {
	if o != nil && !IsNil(o.ProductVariantTitle) {
		return true
	}

	return false
}

// SetProductVariantTitle gets a reference to the given string and assigns it to the ProductVariantTitle field.
func (o *ECommerceCartLineItem) SetProductVariantTitle(v string) {
	o.ProductVariantTitle = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ECommerceCartLineItem) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceCartLineItem) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ECommerceCartLineItem) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ECommerceCartLineItem) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ECommerceCartLineItem) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceCartLineItem) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ECommerceCartLineItem) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *ECommerceCartLineItem) SetPrice(v float32) {
	o.Price = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ECommerceCartLineItem) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceCartLineItem) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ECommerceCartLineItem) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *ECommerceCartLineItem) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o ECommerceCartLineItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ECommerceCartLineItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductTitle) {
		toSerialize["product_title"] = o.ProductTitle
	}
	if !IsNil(o.ProductVariantId) {
		toSerialize["product_variant_id"] = o.ProductVariantId
	}
	if !IsNil(o.ProductVariantTitle) {
		toSerialize["product_variant_title"] = o.ProductVariantTitle
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableECommerceCartLineItem struct {
	value *ECommerceCartLineItem
	isSet bool
}

func (v NullableECommerceCartLineItem) Get() *ECommerceCartLineItem {
	return v.value
}

func (v *NullableECommerceCartLineItem) Set(val *ECommerceCartLineItem) {
	v.value = val
	v.isSet = true
}

func (v NullableECommerceCartLineItem) IsSet() bool {
	return v.isSet
}

func (v *NullableECommerceCartLineItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECommerceCartLineItem(val *ECommerceCartLineItem) *NullableECommerceCartLineItem {
	return &NullableECommerceCartLineItem{value: val, isSet: true}
}

func (v NullableECommerceCartLineItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECommerceCartLineItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



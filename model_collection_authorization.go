/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CollectionAuthorization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectionAuthorization{}

// CollectionAuthorization Do particular authorization constraints around this collection limit creation of new instances?
type CollectionAuthorization struct {
	// May the user create additional instances of this resource?
	MayCreate bool `json:"may_create"`
	// How many total instances of this resource are allowed? This is independent of any filter conditions applied to the query. As a special case, -1 indicates unlimited.
	MaxInstances int32 `json:"max_instances"`
	// How many total instances of this resource are already in use? This is independent of any filter conditions applied to the query. Value may be larger than max_instances. As a special case, -1 is returned when access is unlimited.
	CurrentTotalInstances *int32 `json:"current_total_instances,omitempty"`
}

// NewCollectionAuthorization instantiates a new CollectionAuthorization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionAuthorization(mayCreate bool, maxInstances int32) *CollectionAuthorization {
	this := CollectionAuthorization{}
	this.MayCreate = mayCreate
	this.MaxInstances = maxInstances
	return &this
}

// NewCollectionAuthorizationWithDefaults instantiates a new CollectionAuthorization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionAuthorizationWithDefaults() *CollectionAuthorization {
	this := CollectionAuthorization{}
	return &this
}

// GetMayCreate returns the MayCreate field value
func (o *CollectionAuthorization) GetMayCreate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MayCreate
}

// GetMayCreateOk returns a tuple with the MayCreate field value
// and a boolean to check if the value has been set.
func (o *CollectionAuthorization) GetMayCreateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MayCreate, true
}

// SetMayCreate sets field value
func (o *CollectionAuthorization) SetMayCreate(v bool) {
	o.MayCreate = v
}

// GetMaxInstances returns the MaxInstances field value
func (o *CollectionAuthorization) GetMaxInstances() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxInstances
}

// GetMaxInstancesOk returns a tuple with the MaxInstances field value
// and a boolean to check if the value has been set.
func (o *CollectionAuthorization) GetMaxInstancesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxInstances, true
}

// SetMaxInstances sets field value
func (o *CollectionAuthorization) SetMaxInstances(v int32) {
	o.MaxInstances = v
}

// GetCurrentTotalInstances returns the CurrentTotalInstances field value if set, zero value otherwise.
func (o *CollectionAuthorization) GetCurrentTotalInstances() int32 {
	if o == nil || IsNil(o.CurrentTotalInstances) {
		var ret int32
		return ret
	}
	return *o.CurrentTotalInstances
}

// GetCurrentTotalInstancesOk returns a tuple with the CurrentTotalInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionAuthorization) GetCurrentTotalInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentTotalInstances) {
		return nil, false
	}
	return o.CurrentTotalInstances, true
}

// HasCurrentTotalInstances returns a boolean if a field has been set.
func (o *CollectionAuthorization) HasCurrentTotalInstances() bool {
	if o != nil && !IsNil(o.CurrentTotalInstances) {
		return true
	}

	return false
}

// SetCurrentTotalInstances gets a reference to the given int32 and assigns it to the CurrentTotalInstances field.
func (o *CollectionAuthorization) SetCurrentTotalInstances(v int32) {
	o.CurrentTotalInstances = &v
}

func (o CollectionAuthorization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectionAuthorization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["may_create"] = o.MayCreate
	toSerialize["max_instances"] = o.MaxInstances
	if !IsNil(o.CurrentTotalInstances) {
		toSerialize["current_total_instances"] = o.CurrentTotalInstances
	}
	return toSerialize, nil
}

type NullableCollectionAuthorization struct {
	value *CollectionAuthorization
	isSet bool
}

func (v NullableCollectionAuthorization) Get() *CollectionAuthorization {
	return v.value
}

func (v *NullableCollectionAuthorization) Set(val *CollectionAuthorization) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionAuthorization) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionAuthorization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionAuthorization(val *CollectionAuthorization) *NullableCollectionAuthorization {
	return &NullableCollectionAuthorization{value: val, isSet: true}
}

func (v NullableCollectionAuthorization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionAuthorization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



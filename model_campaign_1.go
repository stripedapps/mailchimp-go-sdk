/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Campaign1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Campaign1{}

// Campaign1 A summary of an individual campaign's settings and content.
type Campaign1 struct {
	// There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.
	Type string `json:"type"`
	Recipients *List4 `json:"recipients,omitempty"`
	Settings *CampaignSettings3 `json:"settings,omitempty"`
	VariateSettings *ABTestOptions1 `json:"variate_settings,omitempty"`
	Tracking *CampaignTrackingOptions1 `json:"tracking,omitempty"`
	RssOpts *RSSOptions1 `json:"rss_opts,omitempty"`
	SocialCard *CampaignSocialCard `json:"social_card,omitempty"`
	// How the campaign's content is put together. The old drag and drop editor uses 'template' while the new editor uses 'multichannel'. Defaults to template.
	ContentType *string `json:"content_type,omitempty"`
}

// NewCampaign1 instantiates a new Campaign1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaign1(type_ string) *Campaign1 {
	this := Campaign1{}
	this.Type = type_
	return &this
}

// NewCampaign1WithDefaults instantiates a new Campaign1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaign1WithDefaults() *Campaign1 {
	this := Campaign1{}
	return &this
}

// GetType returns the Type field value
func (o *Campaign1) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Campaign1) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Campaign1) SetType(v string) {
	o.Type = v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *Campaign1) GetRecipients() List4 {
	if o == nil || IsNil(o.Recipients) {
		var ret List4
		return ret
	}
	return *o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaign1) GetRecipientsOk() (*List4, bool) {
	if o == nil || IsNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *Campaign1) HasRecipients() bool {
	if o != nil && !IsNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given List4 and assigns it to the Recipients field.
func (o *Campaign1) SetRecipients(v List4) {
	o.Recipients = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *Campaign1) GetSettings() CampaignSettings3 {
	if o == nil || IsNil(o.Settings) {
		var ret CampaignSettings3
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaign1) GetSettingsOk() (*CampaignSettings3, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *Campaign1) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given CampaignSettings3 and assigns it to the Settings field.
func (o *Campaign1) SetSettings(v CampaignSettings3) {
	o.Settings = &v
}

// GetVariateSettings returns the VariateSettings field value if set, zero value otherwise.
func (o *Campaign1) GetVariateSettings() ABTestOptions1 {
	if o == nil || IsNil(o.VariateSettings) {
		var ret ABTestOptions1
		return ret
	}
	return *o.VariateSettings
}

// GetVariateSettingsOk returns a tuple with the VariateSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaign1) GetVariateSettingsOk() (*ABTestOptions1, bool) {
	if o == nil || IsNil(o.VariateSettings) {
		return nil, false
	}
	return o.VariateSettings, true
}

// HasVariateSettings returns a boolean if a field has been set.
func (o *Campaign1) HasVariateSettings() bool {
	if o != nil && !IsNil(o.VariateSettings) {
		return true
	}

	return false
}

// SetVariateSettings gets a reference to the given ABTestOptions1 and assigns it to the VariateSettings field.
func (o *Campaign1) SetVariateSettings(v ABTestOptions1) {
	o.VariateSettings = &v
}

// GetTracking returns the Tracking field value if set, zero value otherwise.
func (o *Campaign1) GetTracking() CampaignTrackingOptions1 {
	if o == nil || IsNil(o.Tracking) {
		var ret CampaignTrackingOptions1
		return ret
	}
	return *o.Tracking
}

// GetTrackingOk returns a tuple with the Tracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaign1) GetTrackingOk() (*CampaignTrackingOptions1, bool) {
	if o == nil || IsNil(o.Tracking) {
		return nil, false
	}
	return o.Tracking, true
}

// HasTracking returns a boolean if a field has been set.
func (o *Campaign1) HasTracking() bool {
	if o != nil && !IsNil(o.Tracking) {
		return true
	}

	return false
}

// SetTracking gets a reference to the given CampaignTrackingOptions1 and assigns it to the Tracking field.
func (o *Campaign1) SetTracking(v CampaignTrackingOptions1) {
	o.Tracking = &v
}

// GetRssOpts returns the RssOpts field value if set, zero value otherwise.
func (o *Campaign1) GetRssOpts() RSSOptions1 {
	if o == nil || IsNil(o.RssOpts) {
		var ret RSSOptions1
		return ret
	}
	return *o.RssOpts
}

// GetRssOptsOk returns a tuple with the RssOpts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaign1) GetRssOptsOk() (*RSSOptions1, bool) {
	if o == nil || IsNil(o.RssOpts) {
		return nil, false
	}
	return o.RssOpts, true
}

// HasRssOpts returns a boolean if a field has been set.
func (o *Campaign1) HasRssOpts() bool {
	if o != nil && !IsNil(o.RssOpts) {
		return true
	}

	return false
}

// SetRssOpts gets a reference to the given RSSOptions1 and assigns it to the RssOpts field.
func (o *Campaign1) SetRssOpts(v RSSOptions1) {
	o.RssOpts = &v
}

// GetSocialCard returns the SocialCard field value if set, zero value otherwise.
func (o *Campaign1) GetSocialCard() CampaignSocialCard {
	if o == nil || IsNil(o.SocialCard) {
		var ret CampaignSocialCard
		return ret
	}
	return *o.SocialCard
}

// GetSocialCardOk returns a tuple with the SocialCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaign1) GetSocialCardOk() (*CampaignSocialCard, bool) {
	if o == nil || IsNil(o.SocialCard) {
		return nil, false
	}
	return o.SocialCard, true
}

// HasSocialCard returns a boolean if a field has been set.
func (o *Campaign1) HasSocialCard() bool {
	if o != nil && !IsNil(o.SocialCard) {
		return true
	}

	return false
}

// SetSocialCard gets a reference to the given CampaignSocialCard and assigns it to the SocialCard field.
func (o *Campaign1) SetSocialCard(v CampaignSocialCard) {
	o.SocialCard = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *Campaign1) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaign1) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *Campaign1) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *Campaign1) SetContentType(v string) {
	o.ContentType = &v
}

func (o Campaign1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Campaign1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Recipients) {
		toSerialize["recipients"] = o.Recipients
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.VariateSettings) {
		toSerialize["variate_settings"] = o.VariateSettings
	}
	if !IsNil(o.Tracking) {
		toSerialize["tracking"] = o.Tracking
	}
	if !IsNil(o.RssOpts) {
		toSerialize["rss_opts"] = o.RssOpts
	}
	if !IsNil(o.SocialCard) {
		toSerialize["social_card"] = o.SocialCard
	}
	if !IsNil(o.ContentType) {
		toSerialize["content_type"] = o.ContentType
	}
	return toSerialize, nil
}

type NullableCampaign1 struct {
	value *Campaign1
	isSet bool
}

func (v NullableCampaign1) Get() *Campaign1 {
	return v.value
}

func (v *NullableCampaign1) Set(val *Campaign1) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaign1) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaign1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaign1(val *Campaign1) *NullableCampaign1 {
	return &NullableCampaign1{value: val, isSet: true}
}

func (v NullableCampaign1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaign1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MemberTag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberTag{}

// MemberTag Add or remove tags on a member by declaring a tag either active or inactive on a member.
type MemberTag struct {
	// The name of the tag.
	Name string `json:"name"`
	// The status for the tag on the member, pass in active to add a tag or inactive to remove it.
	Status string `json:"status"`
}

// NewMemberTag instantiates a new MemberTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberTag(name string, status string) *MemberTag {
	this := MemberTag{}
	this.Name = name
	this.Status = status
	return &this
}

// NewMemberTagWithDefaults instantiates a new MemberTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberTagWithDefaults() *MemberTag {
	this := MemberTag{}
	return &this
}

// GetName returns the Name field value
func (o *MemberTag) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MemberTag) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MemberTag) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value
func (o *MemberTag) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MemberTag) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MemberTag) SetStatus(v string) {
	o.Status = v
}

func (o MemberTag) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberTag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableMemberTag struct {
	value *MemberTag
	isSet bool
}

func (v NullableMemberTag) Get() *MemberTag {
	return v.value
}

func (v *NullableMemberTag) Set(val *MemberTag) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberTag) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberTag(val *MemberTag) *NullableMemberTag {
	return &NullableMemberTag{value: val, isSet: true}
}

func (v NullableMemberTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ECommerceCart1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ECommerceCart1{}

// ECommerceCart1 Information about a specific cart.
type ECommerceCart1 struct {
	// A unique identifier for the cart.
	Id string `json:"id"`
	Customer ECommerceCustomer1 `json:"customer"`
	// A string that uniquely identifies the campaign for a cart.
	CampaignId *string `json:"campaign_id,omitempty"`
	// The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations.
	CheckoutUrl *string `json:"checkout_url,omitempty"`
	// The three-letter ISO 4217 code for the currency that the cart uses.
	CurrencyCode string `json:"currency_code"`
	// The order total for the cart.
	OrderTotal float32 `json:"order_total"`
	// The total tax for the cart.
	TaxTotal *float32 `json:"tax_total,omitempty"`
	// An array of the cart's line items.
	Lines []ECommerceCartLineItem1 `json:"lines"`
}

// NewECommerceCart1 instantiates a new ECommerceCart1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewECommerceCart1(id string, customer ECommerceCustomer1, currencyCode string, orderTotal float32, lines []ECommerceCartLineItem1) *ECommerceCart1 {
	this := ECommerceCart1{}
	this.Id = id
	this.Customer = customer
	this.CurrencyCode = currencyCode
	this.OrderTotal = orderTotal
	this.Lines = lines
	return &this
}

// NewECommerceCart1WithDefaults instantiates a new ECommerceCart1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewECommerceCart1WithDefaults() *ECommerceCart1 {
	this := ECommerceCart1{}
	return &this
}

// GetId returns the Id field value
func (o *ECommerceCart1) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ECommerceCart1) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ECommerceCart1) SetId(v string) {
	o.Id = v
}

// GetCustomer returns the Customer field value
func (o *ECommerceCart1) GetCustomer() ECommerceCustomer1 {
	if o == nil {
		var ret ECommerceCustomer1
		return ret
	}

	return o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value
// and a boolean to check if the value has been set.
func (o *ECommerceCart1) GetCustomerOk() (*ECommerceCustomer1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customer, true
}

// SetCustomer sets field value
func (o *ECommerceCart1) SetCustomer(v ECommerceCustomer1) {
	o.Customer = v
}

// GetCampaignId returns the CampaignId field value if set, zero value otherwise.
func (o *ECommerceCart1) GetCampaignId() string {
	if o == nil || IsNil(o.CampaignId) {
		var ret string
		return ret
	}
	return *o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceCart1) GetCampaignIdOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignId) {
		return nil, false
	}
	return o.CampaignId, true
}

// HasCampaignId returns a boolean if a field has been set.
func (o *ECommerceCart1) HasCampaignId() bool {
	if o != nil && !IsNil(o.CampaignId) {
		return true
	}

	return false
}

// SetCampaignId gets a reference to the given string and assigns it to the CampaignId field.
func (o *ECommerceCart1) SetCampaignId(v string) {
	o.CampaignId = &v
}

// GetCheckoutUrl returns the CheckoutUrl field value if set, zero value otherwise.
func (o *ECommerceCart1) GetCheckoutUrl() string {
	if o == nil || IsNil(o.CheckoutUrl) {
		var ret string
		return ret
	}
	return *o.CheckoutUrl
}

// GetCheckoutUrlOk returns a tuple with the CheckoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceCart1) GetCheckoutUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CheckoutUrl) {
		return nil, false
	}
	return o.CheckoutUrl, true
}

// HasCheckoutUrl returns a boolean if a field has been set.
func (o *ECommerceCart1) HasCheckoutUrl() bool {
	if o != nil && !IsNil(o.CheckoutUrl) {
		return true
	}

	return false
}

// SetCheckoutUrl gets a reference to the given string and assigns it to the CheckoutUrl field.
func (o *ECommerceCart1) SetCheckoutUrl(v string) {
	o.CheckoutUrl = &v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *ECommerceCart1) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *ECommerceCart1) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *ECommerceCart1) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetOrderTotal returns the OrderTotal field value
func (o *ECommerceCart1) GetOrderTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OrderTotal
}

// GetOrderTotalOk returns a tuple with the OrderTotal field value
// and a boolean to check if the value has been set.
func (o *ECommerceCart1) GetOrderTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderTotal, true
}

// SetOrderTotal sets field value
func (o *ECommerceCart1) SetOrderTotal(v float32) {
	o.OrderTotal = v
}

// GetTaxTotal returns the TaxTotal field value if set, zero value otherwise.
func (o *ECommerceCart1) GetTaxTotal() float32 {
	if o == nil || IsNil(o.TaxTotal) {
		var ret float32
		return ret
	}
	return *o.TaxTotal
}

// GetTaxTotalOk returns a tuple with the TaxTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceCart1) GetTaxTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxTotal) {
		return nil, false
	}
	return o.TaxTotal, true
}

// HasTaxTotal returns a boolean if a field has been set.
func (o *ECommerceCart1) HasTaxTotal() bool {
	if o != nil && !IsNil(o.TaxTotal) {
		return true
	}

	return false
}

// SetTaxTotal gets a reference to the given float32 and assigns it to the TaxTotal field.
func (o *ECommerceCart1) SetTaxTotal(v float32) {
	o.TaxTotal = &v
}

// GetLines returns the Lines field value
func (o *ECommerceCart1) GetLines() []ECommerceCartLineItem1 {
	if o == nil {
		var ret []ECommerceCartLineItem1
		return ret
	}

	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value
// and a boolean to check if the value has been set.
func (o *ECommerceCart1) GetLinesOk() ([]ECommerceCartLineItem1, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lines, true
}

// SetLines sets field value
func (o *ECommerceCart1) SetLines(v []ECommerceCartLineItem1) {
	o.Lines = v
}

func (o ECommerceCart1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ECommerceCart1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["customer"] = o.Customer
	if !IsNil(o.CampaignId) {
		toSerialize["campaign_id"] = o.CampaignId
	}
	if !IsNil(o.CheckoutUrl) {
		toSerialize["checkout_url"] = o.CheckoutUrl
	}
	toSerialize["currency_code"] = o.CurrencyCode
	toSerialize["order_total"] = o.OrderTotal
	if !IsNil(o.TaxTotal) {
		toSerialize["tax_total"] = o.TaxTotal
	}
	toSerialize["lines"] = o.Lines
	return toSerialize, nil
}

type NullableECommerceCart1 struct {
	value *ECommerceCart1
	isSet bool
}

func (v NullableECommerceCart1) Get() *ECommerceCart1 {
	return v.value
}

func (v *NullableECommerceCart1) Set(val *ECommerceCart1) {
	v.value = val
	v.isSet = true
}

func (v NullableECommerceCart1) IsSet() bool {
	return v.isSet
}

func (v *NullableECommerceCart1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECommerceCart1(val *ECommerceCart1) *NullableECommerceCart1 {
	return &NullableECommerceCart1{value: val, isSet: true}
}

func (v NullableECommerceCart1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECommerceCart1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



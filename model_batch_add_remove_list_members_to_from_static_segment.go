/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BatchAddRemoveListMembersToFromStaticSegment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchAddRemoveListMembersToFromStaticSegment{}

// BatchAddRemoveListMembersToFromStaticSegment Batch add/remove List members to/from static segment
type BatchAddRemoveListMembersToFromStaticSegment struct {
	// An array of objects, each representing a new member that was added to the static segment.
	MembersAdded []ListMembers `json:"members_added,omitempty"`
	// An array of objects, each representing an existing list member that got deleted from the static segment.
	MembersRemoved []ListMembers `json:"members_removed,omitempty"`
	// An array of objects, each representing an array of email addresses that could not be added to the segment or removed and an error message providing more details.
	Errors []ErrorsInner1 `json:"errors,omitempty"`
	// The total number of items matching the query, irrespective of pagination.
	TotalAdded *int32 `json:"total_added,omitempty"`
	// The total number of items matching the query, irrespective of pagination.
	TotalRemoved *int32 `json:"total_removed,omitempty"`
	// The total number of items matching the query, irrespective of pagination.
	ErrorCount *int32 `json:"error_count,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewBatchAddRemoveListMembersToFromStaticSegment instantiates a new BatchAddRemoveListMembersToFromStaticSegment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchAddRemoveListMembersToFromStaticSegment() *BatchAddRemoveListMembersToFromStaticSegment {
	this := BatchAddRemoveListMembersToFromStaticSegment{}
	return &this
}

// NewBatchAddRemoveListMembersToFromStaticSegmentWithDefaults instantiates a new BatchAddRemoveListMembersToFromStaticSegment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchAddRemoveListMembersToFromStaticSegmentWithDefaults() *BatchAddRemoveListMembersToFromStaticSegment {
	this := BatchAddRemoveListMembersToFromStaticSegment{}
	return &this
}

// GetMembersAdded returns the MembersAdded field value if set, zero value otherwise.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetMembersAdded() []ListMembers {
	if o == nil || IsNil(o.MembersAdded) {
		var ret []ListMembers
		return ret
	}
	return o.MembersAdded
}

// GetMembersAddedOk returns a tuple with the MembersAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetMembersAddedOk() ([]ListMembers, bool) {
	if o == nil || IsNil(o.MembersAdded) {
		return nil, false
	}
	return o.MembersAdded, true
}

// HasMembersAdded returns a boolean if a field has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) HasMembersAdded() bool {
	if o != nil && !IsNil(o.MembersAdded) {
		return true
	}

	return false
}

// SetMembersAdded gets a reference to the given []ListMembers and assigns it to the MembersAdded field.
func (o *BatchAddRemoveListMembersToFromStaticSegment) SetMembersAdded(v []ListMembers) {
	o.MembersAdded = v
}

// GetMembersRemoved returns the MembersRemoved field value if set, zero value otherwise.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetMembersRemoved() []ListMembers {
	if o == nil || IsNil(o.MembersRemoved) {
		var ret []ListMembers
		return ret
	}
	return o.MembersRemoved
}

// GetMembersRemovedOk returns a tuple with the MembersRemoved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetMembersRemovedOk() ([]ListMembers, bool) {
	if o == nil || IsNil(o.MembersRemoved) {
		return nil, false
	}
	return o.MembersRemoved, true
}

// HasMembersRemoved returns a boolean if a field has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) HasMembersRemoved() bool {
	if o != nil && !IsNil(o.MembersRemoved) {
		return true
	}

	return false
}

// SetMembersRemoved gets a reference to the given []ListMembers and assigns it to the MembersRemoved field.
func (o *BatchAddRemoveListMembersToFromStaticSegment) SetMembersRemoved(v []ListMembers) {
	o.MembersRemoved = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetErrors() []ErrorsInner1 {
	if o == nil || IsNil(o.Errors) {
		var ret []ErrorsInner1
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetErrorsOk() ([]ErrorsInner1, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []ErrorsInner1 and assigns it to the Errors field.
func (o *BatchAddRemoveListMembersToFromStaticSegment) SetErrors(v []ErrorsInner1) {
	o.Errors = v
}

// GetTotalAdded returns the TotalAdded field value if set, zero value otherwise.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetTotalAdded() int32 {
	if o == nil || IsNil(o.TotalAdded) {
		var ret int32
		return ret
	}
	return *o.TotalAdded
}

// GetTotalAddedOk returns a tuple with the TotalAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetTotalAddedOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalAdded) {
		return nil, false
	}
	return o.TotalAdded, true
}

// HasTotalAdded returns a boolean if a field has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) HasTotalAdded() bool {
	if o != nil && !IsNil(o.TotalAdded) {
		return true
	}

	return false
}

// SetTotalAdded gets a reference to the given int32 and assigns it to the TotalAdded field.
func (o *BatchAddRemoveListMembersToFromStaticSegment) SetTotalAdded(v int32) {
	o.TotalAdded = &v
}

// GetTotalRemoved returns the TotalRemoved field value if set, zero value otherwise.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetTotalRemoved() int32 {
	if o == nil || IsNil(o.TotalRemoved) {
		var ret int32
		return ret
	}
	return *o.TotalRemoved
}

// GetTotalRemovedOk returns a tuple with the TotalRemoved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetTotalRemovedOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRemoved) {
		return nil, false
	}
	return o.TotalRemoved, true
}

// HasTotalRemoved returns a boolean if a field has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) HasTotalRemoved() bool {
	if o != nil && !IsNil(o.TotalRemoved) {
		return true
	}

	return false
}

// SetTotalRemoved gets a reference to the given int32 and assigns it to the TotalRemoved field.
func (o *BatchAddRemoveListMembersToFromStaticSegment) SetTotalRemoved(v int32) {
	o.TotalRemoved = &v
}

// GetErrorCount returns the ErrorCount field value if set, zero value otherwise.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetErrorCount() int32 {
	if o == nil || IsNil(o.ErrorCount) {
		var ret int32
		return ret
	}
	return *o.ErrorCount
}

// GetErrorCountOk returns a tuple with the ErrorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetErrorCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCount) {
		return nil, false
	}
	return o.ErrorCount, true
}

// HasErrorCount returns a boolean if a field has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) HasErrorCount() bool {
	if o != nil && !IsNil(o.ErrorCount) {
		return true
	}

	return false
}

// SetErrorCount gets a reference to the given int32 and assigns it to the ErrorCount field.
func (o *BatchAddRemoveListMembersToFromStaticSegment) SetErrorCount(v int32) {
	o.ErrorCount = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *BatchAddRemoveListMembersToFromStaticSegment) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *BatchAddRemoveListMembersToFromStaticSegment) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o BatchAddRemoveListMembersToFromStaticSegment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchAddRemoveListMembersToFromStaticSegment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MembersAdded) {
		toSerialize["members_added"] = o.MembersAdded
	}
	if !IsNil(o.MembersRemoved) {
		toSerialize["members_removed"] = o.MembersRemoved
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.TotalAdded) {
		toSerialize["total_added"] = o.TotalAdded
	}
	if !IsNil(o.TotalRemoved) {
		toSerialize["total_removed"] = o.TotalRemoved
	}
	if !IsNil(o.ErrorCount) {
		toSerialize["error_count"] = o.ErrorCount
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableBatchAddRemoveListMembersToFromStaticSegment struct {
	value *BatchAddRemoveListMembersToFromStaticSegment
	isSet bool
}

func (v NullableBatchAddRemoveListMembersToFromStaticSegment) Get() *BatchAddRemoveListMembersToFromStaticSegment {
	return v.value
}

func (v *NullableBatchAddRemoveListMembersToFromStaticSegment) Set(val *BatchAddRemoveListMembersToFromStaticSegment) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchAddRemoveListMembersToFromStaticSegment) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchAddRemoveListMembersToFromStaticSegment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchAddRemoveListMembersToFromStaticSegment(val *BatchAddRemoveListMembersToFromStaticSegment) *NullableBatchAddRemoveListMembersToFromStaticSegment {
	return &NullableBatchAddRemoveListMembersToFromStaticSegment{value: val, isSet: true}
}

func (v NullableBatchAddRemoveListMembersToFromStaticSegment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchAddRemoveListMembersToFromStaticSegment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



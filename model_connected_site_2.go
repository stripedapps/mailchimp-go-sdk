/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConnectedSite2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectedSite2{}

// ConnectedSite2 The Connected Site associated with the store.
type ConnectedSite2 struct {
	// The unique identifier for the connected site.
	SiteForeignId *string `json:"site_foreign_id,omitempty"`
	SiteScript *Script1 `json:"site_script,omitempty"`
}

// NewConnectedSite2 instantiates a new ConnectedSite2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectedSite2() *ConnectedSite2 {
	this := ConnectedSite2{}
	return &this
}

// NewConnectedSite2WithDefaults instantiates a new ConnectedSite2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectedSite2WithDefaults() *ConnectedSite2 {
	this := ConnectedSite2{}
	return &this
}

// GetSiteForeignId returns the SiteForeignId field value if set, zero value otherwise.
func (o *ConnectedSite2) GetSiteForeignId() string {
	if o == nil || IsNil(o.SiteForeignId) {
		var ret string
		return ret
	}
	return *o.SiteForeignId
}

// GetSiteForeignIdOk returns a tuple with the SiteForeignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedSite2) GetSiteForeignIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteForeignId) {
		return nil, false
	}
	return o.SiteForeignId, true
}

// HasSiteForeignId returns a boolean if a field has been set.
func (o *ConnectedSite2) HasSiteForeignId() bool {
	if o != nil && !IsNil(o.SiteForeignId) {
		return true
	}

	return false
}

// SetSiteForeignId gets a reference to the given string and assigns it to the SiteForeignId field.
func (o *ConnectedSite2) SetSiteForeignId(v string) {
	o.SiteForeignId = &v
}

// GetSiteScript returns the SiteScript field value if set, zero value otherwise.
func (o *ConnectedSite2) GetSiteScript() Script1 {
	if o == nil || IsNil(o.SiteScript) {
		var ret Script1
		return ret
	}
	return *o.SiteScript
}

// GetSiteScriptOk returns a tuple with the SiteScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedSite2) GetSiteScriptOk() (*Script1, bool) {
	if o == nil || IsNil(o.SiteScript) {
		return nil, false
	}
	return o.SiteScript, true
}

// HasSiteScript returns a boolean if a field has been set.
func (o *ConnectedSite2) HasSiteScript() bool {
	if o != nil && !IsNil(o.SiteScript) {
		return true
	}

	return false
}

// SetSiteScript gets a reference to the given Script1 and assigns it to the SiteScript field.
func (o *ConnectedSite2) SetSiteScript(v Script1) {
	o.SiteScript = &v
}

func (o ConnectedSite2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectedSite2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SiteForeignId) {
		toSerialize["site_foreign_id"] = o.SiteForeignId
	}
	if !IsNil(o.SiteScript) {
		toSerialize["site_script"] = o.SiteScript
	}
	return toSerialize, nil
}

type NullableConnectedSite2 struct {
	value *ConnectedSite2
	isSet bool
}

func (v NullableConnectedSite2) Get() *ConnectedSite2 {
	return v.value
}

func (v *NullableConnectedSite2) Set(val *ConnectedSite2) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectedSite2) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectedSite2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectedSite2(val *ConnectedSite2) *NullableConnectedSite2 {
	return &NullableConnectedSite2{value: val, isSet: true}
}

func (v NullableConnectedSite2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectedSite2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



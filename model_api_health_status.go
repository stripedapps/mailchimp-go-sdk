/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the APIHealthStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIHealthStatus{}

// APIHealthStatus API health status.
type APIHealthStatus struct {
	// This will return a constant string value if the request is successful. Ex. \"Everything's Chimpy!\"
	HealthStatus *string `json:"health_status,omitempty"`
}

// NewAPIHealthStatus instantiates a new APIHealthStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIHealthStatus() *APIHealthStatus {
	this := APIHealthStatus{}
	return &this
}

// NewAPIHealthStatusWithDefaults instantiates a new APIHealthStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIHealthStatusWithDefaults() *APIHealthStatus {
	this := APIHealthStatus{}
	return &this
}

// GetHealthStatus returns the HealthStatus field value if set, zero value otherwise.
func (o *APIHealthStatus) GetHealthStatus() string {
	if o == nil || IsNil(o.HealthStatus) {
		var ret string
		return ret
	}
	return *o.HealthStatus
}

// GetHealthStatusOk returns a tuple with the HealthStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIHealthStatus) GetHealthStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HealthStatus) {
		return nil, false
	}
	return o.HealthStatus, true
}

// HasHealthStatus returns a boolean if a field has been set.
func (o *APIHealthStatus) HasHealthStatus() bool {
	if o != nil && !IsNil(o.HealthStatus) {
		return true
	}

	return false
}

// SetHealthStatus gets a reference to the given string and assigns it to the HealthStatus field.
func (o *APIHealthStatus) SetHealthStatus(v string) {
	o.HealthStatus = &v
}

func (o APIHealthStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIHealthStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HealthStatus) {
		toSerialize["health_status"] = o.HealthStatus
	}
	return toSerialize, nil
}

type NullableAPIHealthStatus struct {
	value *APIHealthStatus
	isSet bool
}

func (v NullableAPIHealthStatus) Get() *APIHealthStatus {
	return v.value
}

func (v *NullableAPIHealthStatus) Set(val *APIHealthStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIHealthStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIHealthStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIHealthStatus(val *APIHealthStatus) *NullableAPIHealthStatus {
	return &NullableAPIHealthStatus{value: val, isSet: true}
}

func (v NullableAPIHealthStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIHealthStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



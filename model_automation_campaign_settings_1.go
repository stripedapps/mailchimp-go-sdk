/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AutomationCampaignSettings1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutomationCampaignSettings1{}

// AutomationCampaignSettings1 The settings for the Automation workflow.
type AutomationCampaignSettings1 struct {
	// The 'from' name for the Automation (not an email address).
	FromName *string `json:"from_name,omitempty"`
	// The reply-to email address for the Automation.
	ReplyTo *string `json:"reply_to,omitempty"`
}

// NewAutomationCampaignSettings1 instantiates a new AutomationCampaignSettings1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutomationCampaignSettings1() *AutomationCampaignSettings1 {
	this := AutomationCampaignSettings1{}
	return &this
}

// NewAutomationCampaignSettings1WithDefaults instantiates a new AutomationCampaignSettings1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutomationCampaignSettings1WithDefaults() *AutomationCampaignSettings1 {
	this := AutomationCampaignSettings1{}
	return &this
}

// GetFromName returns the FromName field value if set, zero value otherwise.
func (o *AutomationCampaignSettings1) GetFromName() string {
	if o == nil || IsNil(o.FromName) {
		var ret string
		return ret
	}
	return *o.FromName
}

// GetFromNameOk returns a tuple with the FromName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationCampaignSettings1) GetFromNameOk() (*string, bool) {
	if o == nil || IsNil(o.FromName) {
		return nil, false
	}
	return o.FromName, true
}

// HasFromName returns a boolean if a field has been set.
func (o *AutomationCampaignSettings1) HasFromName() bool {
	if o != nil && !IsNil(o.FromName) {
		return true
	}

	return false
}

// SetFromName gets a reference to the given string and assigns it to the FromName field.
func (o *AutomationCampaignSettings1) SetFromName(v string) {
	o.FromName = &v
}

// GetReplyTo returns the ReplyTo field value if set, zero value otherwise.
func (o *AutomationCampaignSettings1) GetReplyTo() string {
	if o == nil || IsNil(o.ReplyTo) {
		var ret string
		return ret
	}
	return *o.ReplyTo
}

// GetReplyToOk returns a tuple with the ReplyTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomationCampaignSettings1) GetReplyToOk() (*string, bool) {
	if o == nil || IsNil(o.ReplyTo) {
		return nil, false
	}
	return o.ReplyTo, true
}

// HasReplyTo returns a boolean if a field has been set.
func (o *AutomationCampaignSettings1) HasReplyTo() bool {
	if o != nil && !IsNil(o.ReplyTo) {
		return true
	}

	return false
}

// SetReplyTo gets a reference to the given string and assigns it to the ReplyTo field.
func (o *AutomationCampaignSettings1) SetReplyTo(v string) {
	o.ReplyTo = &v
}

func (o AutomationCampaignSettings1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutomationCampaignSettings1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromName) {
		toSerialize["from_name"] = o.FromName
	}
	if !IsNil(o.ReplyTo) {
		toSerialize["reply_to"] = o.ReplyTo
	}
	return toSerialize, nil
}

type NullableAutomationCampaignSettings1 struct {
	value *AutomationCampaignSettings1
	isSet bool
}

func (v NullableAutomationCampaignSettings1) Get() *AutomationCampaignSettings1 {
	return v.value
}

func (v *NullableAutomationCampaignSettings1) Set(val *AutomationCampaignSettings1) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomationCampaignSettings1) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomationCampaignSettings1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomationCampaignSettings1(val *AutomationCampaignSettings1) *NullableAutomationCampaignSettings1 {
	return &NullableAutomationCampaignSettings1{value: val, isSet: true}
}

func (v NullableAutomationCampaignSettings1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomationCampaignSettings1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the MemberActivity2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberActivity2{}

// MemberActivity2 A summary of the interaction with the campaign.
type MemberActivity2 struct {
	// One of the following actions: 'open', 'click', or 'bounce'
	Action *string `json:"action,omitempty"`
	// If the action is a 'bounce', the type of bounce received: 'hard', 'soft'.
	Type *string `json:"type,omitempty"`
	// The date and time recorded for the action in ISO 8601 format.
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// If the action is a 'click', the URL on which the member clicked.
	Url *string `json:"url,omitempty"`
	// The IP address recorded for the action.
	Ip *string `json:"ip,omitempty"`
}

// NewMemberActivity2 instantiates a new MemberActivity2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberActivity2() *MemberActivity2 {
	this := MemberActivity2{}
	return &this
}

// NewMemberActivity2WithDefaults instantiates a new MemberActivity2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberActivity2WithDefaults() *MemberActivity2 {
	this := MemberActivity2{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *MemberActivity2) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity2) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *MemberActivity2) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *MemberActivity2) SetAction(v string) {
	o.Action = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MemberActivity2) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity2) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MemberActivity2) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MemberActivity2) SetType(v string) {
	o.Type = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *MemberActivity2) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity2) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *MemberActivity2) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *MemberActivity2) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *MemberActivity2) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity2) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *MemberActivity2) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *MemberActivity2) SetUrl(v string) {
	o.Url = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *MemberActivity2) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberActivity2) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *MemberActivity2) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *MemberActivity2) SetIp(v string) {
	o.Ip = &v
}

func (o MemberActivity2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberActivity2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	return toSerialize, nil
}

type NullableMemberActivity2 struct {
	value *MemberActivity2
	isSet bool
}

func (v NullableMemberActivity2) Get() *MemberActivity2 {
	return v.value
}

func (v *NullableMemberActivity2) Set(val *MemberActivity2) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberActivity2) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberActivity2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberActivity2(val *MemberActivity2) *NullableMemberActivity2 {
	return &NullableMemberActivity2{value: val, isSet: true}
}

func (v NullableMemberActivity2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberActivity2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the APIRoot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIRoot{}

// APIRoot The API root resource links to all other resources available in the API.
type APIRoot struct {
	// The Mailchimp account ID.
	AccountId *string `json:"account_id,omitempty"`
	// The ID associated with the user who owns this API key. If you can login to multiple accounts, this ID will be the same for each account.
	LoginId *string `json:"login_id,omitempty"`
	// The name of the account.
	AccountName *string `json:"account_name,omitempty"`
	// The account email address.
	Email *string `json:"email,omitempty"`
	// The first name tied to the account.
	FirstName *string `json:"first_name,omitempty"`
	// The last name tied to the account.
	LastName *string `json:"last_name,omitempty"`
	// The username tied to the account.
	Username *string `json:"username,omitempty"`
	// URL of the avatar for the user.
	AvatarUrl *string `json:"avatar_url,omitempty"`
	// The [user role](https://mailchimp.com/help/manage-user-levels-in-your-account/) for the account.
	Role *string `json:"role,omitempty"`
	// The date and time that the account was created in ISO 8601 format.
	MemberSince *time.Time `json:"member_since,omitempty"`
	// The type of pricing plan the account is on.
	PricingPlanType *string `json:"pricing_plan_type,omitempty"`
	// Date of first payment for monthly plans.
	FirstPayment *time.Time `json:"first_payment,omitempty"`
	// The timezone currently set for the account.
	AccountTimezone *string `json:"account_timezone,omitempty"`
	// The user-specified industry associated with the account.
	AccountIndustry *string `json:"account_industry,omitempty"`
	Contact *AccountContact `json:"contact,omitempty"`
	// Legacy - whether the account includes [Mailchimp Pro](https://mailchimp.com/help/about-mailchimp-pro/).
	ProEnabled *bool `json:"pro_enabled,omitempty"`
	// The date and time of the last login for this account in ISO 8601 format.
	LastLogin *time.Time `json:"last_login,omitempty"`
	// The total number of subscribers across all lists in the account.
	TotalSubscribers *int32 `json:"total_subscribers,omitempty"`
	IndustryStats *IndustryStats `json:"industry_stats,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewAPIRoot instantiates a new APIRoot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIRoot() *APIRoot {
	this := APIRoot{}
	return &this
}

// NewAPIRootWithDefaults instantiates a new APIRoot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIRootWithDefaults() *APIRoot {
	this := APIRoot{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *APIRoot) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *APIRoot) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *APIRoot) SetAccountId(v string) {
	o.AccountId = &v
}

// GetLoginId returns the LoginId field value if set, zero value otherwise.
func (o *APIRoot) GetLoginId() string {
	if o == nil || IsNil(o.LoginId) {
		var ret string
		return ret
	}
	return *o.LoginId
}

// GetLoginIdOk returns a tuple with the LoginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetLoginIdOk() (*string, bool) {
	if o == nil || IsNil(o.LoginId) {
		return nil, false
	}
	return o.LoginId, true
}

// HasLoginId returns a boolean if a field has been set.
func (o *APIRoot) HasLoginId() bool {
	if o != nil && !IsNil(o.LoginId) {
		return true
	}

	return false
}

// SetLoginId gets a reference to the given string and assigns it to the LoginId field.
func (o *APIRoot) SetLoginId(v string) {
	o.LoginId = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *APIRoot) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *APIRoot) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *APIRoot) SetAccountName(v string) {
	o.AccountName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *APIRoot) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *APIRoot) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *APIRoot) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *APIRoot) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *APIRoot) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *APIRoot) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *APIRoot) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *APIRoot) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *APIRoot) SetLastName(v string) {
	o.LastName = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *APIRoot) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *APIRoot) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *APIRoot) SetUsername(v string) {
	o.Username = &v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *APIRoot) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl) {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetAvatarUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarUrl) {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *APIRoot) HasAvatarUrl() bool {
	if o != nil && !IsNil(o.AvatarUrl) {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *APIRoot) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *APIRoot) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *APIRoot) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *APIRoot) SetRole(v string) {
	o.Role = &v
}

// GetMemberSince returns the MemberSince field value if set, zero value otherwise.
func (o *APIRoot) GetMemberSince() time.Time {
	if o == nil || IsNil(o.MemberSince) {
		var ret time.Time
		return ret
	}
	return *o.MemberSince
}

// GetMemberSinceOk returns a tuple with the MemberSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetMemberSinceOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MemberSince) {
		return nil, false
	}
	return o.MemberSince, true
}

// HasMemberSince returns a boolean if a field has been set.
func (o *APIRoot) HasMemberSince() bool {
	if o != nil && !IsNil(o.MemberSince) {
		return true
	}

	return false
}

// SetMemberSince gets a reference to the given time.Time and assigns it to the MemberSince field.
func (o *APIRoot) SetMemberSince(v time.Time) {
	o.MemberSince = &v
}

// GetPricingPlanType returns the PricingPlanType field value if set, zero value otherwise.
func (o *APIRoot) GetPricingPlanType() string {
	if o == nil || IsNil(o.PricingPlanType) {
		var ret string
		return ret
	}
	return *o.PricingPlanType
}

// GetPricingPlanTypeOk returns a tuple with the PricingPlanType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetPricingPlanTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PricingPlanType) {
		return nil, false
	}
	return o.PricingPlanType, true
}

// HasPricingPlanType returns a boolean if a field has been set.
func (o *APIRoot) HasPricingPlanType() bool {
	if o != nil && !IsNil(o.PricingPlanType) {
		return true
	}

	return false
}

// SetPricingPlanType gets a reference to the given string and assigns it to the PricingPlanType field.
func (o *APIRoot) SetPricingPlanType(v string) {
	o.PricingPlanType = &v
}

// GetFirstPayment returns the FirstPayment field value if set, zero value otherwise.
func (o *APIRoot) GetFirstPayment() time.Time {
	if o == nil || IsNil(o.FirstPayment) {
		var ret time.Time
		return ret
	}
	return *o.FirstPayment
}

// GetFirstPaymentOk returns a tuple with the FirstPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetFirstPaymentOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FirstPayment) {
		return nil, false
	}
	return o.FirstPayment, true
}

// HasFirstPayment returns a boolean if a field has been set.
func (o *APIRoot) HasFirstPayment() bool {
	if o != nil && !IsNil(o.FirstPayment) {
		return true
	}

	return false
}

// SetFirstPayment gets a reference to the given time.Time and assigns it to the FirstPayment field.
func (o *APIRoot) SetFirstPayment(v time.Time) {
	o.FirstPayment = &v
}

// GetAccountTimezone returns the AccountTimezone field value if set, zero value otherwise.
func (o *APIRoot) GetAccountTimezone() string {
	if o == nil || IsNil(o.AccountTimezone) {
		var ret string
		return ret
	}
	return *o.AccountTimezone
}

// GetAccountTimezoneOk returns a tuple with the AccountTimezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetAccountTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.AccountTimezone) {
		return nil, false
	}
	return o.AccountTimezone, true
}

// HasAccountTimezone returns a boolean if a field has been set.
func (o *APIRoot) HasAccountTimezone() bool {
	if o != nil && !IsNil(o.AccountTimezone) {
		return true
	}

	return false
}

// SetAccountTimezone gets a reference to the given string and assigns it to the AccountTimezone field.
func (o *APIRoot) SetAccountTimezone(v string) {
	o.AccountTimezone = &v
}

// GetAccountIndustry returns the AccountIndustry field value if set, zero value otherwise.
func (o *APIRoot) GetAccountIndustry() string {
	if o == nil || IsNil(o.AccountIndustry) {
		var ret string
		return ret
	}
	return *o.AccountIndustry
}

// GetAccountIndustryOk returns a tuple with the AccountIndustry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetAccountIndustryOk() (*string, bool) {
	if o == nil || IsNil(o.AccountIndustry) {
		return nil, false
	}
	return o.AccountIndustry, true
}

// HasAccountIndustry returns a boolean if a field has been set.
func (o *APIRoot) HasAccountIndustry() bool {
	if o != nil && !IsNil(o.AccountIndustry) {
		return true
	}

	return false
}

// SetAccountIndustry gets a reference to the given string and assigns it to the AccountIndustry field.
func (o *APIRoot) SetAccountIndustry(v string) {
	o.AccountIndustry = &v
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *APIRoot) GetContact() AccountContact {
	if o == nil || IsNil(o.Contact) {
		var ret AccountContact
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetContactOk() (*AccountContact, bool) {
	if o == nil || IsNil(o.Contact) {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *APIRoot) HasContact() bool {
	if o != nil && !IsNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given AccountContact and assigns it to the Contact field.
func (o *APIRoot) SetContact(v AccountContact) {
	o.Contact = &v
}

// GetProEnabled returns the ProEnabled field value if set, zero value otherwise.
func (o *APIRoot) GetProEnabled() bool {
	if o == nil || IsNil(o.ProEnabled) {
		var ret bool
		return ret
	}
	return *o.ProEnabled
}

// GetProEnabledOk returns a tuple with the ProEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetProEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ProEnabled) {
		return nil, false
	}
	return o.ProEnabled, true
}

// HasProEnabled returns a boolean if a field has been set.
func (o *APIRoot) HasProEnabled() bool {
	if o != nil && !IsNil(o.ProEnabled) {
		return true
	}

	return false
}

// SetProEnabled gets a reference to the given bool and assigns it to the ProEnabled field.
func (o *APIRoot) SetProEnabled(v bool) {
	o.ProEnabled = &v
}

// GetLastLogin returns the LastLogin field value if set, zero value otherwise.
func (o *APIRoot) GetLastLogin() time.Time {
	if o == nil || IsNil(o.LastLogin) {
		var ret time.Time
		return ret
	}
	return *o.LastLogin
}

// GetLastLoginOk returns a tuple with the LastLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetLastLoginOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastLogin) {
		return nil, false
	}
	return o.LastLogin, true
}

// HasLastLogin returns a boolean if a field has been set.
func (o *APIRoot) HasLastLogin() bool {
	if o != nil && !IsNil(o.LastLogin) {
		return true
	}

	return false
}

// SetLastLogin gets a reference to the given time.Time and assigns it to the LastLogin field.
func (o *APIRoot) SetLastLogin(v time.Time) {
	o.LastLogin = &v
}

// GetTotalSubscribers returns the TotalSubscribers field value if set, zero value otherwise.
func (o *APIRoot) GetTotalSubscribers() int32 {
	if o == nil || IsNil(o.TotalSubscribers) {
		var ret int32
		return ret
	}
	return *o.TotalSubscribers
}

// GetTotalSubscribersOk returns a tuple with the TotalSubscribers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetTotalSubscribersOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSubscribers) {
		return nil, false
	}
	return o.TotalSubscribers, true
}

// HasTotalSubscribers returns a boolean if a field has been set.
func (o *APIRoot) HasTotalSubscribers() bool {
	if o != nil && !IsNil(o.TotalSubscribers) {
		return true
	}

	return false
}

// SetTotalSubscribers gets a reference to the given int32 and assigns it to the TotalSubscribers field.
func (o *APIRoot) SetTotalSubscribers(v int32) {
	o.TotalSubscribers = &v
}

// GetIndustryStats returns the IndustryStats field value if set, zero value otherwise.
func (o *APIRoot) GetIndustryStats() IndustryStats {
	if o == nil || IsNil(o.IndustryStats) {
		var ret IndustryStats
		return ret
	}
	return *o.IndustryStats
}

// GetIndustryStatsOk returns a tuple with the IndustryStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetIndustryStatsOk() (*IndustryStats, bool) {
	if o == nil || IsNil(o.IndustryStats) {
		return nil, false
	}
	return o.IndustryStats, true
}

// HasIndustryStats returns a boolean if a field has been set.
func (o *APIRoot) HasIndustryStats() bool {
	if o != nil && !IsNil(o.IndustryStats) {
		return true
	}

	return false
}

// SetIndustryStats gets a reference to the given IndustryStats and assigns it to the IndustryStats field.
func (o *APIRoot) SetIndustryStats(v IndustryStats) {
	o.IndustryStats = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *APIRoot) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIRoot) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *APIRoot) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *APIRoot) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o APIRoot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIRoot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.LoginId) {
		toSerialize["login_id"] = o.LoginId
	}
	if !IsNil(o.AccountName) {
		toSerialize["account_name"] = o.AccountName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.AvatarUrl) {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.MemberSince) {
		toSerialize["member_since"] = o.MemberSince
	}
	if !IsNil(o.PricingPlanType) {
		toSerialize["pricing_plan_type"] = o.PricingPlanType
	}
	if !IsNil(o.FirstPayment) {
		toSerialize["first_payment"] = o.FirstPayment
	}
	if !IsNil(o.AccountTimezone) {
		toSerialize["account_timezone"] = o.AccountTimezone
	}
	if !IsNil(o.AccountIndustry) {
		toSerialize["account_industry"] = o.AccountIndustry
	}
	if !IsNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !IsNil(o.ProEnabled) {
		toSerialize["pro_enabled"] = o.ProEnabled
	}
	if !IsNil(o.LastLogin) {
		toSerialize["last_login"] = o.LastLogin
	}
	if !IsNil(o.TotalSubscribers) {
		toSerialize["total_subscribers"] = o.TotalSubscribers
	}
	if !IsNil(o.IndustryStats) {
		toSerialize["industry_stats"] = o.IndustryStats
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableAPIRoot struct {
	value *APIRoot
	isSet bool
}

func (v NullableAPIRoot) Get() *APIRoot {
	return v.value
}

func (v *NullableAPIRoot) Set(val *APIRoot) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIRoot) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIRoot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIRoot(val *APIRoot) *NullableAPIRoot {
	return &NullableAPIRoot{value: val, isSet: true}
}

func (v NullableAPIRoot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIRoot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



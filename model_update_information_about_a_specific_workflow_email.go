/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateInformationAboutASpecificWorkflowEmail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInformationAboutASpecificWorkflowEmail{}

// UpdateInformationAboutASpecificWorkflowEmail Update information about an individual Automation workflow email.
type UpdateInformationAboutASpecificWorkflowEmail struct {
	Settings *CampaignSettings1 `json:"settings,omitempty"`
	Delay *AutomationDelay1 `json:"delay,omitempty"`
}

// NewUpdateInformationAboutASpecificWorkflowEmail instantiates a new UpdateInformationAboutASpecificWorkflowEmail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInformationAboutASpecificWorkflowEmail() *UpdateInformationAboutASpecificWorkflowEmail {
	this := UpdateInformationAboutASpecificWorkflowEmail{}
	return &this
}

// NewUpdateInformationAboutASpecificWorkflowEmailWithDefaults instantiates a new UpdateInformationAboutASpecificWorkflowEmail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInformationAboutASpecificWorkflowEmailWithDefaults() *UpdateInformationAboutASpecificWorkflowEmail {
	this := UpdateInformationAboutASpecificWorkflowEmail{}
	return &this
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *UpdateInformationAboutASpecificWorkflowEmail) GetSettings() CampaignSettings1 {
	if o == nil || IsNil(o.Settings) {
		var ret CampaignSettings1
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInformationAboutASpecificWorkflowEmail) GetSettingsOk() (*CampaignSettings1, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *UpdateInformationAboutASpecificWorkflowEmail) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given CampaignSettings1 and assigns it to the Settings field.
func (o *UpdateInformationAboutASpecificWorkflowEmail) SetSettings(v CampaignSettings1) {
	o.Settings = &v
}

// GetDelay returns the Delay field value if set, zero value otherwise.
func (o *UpdateInformationAboutASpecificWorkflowEmail) GetDelay() AutomationDelay1 {
	if o == nil || IsNil(o.Delay) {
		var ret AutomationDelay1
		return ret
	}
	return *o.Delay
}

// GetDelayOk returns a tuple with the Delay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInformationAboutASpecificWorkflowEmail) GetDelayOk() (*AutomationDelay1, bool) {
	if o == nil || IsNil(o.Delay) {
		return nil, false
	}
	return o.Delay, true
}

// HasDelay returns a boolean if a field has been set.
func (o *UpdateInformationAboutASpecificWorkflowEmail) HasDelay() bool {
	if o != nil && !IsNil(o.Delay) {
		return true
	}

	return false
}

// SetDelay gets a reference to the given AutomationDelay1 and assigns it to the Delay field.
func (o *UpdateInformationAboutASpecificWorkflowEmail) SetDelay(v AutomationDelay1) {
	o.Delay = &v
}

func (o UpdateInformationAboutASpecificWorkflowEmail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInformationAboutASpecificWorkflowEmail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.Delay) {
		toSerialize["delay"] = o.Delay
	}
	return toSerialize, nil
}

type NullableUpdateInformationAboutASpecificWorkflowEmail struct {
	value *UpdateInformationAboutASpecificWorkflowEmail
	isSet bool
}

func (v NullableUpdateInformationAboutASpecificWorkflowEmail) Get() *UpdateInformationAboutASpecificWorkflowEmail {
	return v.value
}

func (v *NullableUpdateInformationAboutASpecificWorkflowEmail) Set(val *UpdateInformationAboutASpecificWorkflowEmail) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInformationAboutASpecificWorkflowEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInformationAboutASpecificWorkflowEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInformationAboutASpecificWorkflowEmail(val *UpdateInformationAboutASpecificWorkflowEmail) *NullableUpdateInformationAboutASpecificWorkflowEmail {
	return &NullableUpdateInformationAboutASpecificWorkflowEmail{value: val, isSet: true}
}

func (v NullableUpdateInformationAboutASpecificWorkflowEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInformationAboutASpecificWorkflowEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



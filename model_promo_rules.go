/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PromoRules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromoRules{}

// PromoRules A collection of the store's promo rules.
type PromoRules struct {
	// The store id.
	StoreId *string `json:"store_id,omitempty"`
	// An array of objects, each representing promo rules defined for a store.
	PromoRules []ECommercePromoRule `json:"promo_rules,omitempty"`
	// The total number of items matching the query regardless of pagination.
	TotalItems *int32 `json:"total_items,omitempty"`
	// A list of link types and descriptions for the API schema documents.
	Links []ResourceLink `json:"_links,omitempty"`
}

// NewPromoRules instantiates a new PromoRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromoRules() *PromoRules {
	this := PromoRules{}
	return &this
}

// NewPromoRulesWithDefaults instantiates a new PromoRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromoRulesWithDefaults() *PromoRules {
	this := PromoRules{}
	return &this
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *PromoRules) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoRules) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *PromoRules) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *PromoRules) SetStoreId(v string) {
	o.StoreId = &v
}

// GetPromoRules returns the PromoRules field value if set, zero value otherwise.
func (o *PromoRules) GetPromoRules() []ECommercePromoRule {
	if o == nil || IsNil(o.PromoRules) {
		var ret []ECommercePromoRule
		return ret
	}
	return o.PromoRules
}

// GetPromoRulesOk returns a tuple with the PromoRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoRules) GetPromoRulesOk() ([]ECommercePromoRule, bool) {
	if o == nil || IsNil(o.PromoRules) {
		return nil, false
	}
	return o.PromoRules, true
}

// HasPromoRules returns a boolean if a field has been set.
func (o *PromoRules) HasPromoRules() bool {
	if o != nil && !IsNil(o.PromoRules) {
		return true
	}

	return false
}

// SetPromoRules gets a reference to the given []ECommercePromoRule and assigns it to the PromoRules field.
func (o *PromoRules) SetPromoRules(v []ECommercePromoRule) {
	o.PromoRules = v
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise.
func (o *PromoRules) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems) {
		var ret int32
		return ret
	}
	return *o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoRules) GetTotalItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItems) {
		return nil, false
	}
	return o.TotalItems, true
}

// HasTotalItems returns a boolean if a field has been set.
func (o *PromoRules) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given int32 and assigns it to the TotalItems field.
func (o *PromoRules) SetTotalItems(v int32) {
	o.TotalItems = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PromoRules) GetLinks() []ResourceLink {
	if o == nil || IsNil(o.Links) {
		var ret []ResourceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoRules) GetLinksOk() ([]ResourceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PromoRules) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []ResourceLink and assigns it to the Links field.
func (o *PromoRules) SetLinks(v []ResourceLink) {
	o.Links = v
}

func (o PromoRules) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromoRules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.PromoRules) {
		toSerialize["promo_rules"] = o.PromoRules
	}
	if !IsNil(o.TotalItems) {
		toSerialize["total_items"] = o.TotalItems
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullablePromoRules struct {
	value *PromoRules
	isSet bool
}

func (v NullablePromoRules) Get() *PromoRules {
	return v.value
}

func (v *NullablePromoRules) Set(val *PromoRules) {
	v.value = val
	v.isSet = true
}

func (v NullablePromoRules) IsSet() bool {
	return v.isSet
}

func (v *NullablePromoRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromoRules(val *PromoRules) *NullablePromoRules {
	return &NullablePromoRules{value: val, isSet: true}
}

func (v NullablePromoRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromoRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



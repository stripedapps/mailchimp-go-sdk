/*
Mailchimp Marketing API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.55
Contact: apihelp@mailchimp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ECommerceOrderLineItem2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ECommerceOrderLineItem2{}

// ECommerceOrderLineItem2 Information about a specific order line.
type ECommerceOrderLineItem2 struct {
	// A unique identifier for the product associated with the order line item.
	ProductId *string `json:"product_id,omitempty"`
	// A unique identifier for the product variant associated with the order line item.
	ProductVariantId *string `json:"product_variant_id,omitempty"`
	// The quantity of an order line item.
	Quantity *int32 `json:"quantity,omitempty"`
	// The price of an order line item.
	Price *float32 `json:"price,omitempty"`
	// The total discount amount applied to this line item.
	Discount *float32 `json:"discount,omitempty"`
}

// NewECommerceOrderLineItem2 instantiates a new ECommerceOrderLineItem2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewECommerceOrderLineItem2() *ECommerceOrderLineItem2 {
	this := ECommerceOrderLineItem2{}
	return &this
}

// NewECommerceOrderLineItem2WithDefaults instantiates a new ECommerceOrderLineItem2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewECommerceOrderLineItem2WithDefaults() *ECommerceOrderLineItem2 {
	this := ECommerceOrderLineItem2{}
	return &this
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ECommerceOrderLineItem2) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceOrderLineItem2) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ECommerceOrderLineItem2) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *ECommerceOrderLineItem2) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductVariantId returns the ProductVariantId field value if set, zero value otherwise.
func (o *ECommerceOrderLineItem2) GetProductVariantId() string {
	if o == nil || IsNil(o.ProductVariantId) {
		var ret string
		return ret
	}
	return *o.ProductVariantId
}

// GetProductVariantIdOk returns a tuple with the ProductVariantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceOrderLineItem2) GetProductVariantIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductVariantId) {
		return nil, false
	}
	return o.ProductVariantId, true
}

// HasProductVariantId returns a boolean if a field has been set.
func (o *ECommerceOrderLineItem2) HasProductVariantId() bool {
	if o != nil && !IsNil(o.ProductVariantId) {
		return true
	}

	return false
}

// SetProductVariantId gets a reference to the given string and assigns it to the ProductVariantId field.
func (o *ECommerceOrderLineItem2) SetProductVariantId(v string) {
	o.ProductVariantId = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ECommerceOrderLineItem2) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceOrderLineItem2) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ECommerceOrderLineItem2) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ECommerceOrderLineItem2) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ECommerceOrderLineItem2) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceOrderLineItem2) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ECommerceOrderLineItem2) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *ECommerceOrderLineItem2) SetPrice(v float32) {
	o.Price = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *ECommerceOrderLineItem2) GetDiscount() float32 {
	if o == nil || IsNil(o.Discount) {
		var ret float32
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECommerceOrderLineItem2) GetDiscountOk() (*float32, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *ECommerceOrderLineItem2) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float32 and assigns it to the Discount field.
func (o *ECommerceOrderLineItem2) SetDiscount(v float32) {
	o.Discount = &v
}

func (o ECommerceOrderLineItem2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ECommerceOrderLineItem2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductVariantId) {
		toSerialize["product_variant_id"] = o.ProductVariantId
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	return toSerialize, nil
}

type NullableECommerceOrderLineItem2 struct {
	value *ECommerceOrderLineItem2
	isSet bool
}

func (v NullableECommerceOrderLineItem2) Get() *ECommerceOrderLineItem2 {
	return v.value
}

func (v *NullableECommerceOrderLineItem2) Set(val *ECommerceOrderLineItem2) {
	v.value = val
	v.isSet = true
}

func (v NullableECommerceOrderLineItem2) IsSet() bool {
	return v.isSet
}

func (v *NullableECommerceOrderLineItem2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECommerceOrderLineItem2(val *ECommerceOrderLineItem2) *NullableECommerceOrderLineItem2 {
	return &NullableECommerceOrderLineItem2{value: val, isSet: true}
}

func (v NullableECommerceOrderLineItem2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECommerceOrderLineItem2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


